{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?7b43","webpack://_N_E/./pages/_error.tsx","webpack://_N_E/./common/input/button/SecondaryButton.ts","webpack://_N_E/./common/page/ErrorPage.tsx"],"names":["window","__NEXT_P","push","Error","props","statusCode","getInitialProps","context","res","SecondaryButton","styled","Button","theme","transparentize","interactive","normal","header","primary","backgroundModifier","active","accent","background","tertiary","muted","text","Container","div","SCREEN_SMALL","Header","h1","Message","p","ErrorDetails","CodeBlockContainer","STATUS_CODES","Map","ErrorPage","error","info","title","message","has","get","href","target","rel","onClick","Router","reload","String","stack","replace","componentStack"],"mappings":"gGACOA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,Y,2HCIV,SAASC,EAAMC,GAC5B,MAAM,WAAEC,GAAeD,EAEvB,OAAO,cAAC,IAAD,CAAWC,WAAYA,IAGhCF,EAAMG,gBAAmBC,IAAyC,MAChE,MAAO,CACLF,WAAU,UAAEE,EAAQC,WAAV,aAAE,EAAaH,c,kCChB7B,0EAIO,MAAMI,EAAkBC,YAAOC,KAAV,wCAAGD,CAAH,2LACV,EAAGE,WAAYC,YAAe,GAAKD,EAAME,YAAYC,UAC5D,EAAGH,WAAYA,EAAMI,OAAOC,UAGrB,EAAGL,WAAYA,EAAMM,mBAAmBC,SAItC,EAAGP,WAAYA,EAAMQ,OAAOH,UAI9B,EAAGL,WAAYA,EAAMS,WAAWC,WAC9B,EAAGV,WAAYA,EAAMS,WAAWC,WAKhC,EAAGV,WAAYA,EAAME,YAAYS,QACxC,EAAGX,WAAYA,EAAMY,KAAKD,S,2NCdvC,MAAME,EAAYf,IAAOgB,IAAV,wCAAGhB,CAAH,0EAOXiB,KAKEC,EAASlB,IAAOmB,GAAV,wCAAGnB,CAAH,wCAGD,EAAGE,WAAYA,EAAMI,OAAOC,UAIjCa,EAAUpB,IAAOqB,EAAV,wCAAGrB,CAAH,qEASPsB,EAAetB,YAAOuB,KAAV,wCAAGvB,CAAH,0CAKZwB,EAAoC,IAAIC,IAAI,CAChD,CAAC,IAAK,eACN,CAAC,IAAK,aACN,CAAC,IAAK,kBACN,CAAC,IAAK,sBACN,CAAC,IAAK,2BAUD,SAASC,EAAUhC,GAAuB,MAC/C,MAAM,MAAEiC,EAAF,KAASC,EAAT,MAAeC,EAAf,WAAsBlC,GAAeD,EAErCoC,EAAO,OACXD,QADW,IACXA,IACClC,GAAc6B,EAAaO,IAAIpC,GAC3B,SAAQA,MAAe6B,EAAaQ,IAAIrC,KACzC,mCAEN,OACE,eAACoB,EAAD,WACE,cAAC,IAAD,UACE,gCAAoBe,GAAT,WAEb,cAACZ,EAAD,UAASY,IACT,eAACV,EAAD,gEAC0D,IACxD,mBAAGa,KAAK,WAAWC,OAAO,QAAQC,IAAI,WAAtC,oCAFF,8BAK8B,IAC5B,mBACEF,KAAK,oCACLC,OAAO,QACPC,IAAI,WAHN,+BANF,OAeCxC,EACC,cAAC,IAAD,CAAMsC,KAAK,IAAX,SACE,cAAC,IAAD,qBAGF,cAAC,IAAD,CAAeG,QAAS,IAAMC,IAAOC,SAArC,qBAEDX,GAASC,GACR,qCACE,cAACR,EAAD,yEAGA,eAACE,EAAD,WACGiB,OAAOZ,GACP,KAFH,UAGGA,EAAMa,aAHT,aAGG,EAAaC,QAAQF,OAAOZ,GAAQ,IAAIc,QAAQ,WAAY,IAC5Db,EAAKc,2B","file":"static/chunks/pages/_error-ac19e76d9c6f7af70650.js","sourcesContent":["\n      (window.__NEXT_P = window.__NEXT_P || []).push([\n        \"/_error\",\n        function () {\n          return require(\"private-next-pages/_error.tsx\");\n        }\n      ]);\n    ","import type { NextPageContext } from \"next\"\nimport React from \"react\"\nimport { ErrorPage } from \"../common/page/ErrorPage\"\n\nexport type ErrorProps = {\n  statusCode?: number\n}\n\nexport default function Error(props: ErrorProps) {\n  const { statusCode } = props\n\n  return <ErrorPage statusCode={statusCode} />\n}\n\nError.getInitialProps = (context: NextPageContext): ErrorProps => {\n  return {\n    statusCode: context.res?.statusCode,\n  }\n}\n","import { transparentize } from \"polished\"\nimport styled from \"styled-components\"\nimport { Button } from \"./Button\"\n\nexport const SecondaryButton = styled(Button)`\n  border-color: ${({ theme }) => transparentize(0.5, theme.interactive.normal)};\n  color: ${({ theme }) => theme.header.primary};\n\n  &:hover {\n    background: ${({ theme }) => theme.backgroundModifier.active};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.accent.primary};\n  }\n\n  &:active {\n    background: ${({ theme }) => theme.background.tertiary};\n    border-color: ${({ theme }) => theme.background.tertiary};\n  }\n\n  &:disabled {\n    background: transparent;\n    border-color: ${({ theme }) => theme.interactive.muted};\n    color: ${({ theme }) => theme.text.muted};\n  }\n`\n","import Head from \"next/head\"\nimport Link from \"next/link\"\nimport Router from \"next/router\"\nimport React, { ErrorInfo } from \"react\"\nimport styled from \"styled-components\"\nimport { CodeBlockContainer } from \"../../modules/markdown/styles/CodeBlockContainer\"\nimport { PrimaryButton } from \"../input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../input/button/SecondaryButton\"\nimport { SCREEN_SMALL } from \"../layout/breakpoints\"\n\nconst Container = styled.div`\n  height: 100%;\n\n  overflow: auto;\n\n  padding: 64px 32px 0;\n\n  ${SCREEN_SMALL} {\n    padding: 32px 16px;\n  }\n`\n\nconst Header = styled.h1`\n  margin: 0;\n\n  color: ${({ theme }) => theme.header.primary};\n  font-size: 28px;\n`\n\nconst Message = styled.p`\n  margin: 16px 0;\n\n  max-width: 600px;\n\n  font-size: 16px;\n  line-height: 1.375;\n`\n\nconst ErrorDetails = styled(CodeBlockContainer)`\n  max-width: 1200px;\n  margin-bottom: 32px;\n`\n\nconst STATUS_CODES: Map<number, string> = new Map([\n  [400, \"Bad request\"],\n  [403, \"Forbidden\"],\n  [404, \"Page not found\"],\n  [405, \"Method not allowed\"],\n  [500, \"Internal server error\"],\n])\n\nexport type ErrorPageProps = {\n  error?: Error\n  info?: ErrorInfo\n  title?: string\n  statusCode?: number\n}\n\nexport function ErrorPage(props: ErrorPageProps) {\n  const { error, info, title, statusCode } = props\n\n  const message =\n    title ??\n    (statusCode && STATUS_CODES.has(statusCode)\n      ? `Error ${statusCode}: ${STATUS_CODES.get(statusCode)}`\n      : \"An unexpected error has occurred\")\n\n  return (\n    <Container>\n      <Head>\n        <title key=\"title\">{message}</title>\n      </Head>\n      <Header>{message}</Header>\n      <Message>\n        If you didn&apos;t expect this, please report it on the{\" \"}\n        <a href=\"/discord\" target=\"blank\" rel=\"noopener\">\n          Discord support server\n        </a>\n        , or create an issue on the{\" \"}\n        <a\n          href=\"https://github.com/discohook/site\"\n          target=\"blank\"\n          rel=\"noopener\"\n        >\n          GitHub repository\n        </a>\n        .\n      </Message>\n      {statusCode ? (\n        <Link href=\"/\">\n          <SecondaryButton>Home</SecondaryButton>\n        </Link>\n      ) : (\n        <PrimaryButton onClick={() => Router.reload()}>Refresh</PrimaryButton>\n      )}\n      {error && info && (\n        <>\n          <Message>\n            Technical details are provided below (please forward this)\n          </Message>\n          <ErrorDetails>\n            {String(error)}\n            {\"\\n\"}\n            {error.stack?.replace(String(error), \"\").replace(/^\\n|\\n$/g, \"\")}\n            {info.componentStack}\n          </ErrorDetails>\n        </>\n      )}\n    </Container>\n  )\n}\n"],"sourceRoot":""}