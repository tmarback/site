{"version":3,"sources":["webpack://_N_E/./modules/message/preview/formatTimestamp.ts","webpack://_N_E/./node_modules/date-fns/esm/getDate/index.js","webpack://_N_E/./modules/message/preview/EmbedTimestamp.tsx","webpack://_N_E/./node_modules/date-fns/esm/getMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/getYear/index.js"],"names":["formatTimestamp","date","base","isValid","day","String","getDate","padStart","month","getMonth","year","getYear","time","toLocaleString","hour","minute","hour12","difference","Date","setHours","now","getTimestampFormat","dirtyDate","arguments","dayOfMonth","EmbedTimestamp","props","timestamp","getFullYear"],"mappings":"qGAAA,sFAEA,MAeaA,EAAkB,CAACC,EAAYC,KAC1C,IAAKC,YAAQF,GAAO,MAAO,eAE3B,MAAMG,EAAMC,OAAOC,YAAQL,IAAOM,SAAS,EAAG,KACxCC,EAAQH,OAAOI,YAASR,GAAQ,GAAGM,SAAS,EAAG,KAC/CG,EAAOC,YAAQV,GAEfW,EAAOX,EAAKY,eAAe,QAAS,CACxCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGV,OA1ByB,EAACf,EAAYC,KACtC,MAGMe,GAHY,IAAIC,KAAKjB,GAAMkB,SAAS,EAAG,EAAG,EAAG,GACvC,IAAID,KAAJ,OAAShB,QAAT,IAASA,IAAQgB,KAAKE,OAAOD,SAAS,EAAG,EAAG,EAAG,IAJ7C,MAQd,OAAIF,GAAc,EAAU,OACxBA,EAAa,EAAU,YACvBA,EAAa,EAAU,QACvBA,EAAa,EAAU,WACpB,QAgBCI,CAAmBpB,EAAMC,IAC/B,IAAK,YACH,MAAQ,gBAAeU,IAEzB,IAAK,QACH,MAAQ,YAAWA,IAErB,IAAK,WACH,MAAQ,eAAcA,IAExB,QACE,MAAQ,GAAER,KAAOI,KAASE,O,kCCzChC,8DAwBe,SAASJ,EAAQgB,GAC9B,YAAa,EAAGC,WAChB,IAAItB,EAAO,YAAOqB,GACdE,EAAavB,EAAKK,UACtB,OAAOkB,I,gICrBF,SAASC,EAAeC,GAC7B,MAAM,UAAEC,GAAcD,EAEtB,OAAO,+BAAO1B,YAAgB2B,O,kCCVhC,8DAwBe,SAASlB,EAASa,GAC/B,YAAa,EAAGC,WAChB,IAAItB,EAAO,YAAOqB,GACdd,EAAQP,EAAKQ,WACjB,OAAOD,I,kCC5BT,8DAwBe,SAASG,EAAQW,GAC9B,YAAa,EAAGC,WAChB,IAAItB,EAAO,YAAOqB,GACdZ,EAAOT,EAAK2B,cAChB,OAAOlB","file":"static/chunks/206.a59909ea930f3813e082.js","sourcesContent":["import { getDate, getMonth, getYear, isValid } from \"date-fns\"\n\nconst ONE_DAY = 1000 * 60 * 60 * 24\n\nconst getTimestampFormat = (date: Date, base?: Date) => {\n  const givenDate = new Date(date).setHours(0, 0, 0, 0)\n  const now = new Date(base ?? Date.now()).setHours(0, 0, 0, 0)\n\n  const difference = (givenDate - now) / ONE_DAY\n\n  if (difference < -1) return \"full\"\n  if (difference < 0) return \"yesterday\"\n  if (difference < 1) return \"today\"\n  if (difference < 2) return \"tomorrow\"\n  return \"full\"\n}\n\nexport const formatTimestamp = (date: Date, base?: Date) => {\n  if (!isValid(date)) return \"Invalid date\"\n\n  const day = String(getDate(date)).padStart(2, \"0\")\n  const month = String(getMonth(date) + 1).padStart(2, \"0\")\n  const year = getYear(date)\n\n  const time = date.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"numeric\",\n    hour12: true,\n  })\n\n  switch (getTimestampFormat(date, base)) {\n    case \"yesterday\": {\n      return `Yesterday at ${time}`\n    }\n    case \"today\": {\n      return `Today at ${time}`\n    }\n    case \"tomorrow\": {\n      return `Tomorrow at ${time}`\n    }\n    default: {\n      return `${day}/${month}/${year}`\n    }\n  }\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import React from \"react\"\nimport { formatTimestamp } from \"./formatTimestamp\"\n\nexport type EmbedTimestampProps = {\n  timestamp: Date\n}\n\nexport function EmbedTimestamp(props: EmbedTimestampProps) {\n  const { timestamp } = props\n\n  return <span>{formatTimestamp(timestamp)}</span>\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}"],"sourceRoot":""}