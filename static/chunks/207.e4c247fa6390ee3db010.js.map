{"version":3,"sources":["webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js","webpack://_N_E/./modules/message/helpers/messageOf.ts","webpack://_N_E/./node_modules/idb/build/esm/wrap-idb-value.js","webpack://_N_E/./node_modules/idb/build/esm/index.js","webpack://_N_E/./modules/database/connection/showUpgradeBlockedMessage.ts","webpack://_N_E/./common/object/mapKeys.ts","webpack://_N_E/./common/object/toSnakeCase.ts","webpack://_N_E/./modules/database/connection/upgradeDatabase.ts","webpack://_N_E/./modules/database/connection/openDatabase.ts","webpack://_N_E/./modules/database/DatabaseManager.ts","webpack://_N_E/./modules/database/DatabaseManagerContext.ts","webpack://_N_E/./modules/database/persist/PushNotificationModal.tsx","webpack://_N_E/./modules/database/persist/PersistentStorageWarning.tsx","webpack://_N_E/./common/dom/downloadBlob.ts","webpack://_N_E/./modules/database/backup/BackupManager.ts","webpack://_N_E/./modules/database/backup/BackupManagerContext.ts","webpack://_N_E/./modules/database/backup/modal/BackupCreationControls.tsx","webpack://_N_E/./icons/save.tsx","webpack://_N_E/./icons/trash.tsx","webpack://_N_E/./icons/upload.tsx","webpack://_N_E/./modules/database/backup/modal/DeletionConfirmationModal.tsx","webpack://_N_E/./modules/database/backup/modal/BackupItem.tsx","webpack://_N_E/./modules/database/backup/modal/BackupList.tsx","webpack://_N_E/./modules/database/backup/modal/BackupsModal.tsx"],"names":["_initializerDefineProperty","target","property","descriptor","context","Object","defineProperty","enumerable","configurable","writable","value","initializer","call","_applyDecoratedDescriptor","decorators","desc","keys","forEach","key","slice","reverse","reduce","decorator","undefined","messageOf","data","snapshot","content","username","avatar","avatar_url","embeds","embedData","embed","length","url","gallery","image","push","title","description","author","name","authorUrl","authorIcon","icon_url","footer","text","footerIcon","timestamp","Date","Number","NaN","filter","Boolean","thumbnail","color","ColorModel","create","setRaw","fields","fieldData","field","inline","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","get","objectStoreNames","objectStore","wrap","set","has","wrapFunction","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","args","apply","unwrap","this","storeNames","tx","sort","transformCachableValue","done","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","c","Proxy","IDBRequest","request","promise","success","result","then","catch","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","store","index","shift","all","oldTraps","callback","showUpgradeBlockedMessage","container","document","createElement","id","style","position","top","right","bottom","left","background","padding","header","append","blockedMessage","closeTabsMessage","body","isObject","mapKeys","fn","Array","isArray","map","entries","toSnakeCase","match","toLowerCase","openDatabase","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","openDB","database","cursor","openCursor","update","message","createObjectStore","keyPath","autoIncrement","createIndex","unique","backupStore","existingBackups","Set","nameCursor","openKeyCursor","add","put","rest","messages","webhookUrl","reference","delete","backup","targets","upgradeDatabase","localStorage","setItem","querySelector","remove","console","DatabaseManager","constructor","markAsInitialized","initialized","navigator","storage","persisted","window","Notification","requestPermission","persist","persistenceMessageDismissed","observable","computed","DatabaseManagerContext","createContext","displayName","DatabaseManagerProvider","Provider","PushNotificationModal","props","databaseManager","modal","useRequiredContext","ModalContext","ModalContainer","ModalHeader","ModalTitle","ModalAction","icon","label","onClick","dismiss","ModalBody","Markdown","ModalFooter","SecondaryButton","PrimaryButton","requestPersistence","Container","styled","div","theme","secondary","Header","h5","primary","Buttons","ButtonRow","PersistentStorageWarning","modalManager","ModalManagerContext","useObserver","spawn","render","downloadBlob","blob","URL","createObjectURL","anchor","href","download","click","revokeObjectURL","BackupManager","editorManager","loadBackupList","backups","primaryKey","runInAction","getKey","fetch","getId","files","backupData","Blob","JSON","stringify","type","number","proposedName","exportData","parse","saveBackup","getSafeBackupName","BackupManagerContext","BackupManagerProvider","BackupCreationControls","backupManager","backupName","setBackupName","useState","InputField","onChange","disabled","trim","save","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","trash","upload","DeletionConfirmationModal","deleteBackup","li","backgroundModifier","accent","Button","BackupName","ellipsis","BackupItem","ActionButtons","actions","handler","loadBackup","exportBackup","overflow","copy","ul","BackupList","search","setSearch","toLocaleLowerCase","BackupsModal","useLazyValue","fileInputRef","useRef","ref","display","file","item","importBackups","shouldShowPersistenceWarning","exportAll","current"],"mappings":"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","file":"static/chunks/207.e4c247fa6390ee3db010.js","sourcesContent":["export default function _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}","export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}","import type { SnapshotIn } from \"mobx-state-tree\"\nimport { ColorModel } from \"../../../common/input/color/ColorModel\"\nimport type { MessageData } from \"../state/data/MessageData\"\nimport type { MessageModel } from \"../state/models/MessageModel\"\n\nexport const messageOf = (data: MessageData) => {\n  const snapshot: Record<string, unknown> = {}\n\n  snapshot.content = data.content ?? \"\"\n  snapshot.username = data.username ?? \"\"\n  snapshot.avatar = data.avatar_url ?? \"\"\n\n  const embeds: Record<string, unknown>[] = []\n  snapshot.embeds = embeds\n\n  for (const embedData of data.embeds ?? []) {\n    let embed = embeds.length > 0 ? embeds[embeds.length - 1] : undefined\n\n    if (embed?.url && embed.url === embedData.url) {\n      const gallery = embed.gallery as string[]\n      if (embedData.image?.url && gallery.length < 4) {\n        gallery.push(embedData.image.url)\n      }\n\n      continue\n    }\n\n    embed = {}\n    embeds.push(embed)\n\n    embed.title = embedData.title ?? \"\"\n    embed.description = embedData.description ?? \"\"\n    embed.url = embedData.url ?? \"\"\n    embed.author = embedData.author?.name ?? \"\"\n    embed.authorUrl = embedData.author?.url ?? \"\"\n    embed.authorIcon = embedData.author?.icon_url ?? \"\"\n    embed.footer = embedData.footer?.text ?? \"\"\n    embed.footerIcon = embedData.footer?.icon_url ?? \"\"\n    embed.timestamp = new Date(embedData.timestamp ?? Number.NaN)\n    embed.gallery = [embedData.image?.url ?? \"\"].filter(Boolean)\n    embed.thumbnail = embedData.thumbnail?.url ?? \"\"\n\n    const color = ColorModel.create()\n    color.setRaw(embedData.color ?? null)\n    embed.color = color\n\n    const fields: Record<string, unknown>[] = []\n    embed.fields = fields\n\n    for (const fieldData of embedData.fields ?? []) {\n      const field: Record<string, unknown> = {}\n      fields.push(field)\n\n      field.name = fieldData.name ?? \"\"\n      field.value = fieldData.value ?? \"\"\n      field.inline = fieldData.inline ?? false\n    }\n  }\n\n  return snapshot as SnapshotIn<typeof MessageModel>\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","export const showUpgradeBlockedMessage = () => {\n  const container = document.createElement(\"div\")\n  container.id = \"db-upgrade-blocked\"\n  container.style.position = \"absolute\"\n  container.style.top = \"0\"\n  container.style.right = \"0\"\n  container.style.bottom = \"0\"\n  container.style.left = \"0\"\n  container.style.background = \"rgba(0, 0, 0, 0.85)\"\n  container.style.padding = \"16px\"\n\n  const header = document.createElement(\"h1\")\n  header.style.color = \"#ffffff\"\n  header.append(\"Discohook's local database needs an upgrade\")\n\n  const blockedMessage = document.createElement(\"p\")\n  blockedMessage.append(\n    \"However, the upgrade can't proceed because there are older sessions of Discohook open.\",\n  )\n\n  const closeTabsMessage = document.createElement(\"p\")\n  closeTabsMessage.append(\"Please close all Discohook tabs before continuing.\")\n\n  container.append(header, blockedMessage, closeTabsMessage)\n  document.body.append(container)\n}\n","const isObject = (value: unknown) => typeof value === \"object\" && value !== null\n\nexport const mapKeys = (\n  object: unknown,\n  fn: (key: string) => string,\n): Record<string, unknown> | unknown[] => {\n  if (Array.isArray(object)) {\n    return object.map(value => (isObject(value) ? mapKeys(value, fn) : value))\n  }\n\n  const result: Record<string, unknown> = {}\n\n  for (const [key, value] of Object.entries(\n    object as Record<string, unknown>,\n  )) {\n    if (isObject(value)) {\n      result[fn(key)] = mapKeys(value, fn)\n    } else {\n      result[fn(key)] = value\n    }\n  }\n\n  return result\n}\n","import { mapKeys } from \"./mapKeys\"\n\nexport const toSnakeCase = (object: unknown) =>\n  mapKeys(object, key =>\n    key.replace(/[A-Z]/g, match => `_${match.toLowerCase()}`),\n  )\n","/* eslint-disable no-await-in-loop */\n\nimport type { IDBPDatabase, IDBPTransaction } from \"idb\"\nimport { toSnakeCase } from \"../../../common/object/toSnakeCase\"\n\nexport const upgradeDatabase = async (\n  database: IDBPDatabase,\n  transaction: IDBPTransaction<unknown, string[], \"versionchange\">,\n  oldVersion: number,\n) => {\n  if (oldVersion < 2 && oldVersion >= 1) {\n    let cursor = await transaction.objectStore(\"backups\").openCursor()\n\n    while (cursor) {\n      await cursor.update({\n        name: cursor.key,\n        message: cursor.value,\n      })\n\n      cursor = await cursor.continue()\n    }\n  }\n\n  if (oldVersion < 3) {\n    database.createObjectStore(\"backup\", {\n      keyPath: \"id\",\n      autoIncrement: true,\n    })\n\n    const backupStore = transaction.objectStore(\"backup\")\n    backupStore.createIndex(\"name\", \"name\", {\n      unique: true,\n    })\n  }\n\n  if (oldVersion < 4 && oldVersion >= 1) {\n    const backupStore = transaction.objectStore(\"backup\")\n\n    const existingBackups = new Set<IDBValidKey>()\n    let nameCursor = await backupStore.index(\"name\").openKeyCursor()\n\n    while (nameCursor) {\n      existingBackups.add(nameCursor.key)\n      nameCursor = await nameCursor.continue()\n    }\n\n    let cursor = await transaction.objectStore(\"backups\").openCursor()\n\n    while (cursor) {\n      if (!existingBackups.has(cursor.key)) {\n        await backupStore.put({\n          ...cursor.value,\n          name: cursor.key,\n          message: toSnakeCase(cursor.value.message),\n        })\n      }\n\n      cursor = await cursor.continue()\n    }\n  }\n\n  if (oldVersion < 5 && oldVersion >= 1) {\n    const backupStore = transaction.objectStore(\"backup\")\n\n    let cursor = await backupStore.openCursor()\n\n    while (cursor) {\n      const { message, ...rest } = cursor.value\n\n      await backupStore.put({\n        ...rest,\n        messages: [message],\n      })\n\n      cursor = await cursor.continue()\n    }\n  }\n\n  if (oldVersion < 6 && oldVersion >= 1) {\n    const backupStore = transaction.objectStore(\"backup\")\n\n    let cursor = await backupStore.openCursor()\n\n    while (cursor) {\n      const { webhookUrl, ...rest } = cursor.value\n\n      await backupStore.put({\n        ...rest,\n        target: {\n          url: webhookUrl,\n        },\n      })\n\n      cursor = await cursor.continue()\n    }\n  }\n\n  if (oldVersion < 9 && oldVersion >= 1) {\n    const backupStore = transaction.objectStore(\"backup\")\n\n    let cursor = await backupStore.openCursor()\n\n    while (cursor) {\n      const { id, name, messages, target } = cursor.value\n\n      if (name) {\n        await backupStore.put({\n          id,\n          name,\n          messages: messages.map((data: Record<string, unknown>) => ({\n            data: \"data\" in data ? data.data : data,\n            reference: \"reference\" in data ? data.reference : target.message,\n          })),\n          target: {\n            url: target.url,\n          },\n        })\n      } else {\n        await backupStore.delete(id)\n      }\n\n      cursor = await cursor.continue()\n    }\n  }\n\n  if (oldVersion < 10 && oldVersion >= 1) {\n    const backupStore = transaction.objectStore(\"backup\")\n\n    let cursor = await backupStore.openCursor()\n\n    while (cursor) {\n      const { target, ...backup } = cursor.value\n\n      await backupStore.put({\n        ...backup,\n        targets: [{ url: target.url ?? \"\" }],\n      })\n\n      cursor = await cursor.continue()\n    }\n  }\n}\n","import { IDBPDatabase, IDBPTransaction, openDB } from \"idb\"\nimport type { Schema } from \"../Schema\"\nimport { showUpgradeBlockedMessage } from \"./showUpgradeBlockedMessage\"\nimport { upgradeDatabase } from \"./upgradeDatabase\"\n\nexport const openDatabase = async () => {\n  return openDB<Schema>(\"discohook\", 10, {\n    upgrade: (database, oldVersion, newVersion, transaction) => {\n      // Casting to unknown schema, because upgrades shouldn't assume how the\n      // schema looks at that time\n      upgradeDatabase(\n        database as IDBPDatabase,\n        transaction as IDBPTransaction<unknown, string[], \"versionchange\">,\n        oldVersion,\n      )\n        .then(() => {\n          localStorage.setItem(\"database-upgraded-version\", \"10\")\n          document.querySelector(\"#db-upgrade-blocked\")?.remove()\n        })\n        .catch(error => {\n          console.error(\"Error on database upgrade:\", error)\n        })\n    },\n    blocked: showUpgradeBlockedMessage,\n  })\n}\n","import type { IDBPDatabase } from \"idb\"\nimport { computed, observable } from \"mobx\"\nimport { openDatabase } from \"./connection/openDatabase\"\nimport type { Schema } from \"./Schema\"\n\nexport class DatabaseManager {\n  initialized: Promise<void>\n  database!: IDBPDatabase<Schema>\n\n  @observable persisted = true\n  @observable persistenceMessageDismissed = false\n\n  constructor() {\n    let markAsInitialized: () => void\n    this.initialized = new Promise(resolve => {\n      markAsInitialized = resolve\n    })\n\n    if (typeof window === \"undefined\") return\n\n    if (\"storage\" in navigator) {\n      navigator.storage\n        .persisted()\n        .then(persisted => {\n          this.persisted = persisted\n        })\n        .catch(() => {})\n    }\n\n    openDatabase()\n      .then(database => {\n        this.database = database\n        markAsInitialized()\n      })\n      .catch(error => {\n        console.error(\"Failed to open database:\", error)\n      })\n  }\n\n  async requestPersistence() {\n    if (\"chrome\" in window) {\n      await Notification.requestPermission()\n    }\n\n    if (\"storage\" in navigator) {\n      this.persisted = await navigator.storage.persist()\n    }\n  }\n\n  @computed get shouldShowPersistenceWarning() {\n    return !this.persisted && !this.persistenceMessageDismissed\n  }\n}\n","import { createContext } from \"react\"\nimport type { DatabaseManager } from \"./DatabaseManager\"\n\nexport const DatabaseManagerContext = createContext<DatabaseManager | null>(\n  null,\n)\n\nDatabaseManagerContext.displayName = \"DatabaseManagerContext\"\n\nexport const DatabaseManagerProvider = DatabaseManagerContext.Provider\n","import React from \"react\"\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\"\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\"\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\"\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\"\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\"\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\"\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\"\nimport { ModalContext } from \"../../../common/modal/ModalContext\"\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\nimport { remove } from \"../../../icons/remove\"\nimport { Markdown } from \"../../markdown/Markdown\"\nimport type { DatabaseManager } from \"../DatabaseManager\"\n\nexport type PushNotificationModalProps = {\n  databaseManager: DatabaseManager\n}\n\nexport function PushNotificationModal(props: PushNotificationModalProps) {\n  const { databaseManager } = props\n\n  const modal = useRequiredContext(ModalContext)\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <ModalTitle>Notice</ModalTitle>\n        <ModalAction\n          icon={remove}\n          label=\"Close\"\n          onClick={() => modal.dismiss()}\n        />\n      </ModalHeader>\n      <ModalBody>\n        <Markdown\n          content={\n            \"Chrome based browsers do not allow manual control of persistent\" +\n            \" storage. As a workaround, you can grant this site permission to\" +\n            \" send notifications to allow the site to use persistent storage.\"\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <SecondaryButton onClick={() => modal.dismiss()}>\n          Cancel\n        </SecondaryButton>\n        <PrimaryButton\n          onClick={async () => {\n            modal.dismiss()\n            await databaseManager.requestPersistence()\n          }}\n        >\n          Request permission\n        </PrimaryButton>\n      </ModalFooter>\n    </ModalContainer>\n  )\n}\n","import { useObserver } from \"mobx-react-lite\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\"\nimport { ButtonRow } from \"../../../common/layout/ButtonRow\"\nimport { ModalManagerContext } from \"../../../common/modal/ModalManagerContext\"\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\nimport { Markdown } from \"../../markdown/Markdown\"\nimport { DatabaseManagerContext } from \"../DatabaseManagerContext\"\nimport { PushNotificationModal } from \"./PushNotificationModal\"\n\nconst Container = styled.div`\n  margin-top: 16px;\n  padding: 16px;\n\n  background: ${({ theme }) => theme.background.secondary};\n  border-radius: 3px;\n`\n\nconst Header = styled.h5`\n  margin: 0 0 8px;\n\n  color: ${({ theme }) => theme.header.primary};\n  font-size: 1em;\n  font-weight: 500;\n  line-height: 1.375;\n`\n\nconst Buttons = styled(ButtonRow)`\n  margin-top: 16px;\n`\n\nexport function PersistentStorageWarning() {\n  const modalManager = useRequiredContext(ModalManagerContext)\n  const databaseManager = useRequiredContext(DatabaseManagerContext)\n\n  return useObserver(() => (\n    <Container>\n      <Header>Warning</Header>\n      <Markdown\n        content={\n          \"Your browser did not grant permission to use persistent storage\" +\n          \" for this site. Data stored might be deleted by the browser when\" +\n          \" this permission is not granted.\"\n        }\n      />\n      <Buttons>\n        <PrimaryButton\n          onClick={async () => {\n            if (\"chrome\" in window) {\n              modalManager.spawn({\n                render: () => (\n                  <PushNotificationModal databaseManager={databaseManager} />\n                ),\n              })\n            } else {\n              await databaseManager.requestPersistence()\n            }\n          }}\n        >\n          Request permission\n        </PrimaryButton>\n        <SecondaryButton\n          onClick={() => {\n            databaseManager.persistenceMessageDismissed = true\n          }}\n        >\n          Dismiss\n        </SecondaryButton>\n      </Buttons>\n    </Container>\n  ))\n}\n","export const downloadBlob = (blob: Blob, name: string) => {\n  const url = URL.createObjectURL(blob)\n\n  const anchor = document.createElement(\"a\")\n  document.body.append(anchor)\n\n  anchor.href = url\n  anchor.download = name\n\n  anchor.click()\n\n  anchor.remove()\n  URL.revokeObjectURL(url)\n}\n","/* eslint-disable no-await-in-loop */\n\nimport { observable, runInAction } from \"mobx\"\nimport { downloadBlob } from \"../../../common/dom/downloadBlob\"\nimport { toSnakeCase } from \"../../../common/object/toSnakeCase\"\nimport type { EditorManagerLike } from \"../../editor/EditorManager\"\nimport { messageOf } from \"../../message/helpers/messageOf\"\nimport type { MessageData } from \"../../message/state/data/MessageData\"\nimport type { DatabaseManager } from \"../DatabaseManager\"\nimport type { Backup } from \"./types/Backup\"\nimport type { BackupData } from \"./types/BackupData\"\nimport type { ExportData } from \"./types/ExportData\"\n\nexport class BackupManager {\n  private readonly databaseManager: DatabaseManager\n  private readonly editorManager: EditorManagerLike\n\n  @observable backups: BackupData[] = []\n\n  constructor(\n    databaseManager: DatabaseManager,\n    editorManager: EditorManagerLike,\n  ) {\n    this.databaseManager = databaseManager\n    this.editorManager = editorManager\n\n    databaseManager.initialized\n      .then(async () => {\n        await this.loadBackupList()\n      })\n      .catch(() => {})\n  }\n\n  private async loadBackupList() {\n    const backups: BackupData[] = []\n\n    let cursor = await this.databaseManager.database\n      .transaction(\"backup\")\n      .objectStore(\"backup\")\n      .index(\"name\")\n      .openKeyCursor()\n\n    while (cursor) {\n      backups.push({\n        id: cursor.primaryKey,\n        name: cursor.key,\n      })\n\n      cursor = await cursor.continue()\n    }\n\n    runInAction(() => {\n      this.backups = backups\n    })\n  }\n\n  private async getId(name: string) {\n    return this.databaseManager.database\n      .transaction(\"backup\")\n      .objectStore(\"backup\")\n      .index(\"name\")\n      .getKey(name)\n  }\n\n  async loadBackup(name: string) {\n    const backup = await this.databaseManager.database\n      .transaction(\"backup\")\n      .objectStore(\"backup\")\n      .index(\"name\")\n      .get(name)\n\n    if (!backup) return\n\n    this.editorManager.set(\n      \"messages\",\n      backup.messages.map(({ data, ...message }) => ({\n        ...messageOf(data),\n        ...message,\n      })),\n    )\n    this.editorManager.set(\"targets\", backup.targets)\n    for (const target of this.editorManager.targets) {\n      target.fetch().catch(() => {})\n    }\n  }\n\n  async saveBackup(backup: string | Backup) {\n    if (typeof backup === \"string\") {\n      const id = await this.getId(backup)\n\n      backup = {\n        id,\n        name: backup,\n        messages: this.editorManager.messages.map(message => ({\n          data: {\n            ...message.data,\n            files: undefined,\n          },\n          reference: message.reference,\n        })),\n        targets: this.editorManager.targets.map(target => ({\n          url: target.url,\n        })),\n      }\n    } else {\n      backup = {\n        ...backup,\n        id: await this.getId(backup.name),\n      }\n    }\n\n    if (!backup.id) delete backup.id\n\n    await this.databaseManager.database\n      .transaction(\"backup\", \"readwrite\")\n      .objectStore(\"backup\")\n      .put(backup)\n\n    await this.loadBackupList()\n  }\n\n  async deleteBackup(name: string) {\n    const id = await this.getId(name)\n    if (!id) return\n\n    await this.databaseManager.database\n      .transaction(\"backup\", \"readwrite\")\n      .objectStore(\"backup\")\n      .delete(id)\n\n    await this.loadBackupList()\n  }\n\n  async exportBackup(name: string) {\n    const backup = await this.databaseManager.database\n      .transaction(\"backup\")\n      .objectStore(\"backup\")\n      .index(\"name\")\n      .get(name)\n\n    if (!backup) return\n\n    const backupData: ExportData = {\n      version: 7,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      backups: [backup].map(({ id, ...backup }) => backup),\n    }\n\n    const blob = new Blob([JSON.stringify(backupData, undefined, 2), \"\\n\"], {\n      type: \"application/json\",\n    })\n\n    downloadBlob(blob, `${name}.json`)\n  }\n\n  async exportAll() {\n    const backups: Backup[] = []\n\n    let cursor = await this.databaseManager.database\n      .transaction(\"backup\")\n      .objectStore(\"backup\")\n      .openCursor()\n\n    while (cursor) {\n      backups.push({\n        ...cursor.value,\n        id: undefined,\n      })\n\n      cursor = await cursor.continue()\n    }\n\n    const backupData: ExportData = {\n      version: 7,\n      backups,\n    }\n\n    const blob = new Blob([JSON.stringify(backupData, undefined, 2), \"\\n\"], {\n      type: \"application/json\",\n    })\n\n    downloadBlob(blob, \"backups.json\")\n  }\n\n  private async getSafeBackupName(name: string) {\n    if (!(await this.getId(name))) {\n      return name\n    }\n\n    for (let number = 1; true; number++) {\n      const proposedName = `${name} (${number})`\n\n      if (!(await this.getId(proposedName))) {\n        return proposedName\n      }\n    }\n  }\n\n  async importBackups(blob: Blob) {\n    let exportData = JSON.parse(await blob.text()) as ExportData\n\n    switch (exportData.version) {\n      case 1:\n      case 2: {\n        exportData = {\n          version: 3,\n          backups: [\n            {\n              name: exportData.name,\n              message: toSnakeCase(exportData.message) as MessageData,\n            },\n          ],\n        }\n      }\n      // falls through\n      case 3: {\n        exportData = {\n          version: 4,\n          backups: exportData.backups.map(({ message, ...backup }) => ({\n            ...backup,\n            messages: [message],\n          })),\n        }\n      }\n      // falls through\n      case 4:\n        exportData = {\n          version: 5,\n          backups: exportData.backups.map(({ webhookUrl, ...backup }) => ({\n            ...backup,\n            target: {\n              url: webhookUrl,\n            },\n          })),\n        }\n      // falls through\n      case 5:\n        exportData = {\n          version: 6,\n          backups: exportData.backups.map(\n            ({ messages, target, ...backup }) => ({\n              ...backup,\n              messages: messages.map(data => ({\n                data,\n                reference: target.message,\n              })),\n              target: {\n                url: target.url,\n              },\n            }),\n          ),\n        }\n      // falls through\n      case 6:\n        exportData = {\n          version: 7,\n          backups: exportData.backups.map(({ target, ...backup }) => ({\n            ...backup,\n            targets: [{ url: target.url ?? \"\" }],\n          })),\n        }\n      // falls through\n      case 7:\n        for (const backup of exportData.backups) {\n          await this.saveBackup({\n            ...backup,\n            name: await this.getSafeBackupName(backup.name),\n            id: undefined,\n          })\n        }\n    }\n  }\n}\n","import { createContext } from \"react\"\nimport type { BackupManager } from \"./BackupManager\"\n\nexport const BackupManagerContext = createContext<BackupManager | null>(null)\n\nBackupManagerContext.displayName = \"BackupManagerContext\"\n\nexport const BackupManagerProvider = BackupManagerContext.Provider\n","import { useObserver } from \"mobx-react-lite\"\nimport React, { useState } from \"react\"\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\"\nimport { InputField } from \"../../../../common/input/text/InputField\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { BackupManagerContext } from \"../BackupManagerContext\"\n\nexport function BackupCreationControls() {\n  const backupManager = useRequiredContext(BackupManagerContext)\n\n  const [backupName, setBackupName] = useState(\"\")\n\n  return useObserver(() => (\n    <InputField\n      id=\"backup-name\"\n      value={backupName}\n      onChange={setBackupName}\n      label=\"Backup name\"\n    >\n      <PrimaryButton\n        disabled={backupName.length === 0}\n        onClick={async () => {\n          await backupManager.saveBackup(backupName.trim())\n          setBackupName(\"\")\n        }}\n      >\n        {backupManager.backups.some(backup => backup.name === backupName.trim())\n          ? \"Overwrite\"\n          : \"Save\"}\n      </PrimaryButton>\n    </InputField>\n  ))\n}\n","import React from \"react\"\n\nexport const save = (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n    <path\n      d=\"M11 15V9H5V15M5 1L4.99999 5H10M13.6667 15H2.33333C1.97971 15 1.64057 14.8595 1.39052 14.6095C1.14048 14.3594 1 14.0203 1 13.6667V2.33333C1 1.97971 1.14048 1.64057 1.39052 1.39052C1.64057 1.14048 1.97971 1 2.33333 1H11.6667L15 4.33333V13.6667C15 14.0203 14.8595 14.3594 14.6095 14.6095C14.3594 14.8595 14.0203 15 13.6667 15Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n","import React from \"react\"\n\nexport const trash = (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n    <path\n      d=\"M1 4L2.99999 3.99998M2.99999 3.99998V13.5C2.99999 14.3284 3.67156 15 4.49999 15L11.5 15C12.3284 15 13 14.3284 13 13.5V4M2.99999 3.99998H5.33333M13 4H15M13 4L10.6667 3.99998M5.33333 3.99998V2.5C5.33333 1.67157 6.00491 1 6.83333 1H9.16667C9.99509 1 10.6667 1.67157 10.6667 2.5V3.99998M5.33333 3.99998H10.6667\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n","import React from \"react\"\n\nexport const upload = (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n    <path\n      d=\"M14 10V12.6667C14 13.0203 13.8595 13.3594 13.6095 13.6095C13.3594 13.8595 13.0203 14 12.6667 14H3.33333C2.97971 14 2.64057 13.8595 2.39052 13.6095C2.14048 13.3594 2 13.0203 2 12.6667V10M4.66667 5.33333L8 2M8 2L11.3333 5.33333M8 2V10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n","import { useObserver } from \"mobx-react-lite\"\nimport React from \"react\"\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../../../../common/input/button/SecondaryButton\"\nimport { ModalAction } from \"../../../../common/modal/layout/ModalAction\"\nimport { ModalBody } from \"../../../../common/modal/layout/ModalBody\"\nimport { ModalContainer } from \"../../../../common/modal/layout/ModalContainer\"\nimport { ModalFooter } from \"../../../../common/modal/layout/ModalFooter\"\nimport { ModalHeader } from \"../../../../common/modal/layout/ModalHeader\"\nimport { ModalTitle } from \"../../../../common/modal/layout/ModalTitle\"\nimport { ModalContext } from \"../../../../common/modal/ModalContext\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { remove } from \"../../../../icons/remove\"\nimport { Markdown } from \"../../../markdown/Markdown\"\nimport type { BackupManager } from \"../BackupManager\"\nimport type { BackupData } from \"../types/BackupData\"\n\nexport type DeletionConfirmationModalProps = {\n  backupManager: BackupManager\n  backup: BackupData\n}\n\nexport function DeletionConfirmationModal(\n  props: DeletionConfirmationModalProps,\n) {\n  const { backupManager, backup } = props\n\n  const modal = useRequiredContext(ModalContext)\n\n  return useObserver(() => (\n    <ModalContainer>\n      <ModalHeader>\n        <ModalTitle>Delete Backup</ModalTitle>\n        <ModalAction\n          icon={remove}\n          label=\"Close\"\n          onClick={() => modal.dismiss()}\n        />\n      </ModalHeader>\n      <ModalBody>\n        <Markdown\n          content={\n            `Are you sure you want to delete \"${backup.name}\"? This action` +\n            \" cannot be undone.\"\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <SecondaryButton onClick={() => modal.dismiss()}>\n          Cancel\n        </SecondaryButton>\n        <PrimaryButton\n          onClick={async () => {\n            await backupManager.deleteBackup(backup.name)\n            modal.dismiss()\n          }}\n        >\n          Delete\n        </PrimaryButton>\n      </ModalFooter>\n    </ModalContainer>\n  ))\n}\n","import { useObserver } from \"mobx-react-lite\"\nimport { ellipsis } from \"polished\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Button } from \"../../../../common/input/button/Button\"\nimport { ActionButtons } from \"../../../../common/layout/ActionButtons\"\nimport { ModalManagerContext } from \"../../../../common/modal/ModalManagerContext\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { copy } from \"../../../../icons/copy\"\nimport { save } from \"../../../../icons/save\"\nimport { trash } from \"../../../../icons/trash\"\nimport { upload } from \"../../../../icons/upload\"\nimport { BackupManagerContext } from \"../BackupManagerContext\"\nimport type { BackupData } from \"../types/BackupData\"\nimport { DeletionConfirmationModal } from \"./DeletionConfirmationModal\"\n\nconst Container = styled.li`\n  height: 48px;\n\n  display: flex;\n  align-items: center;\n\n  list-style: none;\n\n  border: 0 solid ${({ theme }) => theme.backgroundModifier.accent};\n\n  & + & {\n    border-top-width: 1px;\n  }\n\n  & > ${Button} {\n    margin: 0;\n  }\n`\n\nconst BackupName = styled.div`\n  ${ellipsis()};\n\n  flex: 1;\n  font-weight: 500;\n`\n\nexport type BackupItemProps = {\n  backup: BackupData\n}\n\nexport function BackupItem(props: BackupItemProps) {\n  const { backup } = props\n\n  const modalManager = useRequiredContext(ModalManagerContext)\n  const backupManager = useRequiredContext(BackupManagerContext)\n\n  return useObserver(() => (\n    <Container>\n      <BackupName>{backup.name}</BackupName>\n      <ActionButtons\n        actions={[\n          {\n            icon: upload,\n            label: \"Load\",\n            handler: async () => backupManager.loadBackup(backup.name),\n          },\n          {\n            icon: save,\n            label: \"Export\",\n            handler: async () => backupManager.exportBackup(backup.name),\n            overflow: true,\n          },\n          {\n            icon: copy,\n            label: \"Overwrite\",\n            handler: async () => backupManager.saveBackup(backup.name),\n            overflow: true,\n          },\n          {\n            icon: trash,\n            label: \"Delete\",\n            handler: () =>\n              modalManager.spawn({\n                render: () => (\n                  <DeletionConfirmationModal\n                    backupManager={backupManager}\n                    backup={backup}\n                  />\n                ),\n              }),\n            overflow: true,\n          },\n        ]}\n      />\n    </Container>\n  ))\n}\n","import { useObserver } from \"mobx-react-lite\"\nimport React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { InputField } from \"../../../../common/input/text/InputField\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { Markdown } from \"../../../markdown/Markdown\"\nimport { BackupManagerContext } from \"../BackupManagerContext\"\nimport { BackupItem } from \"./BackupItem\"\n\nconst Container = styled.ul`\n  padding: 0;\n  margin: 0;\n\n  max-height: 420px;\n  overflow-x: hidden;\n`\n\nexport function BackupList() {\n  const backupManager = useRequiredContext(BackupManagerContext)\n\n  const [search, setSearch] = useState(\"\")\n\n  return useObserver(() =>\n    backupManager.backups.length > 0 ? (\n      <>\n        <InputField\n          id=\"backups-search\"\n          label=\"Search Backups\"\n          value={search}\n          onChange={setSearch}\n        />\n        <Container>\n          {backupManager.backups\n            .filter(backup =>\n              backup.name\n                .toLocaleLowerCase()\n                .includes(search.toLocaleLowerCase()),\n            )\n            .map(backup => (\n              <BackupItem key={backup.id} backup={backup} />\n            ))}\n        </Container>\n      </>\n    ) : (\n      <Markdown\n        content={\n          \"You haven't made any backups yet.\" +\n          \" Enter a name below and click on the Save button to make one.\"\n        }\n      />\n    ),\n  )\n}\n","import { useObserver } from \"mobx-react-lite\"\nimport React, { useRef } from \"react\"\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../../../../common/input/button/SecondaryButton\"\nimport { ModalAction } from \"../../../../common/modal/layout/ModalAction\"\nimport { ModalBody } from \"../../../../common/modal/layout/ModalBody\"\nimport { ModalContainer } from \"../../../../common/modal/layout/ModalContainer\"\nimport { ModalFooter } from \"../../../../common/modal/layout/ModalFooter\"\nimport { ModalHeader } from \"../../../../common/modal/layout/ModalHeader\"\nimport { ModalTitle } from \"../../../../common/modal/layout/ModalTitle\"\nimport { ModalContext } from \"../../../../common/modal/ModalContext\"\nimport { useLazyValue } from \"../../../../common/state/useLazyValue\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { remove } from \"../../../../icons/remove\"\nimport type { EditorManagerLike } from \"../../../editor/EditorManager\"\nimport { DatabaseManager } from \"../../DatabaseManager\"\nimport { DatabaseManagerProvider } from \"../../DatabaseManagerContext\"\nimport { PersistentStorageWarning } from \"../../persist/PersistentStorageWarning\"\nimport { BackupManager } from \"../BackupManager\"\nimport { BackupManagerProvider } from \"../BackupManagerContext\"\nimport { BackupCreationControls } from \"./BackupCreationControls\"\nimport { BackupList } from \"./BackupList\"\n\nexport type BackupsModalProps = {\n  editorManager: EditorManagerLike\n}\n\nexport function BackupsModal(props: BackupsModalProps) {\n  const { editorManager } = props\n\n  const databaseManager = useLazyValue(() => new DatabaseManager())\n  const backupManager = useLazyValue(\n    () => new BackupManager(databaseManager, editorManager),\n  )\n\n  const modal = useRequiredContext(ModalContext)\n\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  return useObserver(() => (\n    <DatabaseManagerProvider value={databaseManager}>\n      <BackupManagerProvider value={backupManager}>\n        <ModalContainer>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            style={{ display: \"none\" }}\n            onChange={async event => {\n              const file = event.target.files?.item(0)?.slice()\n              event.target.files = null\n              if (file) {\n                await backupManager.importBackups(file)\n              }\n            }}\n          />\n          <ModalHeader>\n            <ModalTitle>Backups</ModalTitle>\n            <ModalAction\n              icon={remove}\n              label=\"Close\"\n              onClick={() => modal.dismiss()}\n            />\n          </ModalHeader>\n          {databaseManager.shouldShowPersistenceWarning && (\n            <ModalBody>\n              <PersistentStorageWarning />\n            </ModalBody>\n          )}\n          <ModalBody>\n            <BackupList />\n          </ModalBody>\n          <ModalBody>\n            <BackupCreationControls />\n          </ModalBody>\n          <ModalFooter>\n            <SecondaryButton onClick={async () => backupManager.exportAll()}>\n              Export All\n            </SecondaryButton>\n            <SecondaryButton onClick={() => fileInputRef.current?.click()}>\n              Import\n            </SecondaryButton>\n            <PrimaryButton onClick={() => modal.dismiss()}>Close</PrimaryButton>\n          </ModalFooter>\n        </ModalContainer>\n      </BackupManagerProvider>\n    </DatabaseManagerProvider>\n  ))\n}\n"],"sourceRoot":""}