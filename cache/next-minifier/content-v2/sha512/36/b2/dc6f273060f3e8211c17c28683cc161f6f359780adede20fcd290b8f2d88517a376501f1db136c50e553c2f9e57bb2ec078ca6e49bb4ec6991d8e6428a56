{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[78],{H2RM:function(e,n){function a(e){return function(...e){return e.map((e=>function(e){return e?\"string\"===typeof e?e:e.source:null}(e))).join(\"\")}(\"(?=\",e,\")\")}function t(e,n={}){return n.variants=e,n}e.exports=function(e){const n=\"[A-Za-z0-9_$]+\",i=t([e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{begin:/\\w+@/,relevance:0},{className:\"doctag\",begin:\"@[A-Za-z]+\"}]})]),s={className:\"regexp\",begin:/~?\\/[^\\/\\n]+\\//,contains:[e.BACKSLASH_ESCAPE]},r=t([e.BINARY_NUMBER_MODE,e.C_NUMBER_MODE]),c=t([{begin:/\"\"\"/,end:/\"\"\"/},{begin:/'''/,end:/'''/},{begin:\"\\\\$/\",end:\"/\\\\$\",relevance:10},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE],{className:\"string\"});return{name:\"Groovy\",keywords:{built_in:\"this super\",literal:\"true false null\",keyword:\"byte short char int long boolean float double void def as in assert trait abstract static volatile transient public private protected synchronized final class interface enum if else for while switch case break default continue throw throws try catch finally implements extends new import package return instanceof\"},contains:[e.SHEBANG({binary:\"groovy\",relevance:10}),i,c,s,r,{className:\"class\",beginKeywords:\"class interface trait enum\",end:/\\{/,illegal:\":\",contains:[{beginKeywords:\"extends implements\"},e.UNDERSCORE_TITLE_MODE]},{className:\"meta\",begin:\"@[A-Za-z]+\",relevance:0},{className:\"attr\",begin:n+\"[ \\t]*:\",relevance:0},{begin:/\\?/,end:/:/,relevance:0,contains:[i,c,s,r,\"self\"]},{className:\"symbol\",begin:\"^[ \\t]*\"+a(n+\":\"),excludeBegin:!0,end:n+\":\",relevance:0}],illegal:/#|<\\//}}}}]);","map":{"version":3,"sources":["static/chunks/78.4ee5a841b5807ba7a71c.js"],"names":["window","push","H2RM","module","exports","lookahead","re","args","map","x","source","join","concat","variants","obj","hljs","IDENT_RE","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","relevance","contains","begin","className","REGEXP","BACKSLASH_ESCAPE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","STRING","end","APOS_STRING_MODE","QUOTE_STRING_MODE","name","keywords","built_in","literal","keyword","SHEBANG","binary","beginKeywords","illegal","UNDERSCORE_TITLE_MODE","excludeBegin"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,GAsBxB,SAASC,EAAUC,GACjB,OAOF,YAAmBC,GAEjB,OADeA,EAAKC,KAAKC,GApB3B,SAAgBH,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGI,OAHM,KAmBeA,CAAOD,KAAIE,KAAK,IARxCC,CAAO,MAAON,EAAI,KAmB3B,SAASO,EAASA,EAAUC,EAAM,IAEhC,OADAA,EAAID,SAAWA,EACRC,EAmITX,EAAOC,QAhIP,SAAgBW,GACd,MAAMC,EAAW,iBACXC,EAAUJ,EAAS,CACvBE,EAAKG,oBACLH,EAAKI,qBACLJ,EAAKE,QACH,UACA,OACA,CACEG,UAAW,EACXC,SAAU,CACR,CAEEC,MAAO,OACPF,UAAW,GAEb,CACEG,UAAW,SACXD,MAAO,mBAMXE,EAAS,CACbD,UAAW,SACXD,MAAO,iBACPD,SAAU,CAAEN,EAAKU,mBAEbC,EAASb,EAAS,CACtBE,EAAKY,mBACLZ,EAAKa,gBAEDC,EAAShB,EAAS,CACtB,CACES,MAAO,MACPQ,IAAK,OAEP,CACER,MAAO,MACPQ,IAAK,OAEP,CACER,MAAO,OACPQ,IAAK,OACLV,UAAW,IAEbL,EAAKgB,iBACLhB,EAAKiB,mBAEP,CACET,UAAW,WAIb,MAAO,CACLU,KAAM,SACNC,SAAU,CACRC,SAAU,aACVC,QAAS,kBACTC,QACM,6TAQRhB,SAAU,CACRN,EAAKuB,QAAQ,CACXC,OAAQ,SACRnB,UAAW,KAEbH,EACAY,EACAL,EACAE,EACA,CACEH,UAAW,QACXiB,cAAe,6BACfV,IAAK,KACLW,QAAS,IACTpB,SAAU,CACR,CACEmB,cAAe,sBAEjBzB,EAAK2B,wBAGT,CACEnB,UAAW,OACXD,MAAO,aACPF,UAAW,GAEb,CAEEG,UAAW,OACXD,MAAON,EAAW,UAClBI,UAAW,GAEb,CAGEE,MAAO,KACPQ,IAAK,IACLV,UAAW,EACXC,SAAU,CACRJ,EACAY,EACAL,EACAE,EACA,SAGJ,CAEEH,UAAW,SACXD,MAAO,UAAYjB,EAAUW,EAAW,KACxC2B,cAAc,EACdb,IAAKd,EAAW,IAChBI,UAAW,IAGfqB,QAAS"},"name":"static/chunks/78.4ee5a841b5807ba7a71c.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[78],{\n\n/***/ \"H2RM\":\n/***/ (function(module, exports) {\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  {\n    className: \"string\"\n  }\n  );\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      built_in: 'this super',\n      literal: 'true false null',\n      keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait enum',\n        end: /\\{/,\n        illegal: ':',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/runner/work/site/site/node_modules/highlight.js/lib/languages/groovy.js"],"names":[],"mappings":";;;;;AAAA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,WAAW,sBAAsB;AACjC,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"x","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  {\n    className: \"string\"\n  }\n  );\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      built_in: 'this super',\n      literal: 'true false null',\n      keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait enum',\n        end: /\\{/,\n        illegal: ':',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n"]}}