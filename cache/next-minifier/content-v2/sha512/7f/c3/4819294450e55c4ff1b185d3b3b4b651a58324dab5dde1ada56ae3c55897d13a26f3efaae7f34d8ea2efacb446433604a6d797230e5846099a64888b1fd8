{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[167],{jU8F:function(e,n){e.exports=function(e){const n=\"[a-z][a-zA-Z0-9_]*\",s={className:\"string\",begin:\"\\\\$.{1}\"},a={className:\"symbol\",begin:\"#\"+e.UNDERSCORE_IDENT_RE};return{name:\"Smalltalk\",aliases:[\"st\"],keywords:\"self super nil true false thisContext\",contains:[e.COMMENT('\"','\"'),e.APOS_STRING_MODE,{className:\"type\",begin:\"\\\\b[A-Z][A-Za-z0-9_]*\",relevance:0},{begin:n+\":\",relevance:0},e.C_NUMBER_MODE,a,s,{begin:\"\\\\|[ ]*\"+n+\"([ ]+\"+n+\")*[ ]*\\\\|\",returnBegin:!0,end:/\\|/,illegal:/\\S/,contains:[{begin:\"(\\\\|[ ]*)?\"+n}]},{begin:\"#\\\\(\",end:\"\\\\)\",contains:[e.APOS_STRING_MODE,s,e.C_NUMBER_MODE,a]}]}}}}]);","map":{"version":3,"sources":["static/chunks/167.875480869785c6f096d2.js"],"names":["window","push","jU8F","module","exports","hljs","VAR_IDENT_RE","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","name","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAEtEC,KACA,SAAUC,EAAQC,GAgExBD,EAAOC,QAvDP,SAAmBC,GACjB,MAAMC,EAAe,qBACfC,EAAO,CACXC,UAAW,SACXC,MAAO,WAEHC,EAAS,CACbF,UAAW,SACXC,MAAO,IAAMJ,EAAKM,qBAEpB,MAAO,CACLC,KAAM,YACNC,QAAS,CAAE,MACXC,SAAU,wCACVC,SAAU,CACRV,EAAKW,QAAQ,IAAK,KAClBX,EAAKY,iBACL,CACET,UAAW,OACXC,MAAO,wBACPS,UAAW,GAEb,CACET,MAAOH,EAAe,IACtBY,UAAW,GAEbb,EAAKc,cACLT,EACAH,EACA,CAIEE,MAAO,UAAYH,EAAe,QAAUA,EAAe,YAC3Dc,aAAa,EACbC,IAAK,KACLC,QAAS,KACTP,SAAU,CAAE,CACVN,MAAO,aAAeH,KAG1B,CACEG,MAAO,OACPY,IAAK,MACLN,SAAU,CACRV,EAAKY,iBACLV,EACAF,EAAKc,cACLT"},"name":"static/chunks/167.875480869785c6f096d2.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[167],{\n\n/***/ \"jU8F\":\n/***/ (function(module, exports) {\n\n/*\nLanguage: Smalltalk\nDescription: Smalltalk is an object-oriented, dynamically typed reflective programming language.\nAuthor: Vladimir Gubarkov <xonixx@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Smalltalk\n*/\n\nfunction smalltalk(hljs) {\n  const VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  const CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    name: 'Smalltalk',\n    aliases: [ 'st' ],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true,\n        end: /\\|/,\n        illegal: /\\S/,\n        contains: [ {\n          begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE\n        } ]\n      },\n      {\n        begin: '#\\\\(',\n        end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = smalltalk;\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/runner/work/site/site/node_modules/highlight.js/lib/languages/smalltalk.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"x","sourcesContent":["/*\nLanguage: Smalltalk\nDescription: Smalltalk is an object-oriented, dynamically typed reflective programming language.\nAuthor: Vladimir Gubarkov <xonixx@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Smalltalk\n*/\n\nfunction smalltalk(hljs) {\n  const VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  const CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    name: 'Smalltalk',\n    aliases: [ 'st' ],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true,\n        end: /\\|/,\n        illegal: /\\S/,\n        contains: [ {\n          begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE\n        } ]\n      },\n      {\n        begin: '#\\\\(',\n        end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = smalltalk;\n"]}}