{"ast":null,"code":"import _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nexport const omitProp = (Component, ...omit) => {\n  return (_ref) => {\n    let props = Object.assign({}, _ref);\n\n    for (const prop of omit) {\n      delete props[prop];\n    }\n\n    return /*#__PURE__*/_jsx(Component, _objectSpread({}, props));\n  };\n};","map":{"version":3,"sources":["/home/runner/work/site/site/common/utilities/omitProps.tsx"],"names":["React","omitProp","Component","omit","props","prop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,SADsB,EAEtB,GAAGC,IAFmB,KAGnB;AACH,SAAO,UAAqB;AAAA,QAAfC,KAAe;;AAC1B,SAAK,MAAMC,IAAX,IAAmBF,IAAnB,EAAyB;AACvB,aAAOC,KAAK,CAACC,IAAD,CAAZ;AACD;;AAED,wBAAO,KAAC,SAAD,oBAAeD,KAAf,EAAP;AACD,GAND;AAOD,CAXM","sourcesContent":["import React, { ComponentType } from \"react\"\n\nexport const omitProp = <P extends Record<string, unknown>>(\n  Component: ComponentType<P>,\n  ...omit: string[]\n) => {\n  return ({ ...props }: P) => {\n    for (const prop of omit) {\n      delete props[prop]\n    }\n\n    return <Component {...props} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}