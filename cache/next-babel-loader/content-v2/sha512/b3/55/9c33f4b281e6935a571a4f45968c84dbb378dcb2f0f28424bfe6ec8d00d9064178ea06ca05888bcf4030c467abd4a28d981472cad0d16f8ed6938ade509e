{"ast":null,"code":"import { getDate, getMonth, getYear, isValid } from \"date-fns\";\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst getTimestampFormat = (date, base) => {\n  const givenDate = new Date(date).setHours(0, 0, 0, 0);\n  const now = new Date(base !== null && base !== void 0 ? base : Date.now()).setHours(0, 0, 0, 0);\n  const difference = (givenDate - now) / ONE_DAY;\n  if (difference < -1) return \"full\";\n  if (difference < 0) return \"yesterday\";\n  if (difference < 1) return \"today\";\n  if (difference < 2) return \"tomorrow\";\n  return \"full\";\n};\n\nexport const formatTimestamp = (date, base) => {\n  if (!isValid(date)) return \"Invalid date\";\n  const day = String(getDate(date)).padStart(2, \"0\");\n  const month = String(getMonth(date) + 1).padStart(2, \"0\");\n  const year = getYear(date);\n  const time = date.toLocaleString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"numeric\",\n    hour12: true\n  });\n\n  switch (getTimestampFormat(date, base)) {\n    case \"yesterday\":\n      {\n        return `Yesterday at ${time}`;\n      }\n\n    case \"today\":\n      {\n        return `Today at ${time}`;\n      }\n\n    case \"tomorrow\":\n      {\n        return `Tomorrow at ${time}`;\n      }\n\n    default:\n      {\n        return `${day}/${month}/${year}`;\n      }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}