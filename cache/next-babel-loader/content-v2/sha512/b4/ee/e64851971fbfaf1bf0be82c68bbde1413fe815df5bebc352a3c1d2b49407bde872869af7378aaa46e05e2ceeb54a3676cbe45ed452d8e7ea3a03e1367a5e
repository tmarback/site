{"ast":null,"code":"import { outputFor, parserFor } from \"simple-markdown\";\nexport const createParser = (rules, transform) => {\n  const parse = parserFor(rules, {\n    inline: true\n  });\n  const output = outputFor(rules, \"react\");\n  return content => {\n    let ast = parse(content);\n\n    if (transform) {\n      ast = transform(ast);\n    }\n\n    return output(ast);\n  };\n};","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/parsers/createParser.ts"],"names":["outputFor","parserFor","createParser","rules","transform","parse","inline","output","content","ast"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAoD,iBAApD;AAGA,OAAO,MAAMC,YAAY,GAAG,CAC1BC,KAD0B,EAE1BC,SAF0B,KAGvB;AACH,QAAMC,KAAK,GAAGJ,SAAS,CAACE,KAAD,EAAQ;AAAEG,IAAAA,MAAM,EAAE;AAAV,GAAR,CAAvB;AACA,QAAMC,MAAM,GAAGP,SAAS,CAACG,KAAD,EAAQ,OAAR,CAAxB;AAEA,SAAQK,OAAD,IAAqB;AAC1B,QAAIC,GAAG,GAAGJ,KAAK,CAACG,OAAD,CAAf;;AAEA,QAAIJ,SAAJ,EAAe;AACbK,MAAAA,GAAG,GAAGL,SAAS,CAACK,GAAD,CAAf;AACD;;AAED,WAAOF,MAAM,CAACE,GAAD,CAAb;AACD,GARD;AASD,CAhBM","sourcesContent":["import { outputFor, parserFor, SingleASTNode } from \"simple-markdown\"\nimport type { MarkdownRule } from \"./MarkdownRule\"\n\nexport const createParser = (\n  rules: Record<string, MarkdownRule>,\n  transform?: (ast: SingleASTNode[]) => SingleASTNode[],\n) => {\n  const parse = parserFor(rules, { inline: true })\n  const output = outputFor(rules, \"react\")\n\n  return (content: string) => {\n    let ast = parse(content)\n\n    if (transform) {\n      ast = transform(ast)\n    }\n\n    return output(ast)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}