{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { cover, size } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { check } from \"../../../icons/check\";\nimport { CheckableButton } from \"./layout/CheckableButton\";\nimport { CheckableContainer } from \"./layout/CheckableContainer\";\nimport { CheckableInput } from \"./layout/CheckableInput\";\nimport { CheckableLabel } from \"./layout/CheckableLabel\";\nimport { Positioner } from \"./layout/Positioner\";\nconst Button = styled(CheckableButton).withConfig({\n  componentId: \"cp2m0k-0\"\n})([\"border-radius:3px;& > svg{\", \";\", \";opacity:0;transition:150ms;transition-property:opacity;}input:checked + & > svg{opacity:1;}\"], cover(), size(\"100%\"));\nexport function Checkbox(props) {\n  const {\n    id,\n    label,\n    value,\n    onChange: handleChange,\n    className,\n    disabled\n  } = props;\n  return /*#__PURE__*/_jsxs(CheckableContainer, {\n    className: className,\n    children: [/*#__PURE__*/_jsxs(Positioner, {\n      children: [/*#__PURE__*/_jsx(CheckableInput, {\n        id: id,\n        type: \"checkbox\",\n        disabled: disabled,\n        checked: value,\n        onChange: event => handleChange(event.target.checked)\n      }), /*#__PURE__*/_jsx(Button, {\n        children: check\n      })]\n    }), /*#__PURE__*/_jsx(CheckableLabel, {\n      htmlFor: id,\n      children: label\n    })]\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/input/checkable/Checkbox.tsx"],"names":["cover","size","React","styled","check","CheckableButton","CheckableContainer","CheckableInput","CheckableLabel","Positioner","Button","Checkbox","props","id","label","value","onChange","handleChange","className","disabled","event","target","checked"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACE,eAAD,CAAT;AAAA;AAAA,wIAINL,KAAK,EAJC,EAKNC,IAAI,CAAC,MAAD,CALE,CAAZ;AA0BA,OAAO,SAASU,QAAT,CAAkBC,KAAlB,EAAwC;AAC7C,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAAQ,EAAEC,YAJN;AAKJC,IAAAA,SALI;AAMJC,IAAAA;AANI,MAOFP,KAPJ;AASA,sBACE,MAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEM,SAA/B;AAAA,4BACE,MAAC,UAAD;AAAA,8BACE,KAAC,cAAD;AACE,QAAA,EAAE,EAAEL,EADN;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEM,QAHZ;AAIE,QAAA,OAAO,EAAEJ,KAJX;AAKE,QAAA,QAAQ,EAAEK,KAAK,IAAIH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,OAAd;AALjC,QADF,eAQE,KAAC,MAAD;AAAA,kBAASlB;AAAT,QARF;AAAA,MADF,eAWE,KAAC,cAAD;AAAgB,MAAA,OAAO,EAAES,EAAzB;AAAA,gBAA8BC;AAA9B,MAXF;AAAA,IADF;AAeD","sourcesContent":["import { cover, size } from \"polished\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { check } from \"../../../icons/check\"\nimport { CheckableButton } from \"./layout/CheckableButton\"\nimport { CheckableContainer } from \"./layout/CheckableContainer\"\nimport { CheckableInput } from \"./layout/CheckableInput\"\nimport { CheckableLabel } from \"./layout/CheckableLabel\"\nimport { Positioner } from \"./layout/Positioner\"\n\nconst Button = styled(CheckableButton)`\n  border-radius: 3px;\n\n  & > svg {\n    ${cover()};\n    ${size(\"100%\")};\n\n    opacity: 0;\n    transition: 150ms;\n    transition-property: opacity;\n  }\n\n  input:checked + & > svg {\n    opacity: 1;\n  }\n`\n\nexport type CheckboxProps = {\n  id: string\n  label: string\n  value: boolean\n  onChange: (value: boolean) => void\n  className?: string\n  disabled?: boolean\n}\n\nexport function Checkbox(props: CheckboxProps) {\n  const {\n    id,\n    label,\n    value,\n    onChange: handleChange,\n    className,\n    disabled,\n  } = props\n\n  return (\n    <CheckableContainer className={className}>\n      <Positioner>\n        <CheckableInput\n          id={id}\n          type=\"checkbox\"\n          disabled={disabled}\n          checked={value}\n          onChange={event => handleChange(event.target.checked)}\n        />\n        <Button>{check}</Button>\n      </Positioner>\n      <CheckableLabel htmlFor={id}>{label}</CheckableLabel>\n    </CheckableContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}