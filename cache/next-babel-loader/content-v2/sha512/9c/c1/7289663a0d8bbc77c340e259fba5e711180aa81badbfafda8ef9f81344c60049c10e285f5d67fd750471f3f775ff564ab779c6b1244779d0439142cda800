{"ast":null,"code":"import { ColorModel } from \"../../../common/input/color/ColorModel\";\nexport const messageOf = data => {\n  var _data$content, _data$username, _data$avatar_url;\n\n  const snapshot = {};\n  snapshot.content = (_data$content = data.content) !== null && _data$content !== void 0 ? _data$content : \"\";\n  snapshot.username = (_data$username = data.username) !== null && _data$username !== void 0 ? _data$username : \"\";\n  snapshot.avatar = (_data$avatar_url = data.avatar_url) !== null && _data$avatar_url !== void 0 ? _data$avatar_url : \"\";\n  const embeds = [];\n  snapshot.embeds = embeds;\n\n  for (const embedData of (_data$embeds = data.embeds) !== null && _data$embeds !== void 0 ? _data$embeds : []) {\n    var _data$embeds, _embed, _embedData$title, _embedData$descriptio, _embedData$url, _embedData$author$nam, _embedData$author, _embedData$author$url, _embedData$author2, _embedData$author$ico, _embedData$author3, _embedData$footer$tex, _embedData$footer, _embedData$footer$ico, _embedData$footer2, _embedData$timestamp, _embedData$image$url, _embedData$image2, _embedData$thumbnail$, _embedData$thumbnail, _embedData$color;\n\n    let embed = embeds.length > 0 ? embeds[embeds.length - 1] : undefined;\n\n    if ((_embed = embed) !== null && _embed !== void 0 && _embed.url && embed.url === embedData.url) {\n      var _embedData$image;\n\n      const gallery = embed.gallery;\n\n      if ((_embedData$image = embedData.image) !== null && _embedData$image !== void 0 && _embedData$image.url && gallery.length < 4) {\n        gallery.push(embedData.image.url);\n      }\n\n      continue;\n    }\n\n    embed = {};\n    embeds.push(embed);\n    embed.title = (_embedData$title = embedData.title) !== null && _embedData$title !== void 0 ? _embedData$title : \"\";\n    embed.description = (_embedData$descriptio = embedData.description) !== null && _embedData$descriptio !== void 0 ? _embedData$descriptio : \"\";\n    embed.url = (_embedData$url = embedData.url) !== null && _embedData$url !== void 0 ? _embedData$url : \"\";\n    embed.author = (_embedData$author$nam = (_embedData$author = embedData.author) === null || _embedData$author === void 0 ? void 0 : _embedData$author.name) !== null && _embedData$author$nam !== void 0 ? _embedData$author$nam : \"\";\n    embed.authorUrl = (_embedData$author$url = (_embedData$author2 = embedData.author) === null || _embedData$author2 === void 0 ? void 0 : _embedData$author2.url) !== null && _embedData$author$url !== void 0 ? _embedData$author$url : \"\";\n    embed.authorIcon = (_embedData$author$ico = (_embedData$author3 = embedData.author) === null || _embedData$author3 === void 0 ? void 0 : _embedData$author3.icon_url) !== null && _embedData$author$ico !== void 0 ? _embedData$author$ico : \"\";\n    embed.footer = (_embedData$footer$tex = (_embedData$footer = embedData.footer) === null || _embedData$footer === void 0 ? void 0 : _embedData$footer.text) !== null && _embedData$footer$tex !== void 0 ? _embedData$footer$tex : \"\";\n    embed.footerIcon = (_embedData$footer$ico = (_embedData$footer2 = embedData.footer) === null || _embedData$footer2 === void 0 ? void 0 : _embedData$footer2.icon_url) !== null && _embedData$footer$ico !== void 0 ? _embedData$footer$ico : \"\";\n    embed.timestamp = new Date((_embedData$timestamp = embedData.timestamp) !== null && _embedData$timestamp !== void 0 ? _embedData$timestamp : Number.NaN);\n    embed.gallery = [(_embedData$image$url = (_embedData$image2 = embedData.image) === null || _embedData$image2 === void 0 ? void 0 : _embedData$image2.url) !== null && _embedData$image$url !== void 0 ? _embedData$image$url : \"\"].filter(Boolean);\n    embed.thumbnail = (_embedData$thumbnail$ = (_embedData$thumbnail = embedData.thumbnail) === null || _embedData$thumbnail === void 0 ? void 0 : _embedData$thumbnail.url) !== null && _embedData$thumbnail$ !== void 0 ? _embedData$thumbnail$ : \"\";\n    const color = ColorModel.create();\n    color.setRaw((_embedData$color = embedData.color) !== null && _embedData$color !== void 0 ? _embedData$color : null);\n    embed.color = color;\n    const fields = [];\n    embed.fields = fields;\n\n    for (const fieldData of (_embedData$fields = embedData.fields) !== null && _embedData$fields !== void 0 ? _embedData$fields : []) {\n      var _embedData$fields, _fieldData$name, _fieldData$value, _fieldData$inline;\n\n      const field = {};\n      fields.push(field);\n      field.name = (_fieldData$name = fieldData.name) !== null && _fieldData$name !== void 0 ? _fieldData$name : \"\";\n      field.value = (_fieldData$value = fieldData.value) !== null && _fieldData$value !== void 0 ? _fieldData$value : \"\";\n      field.inline = (_fieldData$inline = fieldData.inline) !== null && _fieldData$inline !== void 0 ? _fieldData$inline : false;\n    }\n  }\n\n  return snapshot;\n};","map":null,"metadata":{},"sourceType":"module"}