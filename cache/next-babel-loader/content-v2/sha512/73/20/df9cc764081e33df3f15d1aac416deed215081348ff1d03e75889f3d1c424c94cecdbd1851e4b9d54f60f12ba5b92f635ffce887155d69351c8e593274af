{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { isValid } from \"date-fns\";\nimport { useObserver } from \"mobx-react-lite\";\nimport dynamic from \"next/dynamic\";\nimport { rem, size } from \"polished\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nconst EmbedTimestamp = dynamic(async () => import(\"./EmbedTimestamp\").then(module => module.EmbedTimestamp), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./EmbedTimestamp\")],\n    modules: [\"./EmbedTimestamp\"]\n  }\n});\nconst Container = styled.div.withConfig({\n  componentId: \"sc-1wl8gx1-0\"\n})([\"min-width:0;margin:8px 0 0;display:flex;align-items:center;grid-row:auto / auto;grid-column:1 / 2;\", \";\"], ({\n  hasThumbnail\n}) => hasThumbnail && css([\"grid-column:1 / 3;\"]));\nconst FooterImage = styled.img.withConfig({\n  componentId: \"sc-1wl8gx1-1\"\n})([\"\", \";margin:0 8px 0 0;object-fit:contain;border-radius:50%;\"], size(20));\nconst FooterText = styled.span.withConfig({\n  componentId: \"sc-1wl8gx1-2\"\n})([\"font-size:\", \";font-weight:500;color:\", \";line-height:\", \";white-space:pre-wrap;white-space:break-spaces;\", \";\"], rem(12), ({\n  theme\n}) => theme.text.normal, rem(16), ({\n  theme\n}) => theme.appearance.color === \"light\" && css([\"@media (max-resolution:1dppx){font-weight:500;}\"]));\nconst FooterSeparator = styled.span.withConfig({\n  componentId: \"sc-1wl8gx1-3\"\n})([\"display:inline-block;margin:0 4px;\"]);\nexport function EmbedFooter(props) {\n  const {\n    embed\n  } = props;\n  return useObserver(() => /*#__PURE__*/_jsxs(Container, {\n    hasThumbnail: Boolean(embed.thumbnail),\n    children: [embed.footerIcon && /*#__PURE__*/_jsx(FooterImage, {\n      src: embed.footerIcon,\n      alt: \"Footer image\"\n    }), /*#__PURE__*/_jsxs(FooterText, {\n      children: [embed.footer, embed.footer && isValid(embed.timestamp) && /*#__PURE__*/_jsx(FooterSeparator, {\n        children: \"\\u2022\"\n      }), isValid(embed.timestamp) && /*#__PURE__*/_jsx(EmbedTimestamp, {\n        timestamp: embed.timestamp\n      })]\n    })]\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/message/preview/EmbedFooter.tsx"],"names":["isValid","useObserver","dynamic","rem","size","React","styled","css","EmbedTimestamp","then","module","ssr","Container","div","hasThumbnail","FooterImage","img","FooterText","span","theme","text","normal","appearance","color","FooterSeparator","EmbedFooter","props","embed","Boolean","thumbnail","footerIcon","footer","timestamp"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAIA,MAAMC,cAAc,GAAGN,OAAO,CAC5B,YAAY,OAAO,kBAAP,EAA2BO,IAA3B,CAAgCC,MAAM,IAAIA,MAAM,CAACF,cAAjD,CADgB,EAE5B;AAAEG,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCADmB,kBACnB;AAAA,cADmB,kBACnB;AAAA;AAAA,CAF4B,CAA9B;AAKA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA,gHAWX,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,YAAY,IACZP,GADY,wBAZD,CAAf;AAkBA,MAAMQ,WAAW,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA,oEACbZ,IAAI,CAAC,EAAD,CADS,CAAjB;AASA,MAAMa,UAAU,GAAGX,MAAM,CAACY,IAAV;AAAA;AAAA,uHACDf,GAAG,CAAC,EAAD,CADF,EAGL,CAAC;AAAEgB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAN,CAAWC,MAHrB,EAIClB,GAAG,CAAC,EAAD,CAJJ,EASZ,CAAC;AAAEgB,EAAAA;AAAF,CAAD,KACAA,KAAK,CAACG,UAAN,CAAiBC,KAAjB,KAA2B,OAA3B,IACAhB,GADA,qDAVY,CAAhB;AAkBA,MAAMiB,eAAe,GAAGlB,MAAM,CAACY,IAAV;AAAA;AAAA,0CAArB;AASA,OAAO,SAASO,WAAT,CAAqBC,KAArB,EAA8C;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAEA,SAAOzB,WAAW,CAAC,mBACjB,MAAC,SAAD;AAAW,IAAA,YAAY,EAAE2B,OAAO,CAACD,KAAK,CAACE,SAAP,CAAhC;AAAA,eACGF,KAAK,CAACG,UAAN,iBACC,KAAC,WAAD;AAAa,MAAA,GAAG,EAAEH,KAAK,CAACG,UAAxB;AAAoC,MAAA,GAAG,EAAC;AAAxC,MAFJ,eAIE,MAAC,UAAD;AAAA,iBACGH,KAAK,CAACI,MADT,EAEGJ,KAAK,CAACI,MAAN,IAAgB/B,OAAO,CAAC2B,KAAK,CAACK,SAAP,CAAvB,iBACC,KAAC,eAAD;AAAA;AAAA,QAHJ,EAKGhC,OAAO,CAAC2B,KAAK,CAACK,SAAP,CAAP,iBACC,KAAC,cAAD;AAAgB,QAAA,SAAS,EAAEL,KAAK,CAACK;AAAjC,QANJ;AAAA,MAJF;AAAA,IADgB,CAAlB;AAgBD","sourcesContent":["import { isValid } from \"date-fns\"\nimport { useObserver } from \"mobx-react-lite\"\nimport dynamic from \"next/dynamic\"\nimport { rem, size } from \"polished\"\nimport React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport type { EmbedLike } from \"../state/models/EmbedModel\"\nimport type { EmbedTimestampProps } from \"./EmbedTimestamp\"\n\nconst EmbedTimestamp = dynamic<EmbedTimestampProps>(\n  async () => import(\"./EmbedTimestamp\").then(module => module.EmbedTimestamp),\n  { ssr: false },\n)\n\nconst Container = styled.div<{ hasThumbnail?: boolean }>`\n  min-width: 0;\n\n  margin: 8px 0 0;\n\n  display: flex;\n  align-items: center;\n\n  grid-row: auto / auto;\n  grid-column: 1 / 2;\n\n  ${({ hasThumbnail }) =>\n    hasThumbnail &&\n    css`\n      grid-column: 1 / 3;\n    `};\n`\n\nconst FooterImage = styled.img`\n  ${size(20)};\n\n  margin: 0 8px 0 0;\n\n  object-fit: contain;\n  border-radius: 50%;\n`\n\nconst FooterText = styled.span`\n  font-size: ${rem(12)};\n  font-weight: 500;\n  color: ${({ theme }) => theme.text.normal};\n  line-height: ${rem(16)};\n\n  white-space: pre-wrap;\n  white-space: break-spaces;\n\n  ${({ theme }) =>\n    theme.appearance.color === \"light\" &&\n    css`\n      @media (max-resolution: 1dppx) {\n        font-weight: 500;\n      }\n    `};\n`\n\nconst FooterSeparator = styled.span`\n  display: inline-block;\n  margin: 0 4px;\n`\n\nexport type EmbedFooterProps = {\n  embed: EmbedLike\n}\n\nexport function EmbedFooter(props: EmbedFooterProps) {\n  const { embed } = props\n\n  return useObserver(() => (\n    <Container hasThumbnail={Boolean(embed.thumbnail)}>\n      {embed.footerIcon && (\n        <FooterImage src={embed.footerIcon} alt=\"Footer image\" />\n      )}\n      <FooterText>\n        {embed.footer}\n        {embed.footer && isValid(embed.timestamp) && (\n          <FooterSeparator>â€¢</FooterSeparator>\n        )}\n        {isValid(embed.timestamp) && (\n          <EmbedTimestamp timestamp={embed.timestamp} />\n        )}\n      </FooterText>\n    </Container>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}