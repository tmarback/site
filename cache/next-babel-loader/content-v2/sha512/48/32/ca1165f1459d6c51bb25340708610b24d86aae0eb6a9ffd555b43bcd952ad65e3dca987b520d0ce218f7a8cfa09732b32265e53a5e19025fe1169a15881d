{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\";\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\";\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\";\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\";\nimport { ModalContext } from \"../../../common/modal/ModalContext\";\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\";\nimport { remove } from \"../../../icons/remove\";\nimport { Markdown } from \"../../markdown/Markdown\";\nexport function PushNotificationModal(props) {\n  const {\n    databaseManager\n  } = props;\n  const modal = useRequiredContext(ModalContext);\n  return /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(ModalTitle, {\n        children: \"Notice\"\n      }), /*#__PURE__*/_jsx(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      })]\n    }), /*#__PURE__*/_jsx(ModalBody, {\n      children: /*#__PURE__*/_jsx(Markdown, {\n        content: \"Chrome based browsers do not allow manual control of persistent\" + \" storage. As a workaround, you can grant this site permission to\" + \" send notifications to allow the site to use persistent storage.\"\n      })\n    }), /*#__PURE__*/_jsxs(ModalFooter, {\n      children: [/*#__PURE__*/_jsx(SecondaryButton, {\n        onClick: () => modal.dismiss(),\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(PrimaryButton, {\n        onClick: async () => {\n          modal.dismiss();\n          await databaseManager.requestPersistence();\n        },\n        children: \"Request permission\"\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/database/persist/PushNotificationModal.tsx"],"names":["React","PrimaryButton","SecondaryButton","ModalAction","ModalBody","ModalContainer","ModalFooter","ModalHeader","ModalTitle","ModalContext","useRequiredContext","remove","Markdown","PushNotificationModal","props","databaseManager","modal","dismiss","requestPersistence"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,eAAT,QAAgC,8CAAhC;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,SAASC,cAAT,QAA+B,6CAA/B;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAOA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAkE;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAsBD,KAA5B;AAEA,QAAME,KAAK,GAAGN,kBAAkB,CAACD,YAAD,CAAhC;AAEA,sBACE,MAAC,cAAD;AAAA,4BACE,MAAC,WAAD;AAAA,8BACE,KAAC,UAAD;AAAA;AAAA,QADF,eAEE,KAAC,WAAD;AACE,QAAA,IAAI,EAAEE,MADR;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,OAAO,EAAE,MAAMK,KAAK,CAACC,OAAN;AAHjB,QAFF;AAAA,MADF,eASE,KAAC,SAAD;AAAA,6BACE,KAAC,QAAD;AACE,QAAA,OAAO,EACL,oEACA,kEADA,GAEA;AAJJ;AADF,MATF,eAkBE,MAAC,WAAD;AAAA,8BACE,KAAC,eAAD;AAAiB,QAAA,OAAO,EAAE,MAAMD,KAAK,CAACC,OAAN,EAAhC;AAAA;AAAA,QADF,eAIE,KAAC,aAAD;AACE,QAAA,OAAO,EAAE,YAAY;AACnBD,UAAAA,KAAK,CAACC,OAAN;AACA,gBAAMF,eAAe,CAACG,kBAAhB,EAAN;AACD,SAJH;AAAA;AAAA,QAJF;AAAA,MAlBF;AAAA,IADF;AAkCD","sourcesContent":["import React from \"react\"\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\"\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\"\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\"\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\"\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\"\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\"\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\"\nimport { ModalContext } from \"../../../common/modal/ModalContext\"\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\"\nimport { remove } from \"../../../icons/remove\"\nimport { Markdown } from \"../../markdown/Markdown\"\nimport type { DatabaseManager } from \"../DatabaseManager\"\n\nexport type PushNotificationModalProps = {\n  databaseManager: DatabaseManager\n}\n\nexport function PushNotificationModal(props: PushNotificationModalProps) {\n  const { databaseManager } = props\n\n  const modal = useRequiredContext(ModalContext)\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <ModalTitle>Notice</ModalTitle>\n        <ModalAction\n          icon={remove}\n          label=\"Close\"\n          onClick={() => modal.dismiss()}\n        />\n      </ModalHeader>\n      <ModalBody>\n        <Markdown\n          content={\n            \"Chrome based browsers do not allow manual control of persistent\" +\n            \" storage. As a workaround, you can grant this site permission to\" +\n            \" send notifications to allow the site to use persistent storage.\"\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <SecondaryButton onClick={() => modal.dismiss()}>\n          Cancel\n        </SecondaryButton>\n        <PrimaryButton\n          onClick={async () => {\n            modal.dismiss()\n            await databaseManager.requestPersistence()\n          }}\n        >\n          Request permission\n        </PrimaryButton>\n      </ModalFooter>\n    </ModalContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}