{"ast":null,"code":"import hljs from \"highlight.js/lib/core\";\nimport { getLanguageFromAlias } from \"./getLanguageFromAlias\";\n\nconst importRawLanguage = async (name) => import(`highlight.js/lib/languages/${name}`).then(module => module.default);\n\nexport const importLanguage = async alias => {\n  const language = getLanguageFromAlias(alias);\n  if (!language) return;\n  console.log(language);\n\n  if (language.dependencies) {\n    await Promise.all(language.dependencies.map(async dependency => {\n      await importLanguage(dependency);\n    }));\n  }\n\n  hljs.registerLanguage(language.name, await importRawLanguage(language.name));\n\n  if (true) {\n    console.log(\"Registered highlight.js language:\", language.name);\n  }\n};","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/code/importLanguage.ts"],"names":["hljs","getLanguageFromAlias","importRawLanguage","name","then","module","default","importLanguage","alias","language","console","log","dependencies","Promise","all","map","dependency","registerLanguage"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,SAASC,oBAAT,QAAqC,wBAArC;;AAEA,MAAMC,iBAAiB,GAAG,OAAOC,IAAP,KACxB,OAAQ,8BAA6BA,IAAK,EAA1C,EAA6CC,IAA7C,CACEC,MAAM,IAAIA,MAAM,CAACC,OADnB,CADF;;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAOC,KAAP,IAAyB;AACrD,QAAMC,QAAQ,GAAGR,oBAAoB,CAACO,KAAD,CAArC;AACA,MAAI,CAACC,QAAL,EAAe;AAEfC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAEA,MAAIA,QAAQ,CAACG,YAAb,EAA2B;AACzB,UAAMC,OAAO,CAACC,GAAR,CACJL,QAAQ,CAACG,YAAT,CAAsBG,GAAtB,CAA0B,MAAMC,UAAN,IAAoB;AAC5C,YAAMT,cAAc,CAACS,UAAD,CAApB;AACD,KAFD,CADI,CAAN;AAKD;;AAEDhB,EAAAA,IAAI,CAACiB,gBAAL,CAAsBR,QAAQ,CAACN,IAA/B,EAAqC,MAAMD,iBAAiB,CAACO,QAAQ,CAACN,IAAV,CAA5D;;AAEA,YAAmC;AACjCO,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,QAAQ,CAACN,IAA1D;AACD;AACF,CAnBM","sourcesContent":["import hljs from \"highlight.js/lib/core\"\nimport { getLanguageFromAlias } from \"./getLanguageFromAlias\"\n\nconst importRawLanguage = async (name: string) =>\n  import(`highlight.js/lib/languages/${name}`).then(\n    module => module.default as (hljs?: HLJSApi) => LanguageDetail,\n  )\n\nexport const importLanguage = async (alias: string) => {\n  const language = getLanguageFromAlias(alias)\n  if (!language) return\n\n  console.log(language)\n\n  if (language.dependencies) {\n    await Promise.all(\n      language.dependencies.map(async dependency => {\n        await importLanguage(dependency)\n      }),\n    )\n  }\n\n  hljs.registerLanguage(language.name, await importRawLanguage(language.name))\n\n  if (typeof window !== \"undefined\") {\n    console.log(\"Registered highlight.js language:\", language.name)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}