{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { InputError } from \"../../../common/input/error/InputError\";\nimport { FileInputField } from \"../../../common/input/file/FileInputField\";\nimport { InputField } from \"../../../common/input/text/InputField\";\nimport { Section } from \"../../../common/layout/Section\";\nimport { Stack } from \"../../../common/layout/Stack\";\nexport function PrimaryContentEditor(props) {\n  const {\n    message,\n    form\n  } = props;\n  const isEditing = Boolean(message.reference);\n  return useObserver(() => /*#__PURE__*/_jsxs(Stack, {\n    gap: 12,\n    children: [/*#__PURE__*/_jsx(InputField, _objectSpread({\n      id: `_${message.id}_content`,\n      label: \"Content\",\n      maxLength: 2000,\n      rows: 4,\n      error: form.field(\"content\").error\n    }, form.field(\"content\").inputProps)), /*#__PURE__*/_jsx(Section, {\n      name: \"Profile\",\n      children: /*#__PURE__*/_jsxs(Stack, {\n        gap: 12,\n        children: [/*#__PURE__*/_jsx(InputField, _objectSpread(_objectSpread({\n          id: `_${message.id}_username`,\n          label: \"Username\",\n          maxLength: 80,\n          error: form.field(\"username\").error\n        }, form.field(\"username\").inputProps), {}, {\n          disabled: isEditing\n        })), /*#__PURE__*/_jsx(InputField, _objectSpread(_objectSpread({\n          id: `_${message.id}_avatar`,\n          label: \"Avatar URL\",\n          error: form.field(\"avatar\").error\n        }, form.field(\"avatar\").inputProps), {}, {\n          disabled: isEditing\n        })), /*#__PURE__*/_jsx(InputError, {\n          variant: \"warning\",\n          error: isEditing ? \"You cannot edit the username and avatar for previously sent messages\" : undefined\n        })]\n      })\n    }), /*#__PURE__*/_jsx(FileInputField, {\n      id: `_${message.id}_files`,\n      label: \"Files\",\n      maxSize: 8 * 1024 ** 2,\n      value: message.files,\n      onChange: files => message.set(\"files\", files)\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}