{"ast":null,"code":"import { EMOJI_TO_NAME } from \"./emoji\"; // Matches string symbols instead of code points\n// Regex extracted from lodash: https://github.com/lodash/lodash/blob/4.17.15/lodash.js#L261\n// eslint-disable-next-line no-misleading-character-class\n\nconst UNICODE_CHARACTER_RE = /\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\u20d0-\\u20ff\\ufe20-\\ufe2f]?|[\\u0300-\\u036f\\u20d0-\\u20ff\\ufe20-\\ufe2f]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\u20d0-\\u20ff\\ufe20-\\ufe2f]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\u20d0-\\u20ff\\ufe20-\\ufe2f]|\\ud83c[\\udffb-\\udfff])?)*/g;\nconst CANCEL_TAG = String.fromCharCode(0xe007f);\nconst WAVING_BLACK_FLAG = \"🏴\";\n\nconst getEmoji = text => EMOJI_TO_NAME.has(text) ? `:${EMOJI_TO_NAME.get(text)}:` : text;\n\nexport const convertEmojiToNames = text => {\n  let result = \"\";\n  let buffer; // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n\n  for (const char of (_text$match = text.match(UNICODE_CHARACTER_RE)) !== null && _text$match !== void 0 ? _text$match : []) {\n    var _text$match;\n\n    if (buffer) {\n      if (char === CANCEL_TAG) {\n        result += getEmoji(buffer + char);\n        buffer = undefined;\n        continue;\n      } else if (/^\\udb40[\\udb61-\\udb7a]$/.test(char)) {\n        buffer += char;\n        continue;\n      } else {\n        result += getEmoji(buffer);\n        buffer = undefined;\n      }\n    } else if (char === WAVING_BLACK_FLAG) {\n      buffer = char;\n      continue;\n    }\n\n    result += getEmoji(char);\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}