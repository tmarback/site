{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport { applyPatch, getSnapshot } from \"mobx-state-tree\";\nimport { FieldAccessor } from \"mstform\";\nimport React from \"react\";\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\";\nimport { Section } from \"../../../common/layout/Section\";\nimport { Separator } from \"../../../common/layout/Separator\";\nimport { Stack } from \"../../../common/layout/Stack\";\nimport { chevron, chevronDown } from \"../../../icons/chevron\";\nimport { copy } from \"../../../icons/copy\";\nimport { remove } from \"../../../icons/remove\";\nimport { EmbedAuthorEditor } from \"./EmbedAuthorEditor\";\nimport { EmbedBodyEditor } from \"./EmbedBodyEditor\";\nimport { EmbedFieldEditor } from \"./EmbedFieldEditor\";\nimport { EmbedFooterEditor } from \"./EmbedFooterEditor\";\nimport { EmbedImagesEditor } from \"./EmbedImagesEditor\";\nexport function EmbedEditor(props) {\n  const {\n    embed,\n    form\n  } = props;\n  const name = useObserver(() => {\n    let name = `Embed ${form.index + 1}`;\n\n    if (embed.displayName) {\n      name += ` â€” ${embed.displayName}`;\n    }\n\n    return name;\n  });\n  return useObserver(() => /*#__PURE__*/_jsx(Section, {\n    name: name,\n    variant: \"large\",\n    color: embed.color,\n    actions: [form.index !== 0 && {\n      icon: chevron,\n      label: \"Move up\",\n      handler: () => {\n        var _form$parent;\n\n        applyPatch(form.state.value, [{\n          op: \"remove\",\n          path: form.path\n        }, {\n          op: \"add\",\n          path: `${(_form$parent = form.parent) === null || _form$parent === void 0 ? void 0 : _form$parent.path}/${form.index - 1}`,\n          value: getSnapshot(embed)\n        }]);\n        const parent = form.parent;\n\n        for (const accessor of parent.index(form.index - 1).flatAccessors) {\n          if (accessor instanceof FieldAccessor) {\n            accessor.setRawFromValue();\n          }\n        }\n      }\n    }, form.index !== embed.message.embeds.length - 1 && {\n      icon: chevronDown,\n      label: \"Move down\",\n      handler: () => {\n        var _form$parent2;\n\n        applyPatch(form.state.value, [{\n          op: \"remove\",\n          path: form.path\n        }, {\n          op: \"add\",\n          path: `${(_form$parent2 = form.parent) === null || _form$parent2 === void 0 ? void 0 : _form$parent2.path}/${form.index + 1}`,\n          value: getSnapshot(embed)\n        }]);\n        const parent = form.parent;\n\n        for (const accessor of parent.index(form.index + 1).flatAccessors) {\n          if (accessor instanceof FieldAccessor) {\n            accessor.setRawFromValue();\n          }\n        }\n      }\n    }, embed.message.size < 10 && {\n      icon: copy,\n      label: \"Duplicate\",\n      handler: () => {\n        var _form$parent3;\n\n        applyPatch(form.state.value, [{\n          op: \"add\",\n          path: `${(_form$parent3 = form.parent) === null || _form$parent3 === void 0 ? void 0 : _form$parent3.path}/${form.index + 1}`,\n          value: _objectSpread(_objectSpread({}, getSnapshot(embed)), {}, {\n            id: undefined\n          })\n        }]);\n        const parent = form.parent;\n\n        for (const accessor of parent.index(form.index + 1).flatAccessors) {\n          if (accessor instanceof FieldAccessor) {\n            accessor.setRawFromValue();\n          }\n        }\n      }\n    }, {\n      icon: remove,\n      label: \"Remove\",\n      handler: () => {\n        applyPatch(form.state.value, [{\n          op: \"remove\",\n          path: form.path\n        }]);\n      }\n    }].filter(item => typeof item === \"object\"),\n    hasError: !form.isValid,\n    children: /*#__PURE__*/_jsxs(Stack, {\n      gap: 16,\n      children: [/*#__PURE__*/_jsx(EmbedAuthorEditor, {\n        embed: embed,\n        form: form\n      }), /*#__PURE__*/_jsx(Separator, {}), /*#__PURE__*/_jsx(EmbedBodyEditor, {\n        embed: embed,\n        form: form\n      }), /*#__PURE__*/_jsx(Separator, {}), /*#__PURE__*/_jsx(Section, {\n        name: \"Fields\",\n        variant: \"indented\",\n        hasError: !form.repeatingForm(\"fields\").isValid,\n        children: /*#__PURE__*/_jsxs(Stack, {\n          gap: 16,\n          children: [embed.fields.map((field, index) => /*#__PURE__*/_jsx(EmbedFieldEditor, {\n            field: field,\n            form: form.repeatingForm(\"fields\").index(index)\n          }, field.id)), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(PrimaryButton, {\n              disabled: embed.fields.length >= 25,\n              onClick: () => {\n                form.repeatingForm(\"fields\").push({});\n              },\n              children: \"Add Field\"\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Separator, {}), /*#__PURE__*/_jsx(EmbedImagesEditor, {\n        embed: embed,\n        form: form\n      }), /*#__PURE__*/_jsx(Separator, {}), /*#__PURE__*/_jsx(EmbedFooterEditor, {\n        embed: embed,\n        form: form\n      })]\n    })\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/editor/message/EmbedEditor.tsx"],"names":["useObserver","applyPatch","getSnapshot","FieldAccessor","React","PrimaryButton","Section","Separator","Stack","chevron","chevronDown","copy","remove","EmbedAuthorEditor","EmbedBodyEditor","EmbedFieldEditor","EmbedFooterEditor","EmbedImagesEditor","EmbedEditor","props","embed","form","name","index","displayName","color","icon","label","handler","state","value","op","path","parent","accessor","flatAccessors","setRawFromValue","message","embeds","length","size","id","undefined","filter","item","isValid","repeatingForm","fields","map","field","push"],"mappings":"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","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\nimport { applyPatch, getSnapshot } from \"mobx-state-tree\"\nimport { FieldAccessor } from \"mstform\"\nimport React from \"react\"\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\"\nimport type { Action } from \"../../../common/layout/ActionButtons\"\nimport { Section } from \"../../../common/layout/Section\"\nimport { Separator } from \"../../../common/layout/Separator\"\nimport { Stack } from \"../../../common/layout/Stack\"\nimport { chevron, chevronDown } from \"../../../icons/chevron\"\nimport { copy } from \"../../../icons/copy\"\nimport { remove } from \"../../../icons/remove\"\nimport type {\n  EmbedItemFormState,\n  RepeatingEmbedItemFormState,\n} from \"../../message/state/editorForm\"\nimport type { EmbedLike } from \"../../message/state/models/EmbedModel\"\nimport type { FieldLike } from \"../../message/state/models/FieldModel\"\nimport { EmbedAuthorEditor } from \"./EmbedAuthorEditor\"\nimport { EmbedBodyEditor } from \"./EmbedBodyEditor\"\nimport { EmbedFieldEditor } from \"./EmbedFieldEditor\"\nimport { EmbedFooterEditor } from \"./EmbedFooterEditor\"\nimport { EmbedImagesEditor } from \"./EmbedImagesEditor\"\n\nexport type EmbedEditorProps = {\n  embed: EmbedLike\n  form: EmbedItemFormState\n}\n\nexport function EmbedEditor(props: EmbedEditorProps) {\n  const { embed, form } = props\n\n  const name = useObserver(() => {\n    let name = `Embed ${form.index + 1}`\n    if (embed.displayName) {\n      name += ` â€” ${embed.displayName}`\n    }\n    return name\n  })\n\n  return useObserver(() => (\n    <Section\n      name={name}\n      variant=\"large\"\n      color={embed.color}\n      actions={[\n        form.index !== 0 && {\n          icon: chevron,\n          label: \"Move up\",\n          handler: () => {\n            applyPatch(form.state.value, [\n              {\n                op: \"remove\",\n                path: form.path,\n              },\n              {\n                op: \"add\",\n                path: `${form.parent?.path}/${form.index - 1}`,\n                value: getSnapshot(embed),\n              },\n            ])\n            const parent = form.parent as RepeatingEmbedItemFormState\n            for (const accessor of parent.index(form.index - 1).flatAccessors) {\n              if (accessor instanceof FieldAccessor) {\n                accessor.setRawFromValue()\n              }\n            }\n          },\n        },\n        form.index !== embed.message.embeds.length - 1 && {\n          icon: chevronDown,\n          label: \"Move down\",\n          handler: () => {\n            applyPatch(form.state.value, [\n              {\n                op: \"remove\",\n                path: form.path,\n              },\n              {\n                op: \"add\",\n                path: `${form.parent?.path}/${form.index + 1}`,\n                value: getSnapshot(embed),\n              },\n            ])\n            const parent = form.parent as RepeatingEmbedItemFormState\n            for (const accessor of parent.index(form.index + 1).flatAccessors) {\n              if (accessor instanceof FieldAccessor) {\n                accessor.setRawFromValue()\n              }\n            }\n          },\n        },\n        embed.message.size < 10 && {\n          icon: copy,\n          label: \"Duplicate\",\n          handler: () => {\n            applyPatch(form.state.value, [\n              {\n                op: \"add\",\n                path: `${form.parent?.path}/${form.index + 1}`,\n                value: { ...getSnapshot(embed), id: undefined },\n              },\n            ])\n            const parent = form.parent as RepeatingEmbedItemFormState\n            for (const accessor of parent.index(form.index + 1).flatAccessors) {\n              if (accessor instanceof FieldAccessor) {\n                accessor.setRawFromValue()\n              }\n            }\n          },\n        },\n        {\n          icon: remove,\n          label: \"Remove\",\n          handler: () => {\n            applyPatch(form.state.value, [\n              {\n                op: \"remove\",\n                path: form.path,\n              },\n            ])\n          },\n        },\n      ].filter((item): item is Action => typeof item === \"object\")}\n      hasError={!form.isValid}\n    >\n      <Stack gap={16}>\n        <EmbedAuthorEditor embed={embed} form={form} />\n        <Separator />\n        <EmbedBodyEditor embed={embed} form={form} />\n        <Separator />\n        <Section\n          name=\"Fields\"\n          variant=\"indented\"\n          hasError={!form.repeatingForm(\"fields\").isValid}\n        >\n          <Stack gap={16}>\n            {embed.fields.map((field, index) => (\n              <EmbedFieldEditor\n                key={field.id}\n                field={field}\n                form={form.repeatingForm(\"fields\").index(index)}\n              />\n            ))}\n            <div>\n              <PrimaryButton\n                disabled={embed.fields.length >= 25}\n                onClick={() => {\n                  form.repeatingForm(\"fields\").push({} as FieldLike)\n                }}\n              >\n                Add Field\n              </PrimaryButton>\n            </div>\n          </Stack>\n        </Section>\n        <Separator />\n        <EmbedImagesEditor embed={embed} form={form} />\n        <Separator />\n        <EmbedFooterEditor embed={embed} form={form} />\n      </Stack>\n    </Section>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}