{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { copyTextToClipboard } from \"../../../common/dom/copyTextToClipboard\";\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\";\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\";\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\";\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\";\nimport { ModalContext } from \"../../../common/modal/ModalContext\";\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\";\nimport { shorten } from \"../../../common/utilities/shorten\";\nimport { remove } from \"../../../icons/remove\";\nimport { Markdown } from \"../../markdown/Markdown\";\nimport { getEditorUrl } from \"../getEditorUrl\";\nexport function ShareModal(props) {\n  const {\n    editorManager\n  } = props;\n  const modal = useRequiredContext(ModalContext);\n  const {\n    0: response,\n    1: setResponse\n  } = useState();\n  useEffect(() => {\n    const url = getEditorUrl(editorManager);\n    shorten(url).then(response => setResponse(response)).catch(() => setResponse(null));\n  }, [editorManager]);\n  let content = \"Getting short URL...\";\n\n  if (response) {\n    const formattedExpires = response.expires.toLocaleString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n    content = `URL: <${response.url}>\\nThis link expires at ${formattedExpires}.`;\n  } else if (response === null) {\n    content = \"Failed getting short URL. Please try again later.\";\n  }\n\n  return /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(ModalTitle, {\n        children: \"Share\"\n      }), /*#__PURE__*/_jsx(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      })]\n    }), /*#__PURE__*/_jsx(ModalBody, {\n      children: /*#__PURE__*/_jsx(Markdown, {\n        content: content\n      })\n    }), /*#__PURE__*/_jsxs(ModalFooter, {\n      children: [/*#__PURE__*/_jsx(SecondaryButton, {\n        disabled: !response,\n        onClick: () => {\n          var _response$url;\n\n          copyTextToClipboard((_response$url = response === null || response === void 0 ? void 0 : response.url) !== null && _response$url !== void 0 ? _response$url : \"\");\n        },\n        children: \"Copy Link\"\n      }), /*#__PURE__*/_jsx(PrimaryButton, {\n        onClick: () => {\n          modal.dismiss();\n        },\n        children: \"Close\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}