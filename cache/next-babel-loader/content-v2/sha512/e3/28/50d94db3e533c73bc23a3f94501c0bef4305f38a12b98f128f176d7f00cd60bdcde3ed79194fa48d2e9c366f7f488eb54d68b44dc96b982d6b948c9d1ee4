{"ast":null,"code":"import _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { toASCII } from \"punycode\";\nimport * as URL from \"url\";\nexport const depunycodeUrl = link => {\n  try {\n    const url = URL.parse(link);\n    const {\n      hostname,\n      protocol\n    } = url;\n    if ((protocol === null || protocol === void 0 ? void 0 : protocol.toLowerCase()) === \"file:\") return;\n    if (!hostname) return;\n    const asciiHostname = toASCII(hostname);\n    return URL.format(_objectSpread(_objectSpread({}, url), {}, {\n      hostname: asciiHostname,\n      protocol\n    }));\n  } catch {// return nothing\n  }\n};","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/helpers/depunycodeUrl.ts"],"names":["toASCII","URL","depunycodeUrl","link","url","parse","hostname","protocol","toLowerCase","asciiHostname","format"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAkB;AAC7C,MAAI;AACF,UAAMC,GAAG,GAAGH,GAAG,CAACI,KAAJ,CAAUF,IAAV,CAAZ;AACA,UAAM;AAAEG,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBH,GAA/B;AAEA,QAAI,CAAAG,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,WAAV,QAA4B,OAAhC,EAAyC;AACzC,QAAI,CAACF,QAAL,EAAe;AAEf,UAAMG,aAAa,GAAGT,OAAO,CAACM,QAAD,CAA7B;AAEA,WAAOL,GAAG,CAACS,MAAJ,iCACFN,GADE;AAELE,MAAAA,QAAQ,EAAEG,aAFL;AAGLF,MAAAA;AAHK,OAAP;AAKD,GAdD,CAcE,MAAM,CACN;AACD;AACF,CAlBM","sourcesContent":["import { toASCII } from \"punycode\"\nimport * as URL from \"url\"\n\nexport const depunycodeUrl = (link: string) => {\n  try {\n    const url = URL.parse(link)\n    const { hostname, protocol } = url\n\n    if (protocol?.toLowerCase() === \"file:\") return\n    if (!hostname) return\n\n    const asciiHostname = toASCII(hostname)\n\n    return URL.format({\n      ...url,\n      hostname: asciiHostname,\n      protocol,\n    })\n  } catch {\n    // return nothing\n  }\n}\n"]},"metadata":{},"sourceType":"module"}