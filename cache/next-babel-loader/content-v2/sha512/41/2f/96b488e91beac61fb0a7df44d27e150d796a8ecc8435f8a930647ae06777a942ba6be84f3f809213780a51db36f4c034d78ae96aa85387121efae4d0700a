{"ast":null,"code":"import { first } from \"./first\";\nimport { isNumber } from \"./isNumber\";\nexport const between = (min, max) => first(isNumber, (value, key) => min > value || max < value ? [`${key}: Must be between ${min} and ${max} inclusive`] : []);","map":{"version":3,"sources":["/home/runner/work/site/site/modules/editor/data/validation/between.ts"],"names":["first","isNumber","between","min","max","value","key"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAGA,OAAO,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAcC,GAAd,KACrBJ,KAAK,CAACC,QAAD,EAAW,CAACI,KAAD,EAAQC,GAAR,KACdH,GAAG,GAAIE,KAAP,IAA2BD,GAAG,GAAIC,KAAlC,GACI,CAAE,GAAEC,GAAI,qBAAoBH,GAAI,QAAOC,GAAI,YAA3C,CADJ,GAEI,EAHD,CADA","sourcesContent":["import { first } from \"./first\"\nimport { isNumber } from \"./isNumber\"\nimport type { Validator } from \"./Validator\"\n\nexport const between = (min: number, max: number): Validator =>\n  first(isNumber, (value, key) =>\n    min > (value as number) || max < (value as number)\n      ? [`${key}: Must be between ${min} and ${max} inclusive`]\n      : [],\n  )\n"]},"metadata":{},"sourceType":"module"}