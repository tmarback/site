{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Link from \"next/link\";\nimport React, { cloneElement } from \"react\";\nimport styled from \"styled-components\";\nimport { Clickable } from \"../input/Clickable\";\nimport { SCREEN_TINY } from \"../layout/breakpoints\";\nconst Container = styled(Clickable).withConfig({\n  componentId: \"sc-1y4hmuj-0\"\n})([\"height:100%;padding:0 8px;margin:0 4px;display:flex;align-items:center;color:\", \";font-size:15px;font-weight:600;text-align:center;position:relative;&:hover,&:focus{text-decoration:underline;}\", \"{height:48px;width:calc(100% - 24px);}\"], ({\n  theme\n}) => theme.header.primary, SCREEN_TINY);\nexport function HeaderItem(props) {\n  const {\n    children,\n    to,\n    newWindow = false,\n    onClick: handleClick\n  } = props;\n\n  if (!to) {\n    return /*#__PURE__*/_jsx(Container, {\n      onClick: handleClick,\n      children: children\n    });\n  }\n\n  const link = /*#__PURE__*/_jsx(Container, {\n    as: \"a\",\n    type: undefined,\n    onClick: handleClick,\n    children: children\n  });\n\n  if (newWindow) {\n    return /*#__PURE__*/cloneElement(link, {\n      href: to,\n      target: \"_blank\",\n      rel: \"noopener\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Link, {\n    href: to,\n    passHref: true,\n    children: link\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/page/HeaderItem.tsx"],"names":["Link","React","cloneElement","styled","Clickable","SCREEN_TINY","Container","theme","header","primary","HeaderItem","props","children","to","newWindow","onClick","handleClick","link","undefined","href","target","rel"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACC,SAAD,CAAT;AAAA;AAAA,mPAQJ,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,OARxB,EAoBXJ,WApBW,CAAf;AAiCA,OAAO,SAASK,UAAT,CAAoBC,KAApB,EAA4C;AACjD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,EAAZ;AAAgBC,IAAAA,SAAS,GAAG,KAA5B;AAAmCC,IAAAA,OAAO,EAAEC;AAA5C,MAA4DL,KAAlE;;AAEA,MAAI,CAACE,EAAL,EAAS;AACP,wBAAO,KAAC,SAAD;AAAW,MAAA,OAAO,EAAEG,WAApB;AAAA,gBAAkCJ;AAAlC,MAAP;AACD;;AAED,QAAMK,IAAI,gBACR,KAAC,SAAD;AAAW,IAAA,EAAE,EAAC,GAAd;AAAkB,IAAA,IAAI,EAAEC,SAAxB;AAAmC,IAAA,OAAO,EAAEF,WAA5C;AAAA,cACGJ;AADH,IADF;;AAMA,MAAIE,SAAJ,EAAe;AACb,wBAAOZ,YAAY,CAACe,IAAD,EAAO;AAAEE,MAAAA,IAAI,EAAEN,EAAR;AAAYO,MAAAA,MAAM,EAAE,QAApB;AAA8BC,MAAAA,GAAG,EAAE;AAAnC,KAAP,CAAnB;AACD;;AAED,sBACE,KAAC,IAAD;AAAM,IAAA,IAAI,EAAER,EAAZ;AAAgB,IAAA,QAAQ,MAAxB;AAAA,cACGI;AADH,IADF;AAKD","sourcesContent":["import Link from \"next/link\"\nimport React, { cloneElement, ReactNode } from \"react\"\nimport styled from \"styled-components\"\nimport { Clickable } from \"../input/Clickable\"\nimport { SCREEN_TINY } from \"../layout/breakpoints\"\n\nconst Container = styled(Clickable)`\n  height: 100%;\n  padding: 0 8px;\n  margin: 0 4px;\n\n  display: flex;\n  align-items: center;\n\n  color: ${({ theme }) => theme.header.primary};\n  font-size: 15px;\n  font-weight: 600;\n  text-align: center;\n\n  position: relative;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n\n  ${SCREEN_TINY} {\n    height: 48px;\n    width: calc(100% - 24px);\n  }\n`\n\nexport type HeaderItemProps = {\n  children?: ReactNode\n  to?: string\n  newWindow?: boolean\n  onClick?: () => void\n}\n\nexport function HeaderItem(props: HeaderItemProps) {\n  const { children, to, newWindow = false, onClick: handleClick } = props\n\n  if (!to) {\n    return <Container onClick={handleClick}>{children}</Container>\n  }\n\n  const link = (\n    <Container as=\"a\" type={undefined} onClick={handleClick}>\n      {children}\n    </Container>\n  )\n\n  if (newWindow) {\n    return cloneElement(link, { href: to, target: \"_blank\", rel: \"noopener\" })\n  }\n\n  return (\n    <Link href={to} passHref>\n      {link}\n    </Link>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}