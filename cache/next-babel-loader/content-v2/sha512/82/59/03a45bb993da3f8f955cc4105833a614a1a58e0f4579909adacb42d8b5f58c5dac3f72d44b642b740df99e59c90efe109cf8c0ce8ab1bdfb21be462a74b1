{"ast":null,"code":"import { useContext } from \"react\";\nexport const useRequiredContext = context => {\n  const value = useContext(context);\n\n  if (value == null) {\n    var _context$displayName;\n\n    const displayName = (_context$displayName = context.displayName) !== null && _context$displayName !== void 0 ? _context$displayName : \"(unknown context)\";\n    throw new Error(`${displayName} is not available in the component tree.`);\n  }\n\n  return value;\n};","map":{"version":3,"sources":["/home/runner/work/site/site/common/state/useRequiredContext.ts"],"names":["useContext","useRequiredContext","context","value","displayName","Error"],"mappings":"AAAA,SAAkBA,UAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,kBAAkB,GAAOC,OAAJ,IAA4B;AAC5D,QAAMC,KAAK,GAAGH,UAAU,CAACE,OAAD,CAAxB;;AAEA,MAAIC,KAAK,IAAI,IAAb,EAAmB;AAAA;;AACjB,UAAMC,WAAW,2BAAGF,OAAO,CAACE,WAAX,uEAA0B,mBAA3C;AACA,UAAM,IAAIC,KAAJ,CAAW,GAAED,WAAY,0CAAzB,CAAN;AACD;;AAED,SAAOD,KAAP;AACD,CATM","sourcesContent":["import { Context, useContext } from \"react\"\n\nexport const useRequiredContext = <T>(context: Context<T>) => {\n  const value = useContext(context)\n\n  if (value == null) {\n    const displayName = context.displayName ?? \"(unknown context)\"\n    throw new Error(`${displayName} is not available in the component tree.`)\n  }\n\n  return value as Exclude<T, undefined | null>\n}\n"]},"metadata":{},"sourceType":"module"}