{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport dynamic from \"next/dynamic\";\nimport { em, rem, size } from \"polished\";\nimport React, { useContext } from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { SCREEN_SMALL } from \"../../../common/layout/breakpoints\";\nimport { DARK_THEME } from \"../../../common/theming/darkTheme\";\nimport { EditorManagerContext } from \"../../editor/EditorManagerContext\";\nconst Clock = dynamic(async () => import(\"./Clock\").then(module => module.Clock), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./Clock\")],\n    modules: [\"./Clock\"]\n  }\n});\nconst Container = styled.div.withConfig({\n  componentId: \"sgp62q-0\"\n})([\"\", \";\", \";\"], ({\n  theme\n}) => theme.appearance.display === \"cozy\" && css([\"position:relative;margin-left:\", \";padding-left:\", \";\", \";\"], rem(-72), rem(72), ({\n  theme\n}) => theme.appearance.fontSize > 16 && css([\"margin-left:-72px;padding-left:72px;\"])), ({\n  theme\n}) => theme.appearance.display === \"compact\" && css([\"display:inline;display:contents;\"]));\nconst Avatar = styled.img.withConfig({\n  componentId: \"sgp62q-1\"\n})([\"\", \";position:absolute;left:0;top:\", \";margin:0 \", \";border-radius:50%;object-fit:cover;cursor:pointer;&:hover{box-shadow:\", \";}&:active{transform:translateY(1px);}\", \";\", \"{display:none;}\"], size(rem(40)), rem(2), rem(16), ({\n  theme\n}) => theme.elavation.medium, ({\n  theme\n}) => theme.appearance.fontSize > 16 && css([\"\", \";margin:0 16px;\"], size(40)), SCREEN_SMALL);\nconst Username = styled.h1.withConfig({\n  componentId: \"sgp62q-2\"\n})([\"display:inline;vertical-align:baseline;margin:0 \", \" 0 0;color:\", \";font-size:\", \";font-weight:500;line-height:\", \";word-wrap:break-word;cursor:pointer;\", \";\", \";\"], rem(4), ({\n  theme\n}) => theme.header.primary, rem(16), rem(22), ({\n  theme\n}) => theme.appearance.display === \"compact\" && css([\"margin-right:\", \";\"], rem(8)), ({\n  theme\n}) => theme.appearance.color === \"light\" && css([\"font-weight:600;\"]));\nconst BotTag = styled.span.withConfig({\n  componentId: \"sgp62q-3\"\n})([\"position:relative;top:\", \";min-height:\", \";max-height:\", \";margin:\", \" \", \" 0 0;padding:\", \" \", \";border-radius:3px;background:\", \";color:\", \";font-size:\", \";font-weight:500;line-height:1.3;vertical-align:baseline;text-transform:uppercase;\"], rem(-1.6), em(20.4), em(20.4), em(1.2), rem(4), rem(1.15), rem(4.4), ({\n  theme\n}) => theme.discord.primary, DARK_THEME.header.primary, em(10));\nexport function MessageHeader(props) {\n  const {\n    timestamp,\n    badge\n  } = props;\n  let {\n    username,\n    avatarUrl\n  } = props;\n  const theme = useTheme();\n  const editorManager = useContext(EditorManagerContext);\n  return useObserver(() => {\n    if (editorManager && editorManager.targets.length > 0) {\n      if (!username) username = editorManager.targets[0].displayName;\n      if (!avatarUrl) avatarUrl = editorManager.targets[0].displayAvatarUrl;\n    }\n\n    let info = [/*#__PURE__*/_jsx(Username, {\n      children: username\n    }, \"username\"), badge !== null && /*#__PURE__*/_jsx(BotTag, {\n      children: badge !== null && badge !== void 0 ? badge : \"Bot\"\n    }, \"badge\"), /*#__PURE__*/_jsx(Clock, {\n      timestamp: timestamp\n    }, \"clock\")];\n    if (theme.appearance.display === \"compact\") info = info.reverse();\n    return /*#__PURE__*/_jsxs(Container, {\n      children: [theme.appearance.display === \"cozy\" && /*#__PURE__*/_jsx(Avatar, {\n        src: avatarUrl,\n        alt: \"User avatar\"\n      }), info]\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}