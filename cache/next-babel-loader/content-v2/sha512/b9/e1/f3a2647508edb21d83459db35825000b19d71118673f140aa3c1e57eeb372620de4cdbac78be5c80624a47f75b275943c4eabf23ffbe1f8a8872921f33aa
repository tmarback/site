{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Z_INDEX_TOOLTIPS } from \"../layout/constants\";\nimport { useRequiredContext } from \"../state/useRequiredContext\";\nimport { TooltipItem } from \"./TooltipItem\";\nimport { TooltipManagerContext } from \"./TooltipManagerContext\";\nconst Wrapper = styled.div.withConfig({\n  componentId: \"den5bi-0\"\n})([\"& > *{z-index:\", \";}\"], Z_INDEX_TOOLTIPS);\nexport function TooltipOverlay() {\n  const manager = useRequiredContext(TooltipManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsx(Wrapper, {\n    children: manager.tooltips.map(tooltip => /*#__PURE__*/_jsx(TooltipItem, {\n      tooltip: tooltip\n    }, tooltip.id))\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/tooltip/TooltipOverlay.tsx"],"names":["useObserver","React","styled","Z_INDEX_TOOLTIPS","useRequiredContext","TooltipItem","TooltipManagerContext","Wrapper","div","TooltipOverlay","manager","tooltips","map","tooltip","id"],"mappings":";AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA,6BAEEL,gBAFF,CAAb;AAMA,OAAO,SAASM,cAAT,GAA0B;AAC/B,QAAMC,OAAO,GAAGN,kBAAkB,CAACE,qBAAD,CAAlC;AAEA,SAAON,WAAW,CAAC,mBACjB,KAAC,OAAD;AAAA,cACGU,OAAO,CAACC,QAAR,CAAiBC,GAAjB,CAAqBC,OAAO,iBAC3B,KAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA;AAAvC,OAAkBA,OAAO,CAACC,EAA1B,CADD;AADH,IADgB,CAAlB;AAOD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Z_INDEX_TOOLTIPS } from \"../layout/constants\"\nimport { useRequiredContext } from \"../state/useRequiredContext\"\nimport { TooltipItem } from \"./TooltipItem\"\nimport { TooltipManagerContext } from \"./TooltipManagerContext\"\n\nconst Wrapper = styled.div`\n  & > * {\n    z-index: ${Z_INDEX_TOOLTIPS};\n  }\n`\n\nexport function TooltipOverlay() {\n  const manager = useRequiredContext(TooltipManagerContext)\n\n  return useObserver(() => (\n    <Wrapper>\n      {manager.tooltips.map(tooltip => (\n        <TooltipItem key={tooltip.id} tooltip={tooltip} />\n      ))}\n    </Wrapper>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}