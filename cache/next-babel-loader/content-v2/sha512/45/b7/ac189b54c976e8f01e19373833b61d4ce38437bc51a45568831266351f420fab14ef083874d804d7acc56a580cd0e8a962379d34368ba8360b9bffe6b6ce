{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { linearGradient, rgb, rgba, size } from \"polished\";\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useDragArea } from \"../../dom/useDragArea\";\nimport { FlexContainer } from \"../../layout/FlexContainer\";\nimport { useAutorun } from \"../../state/useAutorun\";\nimport { ColorModel } from \"./ColorModel\";\nconst Picker = styled.div.withConfig({\n  componentId: \"sc-194jjtz-0\"\n})([\"width:220px;height:150px;border-radius:4px;\"]);\nconst PickerLayer = styled.div.withConfig({\n  componentId: \"sc-194jjtz-1\"\n})([\"\", \";border-radius:4px;\"], size(\"100%\"));\nconst PickerKnob = styled.div.withConfig({\n  componentId: \"sc-194jjtz-2\"\n})([\"\", \";border-radius:50%;background:white;border:2px solid white;\"], size(11));\nconst HueSlider = styled.div.withConfig({\n  componentId: \"sc-194jjtz-3\"\n})([\"\", \" margin-left:16px;width:12px;height:150px;border-radius:4px;&&{flex:0 0 auto;}\"], linearGradient({\n  colorStops: [rgb(255, 0, 0), rgb(255, 255, 0), rgb(0, 255, 0), rgb(0, 255, 255), rgb(0, 0, 255), rgb(255, 0, 255), rgb(255, 0, 0)],\n  toDirection: \"to bottom\"\n}));\nconst SliderKnob = styled.div.withConfig({\n  componentId: \"sc-194jjtz-4\"\n})([\"width:16px;height:8px;border-radius:3px;background:white;\"]);\nexport function ColorPicker(props) {\n  const {\n    color\n  } = props;\n  const pickerRef = useRef(null);\n  const pickerKnobRef = useRef(null);\n  const sliderRef = useRef(null);\n  const sliderKnobRef = useRef(null);\n  useAutorun(() => {\n    var _pureColor$hex, _color$hex;\n\n    const {\n      current: picker\n    } = pickerRef;\n    const {\n      current: pickerKnob\n    } = pickerKnobRef;\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      current: sliderKnob\n    } = sliderKnobRef;\n    if (!picker || !pickerKnob || !slider || !sliderKnob) return;\n    pickerKnob.style.visibility = \"visible\";\n    sliderKnob.style.visibility = \"visible\";\n    const {\n      width: pickerWidth,\n      height: pickerHeight\n    } = picker.getBoundingClientRect();\n    const {\n      height: sliderHeight\n    } = slider.getBoundingClientRect();\n    const pureColor = ColorModel.create({\n      hue: color.hue,\n      saturation: 1,\n      value: 1\n    });\n    picker.style.backgroundColor = (_pureColor$hex = pureColor.hex) !== null && _pureColor$hex !== void 0 ? _pureColor$hex : \"#ff0000\";\n    const pickerX = (color.saturation || 0) * pickerWidth - 6;\n    const pickerY = (1 - (color.value || 0)) * pickerHeight - 6;\n    pickerKnob.style.transform = `translate(${pickerX}px, ${pickerY}px)`;\n    pickerKnob.style.backgroundColor = (_color$hex = color.hex) !== null && _color$hex !== void 0 ? _color$hex : rgb(0, 0, 0);\n    const normalHue = (color.hue || 0) / 360;\n    sliderKnob.style.transform = `translateX(-2px) translateY(${normalHue * sliderHeight - 4}px)`;\n  });\n  useDragArea(sliderRef, (mouseX, mouseY) => {\n    color.setHue(mouseY * 360);\n  });\n  useDragArea(pickerRef, (mouseX, mouseY) => {\n    if (!color.valid) color.setHue(0);\n    color.setSaturation(mouseX);\n    color.setValue(1 - mouseY);\n  });\n  return /*#__PURE__*/_jsxs(FlexContainer, {\n    children: [/*#__PURE__*/_jsx(Picker, {\n      ref: pickerRef,\n      children: /*#__PURE__*/_jsx(PickerLayer, {\n        style: _objectSpread({}, linearGradient({\n          colorStops: [rgb(255, 255, 255), rgba(255, 255, 255, 0)],\n          fallback: rgba(0, 0, 0, 0),\n          toDirection: \"to right\"\n        })),\n        children: /*#__PURE__*/_jsx(PickerLayer, {\n          style: _objectSpread({}, linearGradient({\n            colorStops: [rgba(0, 0, 0, 0), rgb(0, 0, 0)],\n            fallback: rgba(0, 0, 0, 0),\n            toDirection: \"to bottom\"\n          })),\n          children: /*#__PURE__*/_jsx(PickerKnob, {\n            ref: pickerKnobRef,\n            style: {\n              visibility: \"hidden\"\n            }\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(HueSlider, {\n      ref: sliderRef,\n      children: /*#__PURE__*/_jsx(SliderKnob, {\n        ref: sliderKnobRef,\n        style: {\n          visibility: \"hidden\"\n        }\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}