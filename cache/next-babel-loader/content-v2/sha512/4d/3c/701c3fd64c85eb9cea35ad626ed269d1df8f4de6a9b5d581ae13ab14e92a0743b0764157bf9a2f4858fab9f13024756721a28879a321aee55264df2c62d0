{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../../common/input/button/SecondaryButton\";\nimport { ModalAction } from \"../../../../common/modal/layout/ModalAction\";\nimport { ModalBody } from \"../../../../common/modal/layout/ModalBody\";\nimport { ModalContainer } from \"../../../../common/modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../../../../common/modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../../../../common/modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../../../../common/modal/layout/ModalTitle\";\nimport { ModalContext } from \"../../../../common/modal/ModalContext\";\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\";\nimport { remove } from \"../../../../icons/remove\";\nimport { Markdown } from \"../../../markdown/Markdown\";\nexport function DeletionConfirmationModal(props) {\n  const {\n    backupManager,\n    backup\n  } = props;\n  const modal = useRequiredContext(ModalContext);\n  return useObserver(() => /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(ModalTitle, {\n        children: \"Delete Backup\"\n      }), /*#__PURE__*/_jsx(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      })]\n    }), /*#__PURE__*/_jsx(ModalBody, {\n      children: /*#__PURE__*/_jsx(Markdown, {\n        content: `Are you sure you want to delete \"${backup.name}\"? This action` + \" cannot be undone.\"\n      })\n    }), /*#__PURE__*/_jsxs(ModalFooter, {\n      children: [/*#__PURE__*/_jsx(SecondaryButton, {\n        onClick: () => modal.dismiss(),\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(PrimaryButton, {\n        onClick: async () => {\n          await backupManager.deleteBackup(backup.name);\n          modal.dismiss();\n        },\n        children: \"Delete\"\n      })]\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}