{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport hljs from \"highlight.js/lib/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { CodeBlockContainer } from \"../styles/CodeBlockContainer\";\nimport { getLanguageFromAlias } from \"./getLanguageFromAlias\";\nimport { highlightCode } from \"./highlightCode\";\nexport function CodeBlock(props) {\n  const {\n    content,\n    language = \"\"\n  } = props;\n  const {\n    0: html,\n    1: setHtml\n  } = useState(\"\");\n  useEffect(() => {\n    highlightCode(language, content).then(html => setHtml(html !== null && html !== void 0 ? html : \"\")).catch(() => setHtml(\"\"));\n  }, [content, language]);\n\n  if (false) {\n    var _getLanguageFromAlias, _getLanguageFromAlias2;\n\n    const safeLanguage = (_getLanguageFromAlias = (_getLanguageFromAlias2 = getLanguageFromAlias(language)) === null || _getLanguageFromAlias2 === void 0 ? void 0 : _getLanguageFromAlias2.name) !== null && _getLanguageFromAlias !== void 0 ? _getLanguageFromAlias : \"plaintext\";\n    return /*#__PURE__*/_jsx(CodeBlockContainer, {\n      dangerouslySetInnerHTML: {\n        __html: hljs.highlight(safeLanguage, content).value\n      }\n    });\n  }\n\n  if (!html) {\n    return /*#__PURE__*/_jsx(CodeBlockContainer, {\n      children: content\n    });\n  }\n\n  return /*#__PURE__*/_jsx(CodeBlockContainer, {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/code/CodeBlock.tsx"],"names":["hljs","React","useEffect","useState","CodeBlockContainer","getLanguageFromAlias","highlightCode","CodeBlock","props","content","language","html","setHtml","then","catch","safeLanguage","name","__html","highlight","value"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAOA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAQ,GAAG;AAAtB,MAA6BF,KAAnC;AAEA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa,CAACI,QAAD,EAAWD,OAAX,CAAb,CACGI,IADH,CACQF,IAAI,IAAIC,OAAO,CAACD,IAAD,aAACA,IAAD,cAACA,IAAD,GAAS,EAAT,CADvB,EAEGG,KAFH,CAES,MAAMF,OAAO,CAAC,EAAD,CAFtB;AAGD,GAJQ,EAIN,CAACH,OAAD,EAAUC,QAAV,CAJM,CAAT;;AAMA,aAAmC;AAAA;;AACjC,UAAMK,YAAY,sDAAGV,oBAAoB,CAACK,QAAD,CAAvB,2DAAG,uBAAgCM,IAAnC,yEAA2C,WAA7D;AAEA,wBACE,KAAC,kBAAD;AACE,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAEjB,IAAI,CAACkB,SAAL,CAAeH,YAAf,EAA6BN,OAA7B,EAAsCU;AADvB;AAD3B,MADF;AAOD;;AAED,MAAI,CAACR,IAAL,EAAW;AACT,wBAAO,KAAC,kBAAD;AAAA,gBAAqBF;AAArB,MAAP;AACD;;AAED,sBACE,KAAC,kBAAD;AACE,IAAA,uBAAuB,EAAE;AACvBQ,MAAAA,MAAM,EAAEN;AADe;AAD3B,IADF;AAOD","sourcesContent":["import hljs from \"highlight.js/lib/core\"\nimport React, { useEffect, useState } from \"react\"\nimport { CodeBlockContainer } from \"../styles/CodeBlockContainer\"\nimport { getLanguageFromAlias } from \"./getLanguageFromAlias\"\nimport { highlightCode } from \"./highlightCode\"\n\nexport type CodeBlockProps = {\n  content: string\n  language?: string\n}\n\nexport function CodeBlock(props: CodeBlockProps) {\n  const { content, language = \"\" } = props\n\n  const [html, setHtml] = useState(\"\")\n  useEffect(() => {\n    highlightCode(language, content)\n      .then(html => setHtml(html ?? \"\"))\n      .catch(() => setHtml(\"\"))\n  }, [content, language])\n\n  if (typeof window === \"undefined\") {\n    const safeLanguage = getLanguageFromAlias(language)?.name ?? \"plaintext\"\n\n    return (\n      <CodeBlockContainer\n        dangerouslySetInnerHTML={{\n          __html: hljs.highlight(safeLanguage, content).value,\n        }}\n      />\n    )\n  }\n\n  if (!html) {\n    return <CodeBlockContainer>{content}</CodeBlockContainer>\n  }\n\n  return (\n    <CodeBlockContainer\n      dangerouslySetInnerHTML={{\n        __html: html,\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}