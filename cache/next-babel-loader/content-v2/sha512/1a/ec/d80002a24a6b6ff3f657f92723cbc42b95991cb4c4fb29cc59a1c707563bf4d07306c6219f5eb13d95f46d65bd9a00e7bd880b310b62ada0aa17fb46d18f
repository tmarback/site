{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createPopper } from \"@popperjs/core\";\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport { FocusOn } from \"react-focus-on\";\nimport { useRequiredContext } from \"../state/useRequiredContext\";\nimport { PopoverProvider } from \"./PopoverContext\";\nimport { PopoverManagerContext } from \"./PopoverManagerContext\";\nexport function PopoverItem(props) {\n  const {\n    popover\n  } = props;\n  const manager = useRequiredContext(PopoverManagerContext);\n  const ref = useRef(null);\n  useLayoutEffect(() => {\n    const {\n      current: element\n    } = ref;\n    if (!element) return;\n    const popper = createPopper(popover.anchor, element, {\n      placement: popover.placement,\n      modifiers: [{\n        name: \"offset\",\n        options: {\n          offset: [0, 8]\n        }\n      }]\n    });\n    return () => {\n      popper.destroy();\n    };\n  });\n  return /*#__PURE__*/_jsx(PopoverProvider, {\n    value: popover,\n    children: /*#__PURE__*/_jsx(FocusOn, {\n      ref: ref,\n      shards: popover.shards,\n      onClickOutside: () => manager.dismiss(popover.name),\n      onEscapeKey: () => manager.dismiss(popover.name),\n      children: popover.render()\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}