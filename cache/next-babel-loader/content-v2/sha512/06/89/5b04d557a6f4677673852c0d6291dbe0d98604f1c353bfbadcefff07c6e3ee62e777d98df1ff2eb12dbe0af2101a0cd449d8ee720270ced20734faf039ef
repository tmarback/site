{"ast":null,"code":"import { openDB } from \"idb\";\nimport { showUpgradeBlockedMessage } from \"./showUpgradeBlockedMessage\";\nimport { upgradeDatabase } from \"./upgradeDatabase\";\nexport const openDatabase = async () => {\n  return openDB(\"discohook\", 10, {\n    upgrade: (database, oldVersion, newVersion, transaction) => {\n      // Casting to unknown schema, because upgrades shouldn't assume how the\n      // schema looks at that time\n      upgradeDatabase(database, transaction, oldVersion).then(() => {\n        var _document$querySelect;\n\n        localStorage.setItem(\"database-upgraded-version\", \"10\");\n        (_document$querySelect = document.querySelector(\"#db-upgrade-blocked\")) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.remove();\n      }).catch(error => {\n        console.error(\"Error on database upgrade:\", error);\n      });\n    },\n    blocked: showUpgradeBlockedMessage\n  });\n};","map":null,"metadata":{},"sourceType":"module"}