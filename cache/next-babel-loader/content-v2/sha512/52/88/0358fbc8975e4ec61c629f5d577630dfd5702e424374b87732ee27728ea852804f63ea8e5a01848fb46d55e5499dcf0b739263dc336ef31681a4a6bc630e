{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { defaultRules, inlineRegex } from \"simple-markdown\";\nimport { Mention } from \"../styles/Mention\";\nconst MENTION_RE = /^<(@!?|@&|#)\\d+>|^(@(?:everyone|here))/;\nconst MENTION_TYPES = new Map(Object.entries({\n  \"@\": \"@user\",\n  \"@!\": \"@user\",\n  \"@&\": \"@role\",\n  \"#\": \"#channel\"\n}));\nexport const mention = {\n  order: defaultRules.text.order,\n  match: inlineRegex(MENTION_RE),\n  parse: capture => {\n    const [, type, everyoneOrHere] = capture;\n\n    if (everyoneOrHere) {\n      return {\n        content: everyoneOrHere\n      };\n    }\n\n    return {\n      content: MENTION_TYPES.get(type)\n    };\n  },\n  react: (node, output, state) => /*#__PURE__*/_jsx(Mention, {\n    children: node.content\n  }, state.key)\n};","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/rules/mention.tsx"],"names":["React","defaultRules","inlineRegex","Mention","MENTION_RE","MENTION_TYPES","Map","Object","entries","mention","order","text","match","parse","capture","type","everyoneOrHere","content","get","react","node","output","state","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,iBAA1C;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,UAAU,GAAG,wCAAnB;AAEA,MAAMC,aAAa,GAAG,IAAIC,GAAJ,CACpBC,MAAM,CAACC,OAAP,CAAe;AACb,OAAK,OADQ;AAEb,QAAM,OAFO;AAGb,QAAM,OAHO;AAIb,OAAK;AAJQ,CAAf,CADoB,CAAtB;AASA,OAAO,MAAMC,OAAqB,GAAG;AACnCC,EAAAA,KAAK,EAAET,YAAY,CAACU,IAAb,CAAkBD,KADU;AAEnCE,EAAAA,KAAK,EAAEV,WAAW,CAACE,UAAD,CAFiB;AAGnCS,EAAAA,KAAK,EAAEC,OAAO,IAAI;AAChB,UAAM,GAAGC,IAAH,EAASC,cAAT,IAA2BF,OAAjC;;AAEA,QAAIE,cAAJ,EAAoB;AAClB,aAAO;AACLC,QAAAA,OAAO,EAAED;AADJ,OAAP;AAGD;;AAED,WAAO;AACLC,MAAAA,OAAO,EAAEZ,aAAa,CAACa,GAAd,CAAkBH,IAAlB;AADJ,KAAP;AAGD,GAfkC;AAgBnCI,EAAAA,KAAK,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,kBACL,KAAC,OAAD;AAAA,cAA0BF,IAAI,CAACH;AAA/B,KAAcK,KAAK,CAACC,GAApB;AAjBiC,CAA9B","sourcesContent":["import React from \"react\"\nimport { defaultRules, inlineRegex } from \"simple-markdown\"\nimport type { MarkdownRule } from \"../parsers/MarkdownRule\"\nimport { Mention } from \"../styles/Mention\"\n\nconst MENTION_RE = /^<(@!?|@&|#)\\d+>|^(@(?:everyone|here))/\n\nconst MENTION_TYPES = new Map(\n  Object.entries({\n    \"@\": \"@user\",\n    \"@!\": \"@user\",\n    \"@&\": \"@role\",\n    \"#\": \"#channel\",\n  }),\n)\n\nexport const mention: MarkdownRule = {\n  order: defaultRules.text.order,\n  match: inlineRegex(MENTION_RE),\n  parse: capture => {\n    const [, type, everyoneOrHere] = capture\n\n    if (everyoneOrHere) {\n      return {\n        content: everyoneOrHere,\n      }\n    }\n\n    return {\n      content: MENTION_TYPES.get(type),\n    }\n  },\n  react: (node, output, state) => (\n    <Mention key={state.key}>{node.content}</Mention>\n  ),\n}\n"]},"metadata":{},"sourceType":"module"}