{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { remove } from \"../../icons/remove\";\nimport { bindToInput } from \"../input/bindToInput\";\nimport { PrimaryButton } from \"../input/button/PrimaryButton\";\nimport { Checkbox } from \"../input/checkable/Checkbox\";\nimport { Radio } from \"../input/checkable/Radio\";\nimport { RadioGroup } from \"../input/checkable/RadioGroup\";\nimport { Slider } from \"../input/slider/Slider\";\nimport { Stack } from \"../layout/Stack\";\nimport { ModalAction } from \"../modal/layout/ModalAction\";\nimport { ModalBody } from \"../modal/layout/ModalBody\";\nimport { ModalContainer } from \"../modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../modal/layout/ModalTitle\";\nimport { ModalContext } from \"../modal/ModalContext\";\nimport { useRequiredContext } from \"../state/useRequiredContext\";\nimport { FONT_SIZES } from \"../theming/constants\";\nimport { PreferenceManagerContext } from \"./PreferenceManagerContext\";\nconst PreferenceSection = styled.h5.withConfig({\n  componentId: \"sc-1l2xq6-0\"\n})([\"margin:8px 0 4px;color:\", \";font-weight:600;font-size:14px;\"], ({\n  theme\n}) => theme.header.primary);\nexport function PreferencesModal() {\n  const modal = useRequiredContext(ModalContext);\n  const settingsManager = useRequiredContext(PreferenceManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(ModalTitle, {\n        children: \"Settings\"\n      }), /*#__PURE__*/_jsx(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      })]\n    }), /*#__PURE__*/_jsx(ModalBody, {\n      children: /*#__PURE__*/_jsxs(Stack, {\n        gap: 8,\n        children: [/*#__PURE__*/_jsx(PreferenceSection, {\n          children: \"Appearance\"\n        }), /*#__PURE__*/_jsxs(RadioGroup, _objectSpread(_objectSpread({\n          id: \"settings_color\",\n          label: \"Color Theme\"\n        }, bindToInput(settingsManager.settings, \"color\")), {}, {\n          children: [/*#__PURE__*/_jsx(Radio, {\n            label: \"Dark\",\n            value: \"dark\"\n          }), /*#__PURE__*/_jsx(Radio, {\n            label: \"Light\",\n            value: \"light\"\n          })]\n        })), /*#__PURE__*/_jsxs(RadioGroup, _objectSpread(_objectSpread({\n          id: \"settings_display\",\n          label: \"Display Mode\"\n        }, bindToInput(settingsManager.settings, \"display\")), {}, {\n          children: [/*#__PURE__*/_jsx(Radio, {\n            label: \"Cozy\",\n            value: \"cozy\"\n          }), /*#__PURE__*/_jsx(Radio, {\n            label: \"Compact\",\n            value: \"compact\"\n          })]\n        })), /*#__PURE__*/_jsx(Slider, {\n          id: \"settings_fontSize\",\n          label: \"Font Size\",\n          min: 0,\n          max: 6,\n          markers: FONT_SIZES.map((size, index) => ({\n            value: index,\n            label: String(size)\n          })),\n          getValueName: value => `${FONT_SIZES[value]} pixels`,\n          value: FONT_SIZES.indexOf(settingsManager.settings.fontSize),\n          onChange: index => {\n            settingsManager.settings.fontSize = FONT_SIZES[index];\n          }\n        }), /*#__PURE__*/_jsx(PreferenceSection, {\n          children: \"Editor\"\n        }), /*#__PURE__*/_jsx(Checkbox, _objectSpread({\n          id: \"settings_confirmExit\",\n          label: \"Confirm on Exit\"\n        }, bindToInput(settingsManager.settings, \"confirmExit\"))), /*#__PURE__*/_jsx(Checkbox, _objectSpread({\n          id: \"settings_expandSections\",\n          label: \"Expand Sections by Default\"\n        }, bindToInput(settingsManager.settings, \"expandSections\")))]\n      })\n    }), /*#__PURE__*/_jsx(ModalFooter, {\n      children: /*#__PURE__*/_jsx(PrimaryButton, {\n        onClick: () => modal.dismiss(),\n        children: \"Close\"\n      })\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}