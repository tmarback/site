{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport { Observer } from \"mobx-react-lite\";\nimport { ellipsis } from \"polished\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { chevron } from \"../../icons/chevron\";\nimport { error } from \"../../icons/error\";\nimport { useMeasure } from \"../dom/useMeasure\";\nimport { usePreference } from \"../settings/usePreference\";\nimport { usePrevious } from \"../state/usePrevious\";\nimport { ActionButtons } from \"./ActionButtons\";\nimport { SCREEN_TINY } from \"./breakpoints\";\nimport { Icon } from \"./Icon\";\nimport { IconButton } from \"./IconButton\";\nconst Container = styled(animated.section).withConfig({\n  componentId: \"sc-16nv4v-0\"\n})([\"display:flex;\", \";\", \";\"], ({\n  variant\n}) => (variant === \"normal\" || variant === \"indented\") && css([\"margin:-8px;padding:0 8px;\"]), ({\n  variant\n}) => variant === \"large\" && css([\"border-radius:4px;box-shadow:\", \";\"], ({\n  theme\n}) => theme.elavation.medium));\nconst ColorPreview = styled.div.withConfig({\n  componentId: \"sc-16nv4v-1\"\n})([\"width:4px;\"]);\nconst SectionContent = styled.div.withConfig({\n  componentId: \"sc-16nv4v-2\"\n})([\"flex:1;\", \";\"], ({\n  variant\n}) => variant === \"large\" && css([\"border:1px solid \", \";border-left:none;padding:15px;border-radius:0 4px 4px 0;\"], ({\n  theme\n}) => theme.background.secondaryAlt));\nconst Header = styled.div.withConfig({\n  componentId: \"sc-16nv4v-3\"\n})([\"display:grid;grid-template-columns:1fr max-content;height:32px;\", \"\"], ({\n  variant\n}) => variant === \"large\" && css([\"margin:-8px 0;\"]));\nconst HeaderContent = styled.div.withConfig({\n  componentId: \"sc-16nv4v-4\"\n})([\"min-width:0;height:100%;display:flex;align-items:center;\"]);\nconst CollapseIcon = styled(IconButton).withConfig({\n  componentId: \"sc-16nv4v-5\"\n})([\"margin-left:-8px;transform:rotate(90deg);transition:transform 150ms;\", \";\"], ({\n  open\n}) => open && css([\"transform:rotate(180deg);\"]));\nconst Title = styled.h2.withConfig({\n  componentId: \"sc-16nv4v-6\"\n})([\"\", \";margin:-8px 0;padding:8px 0;font-size:16px;font-weight:500;color:\", \";user-select:none;\", \";\"], ellipsis(), ({\n  theme\n}) => theme.header.secondary, ({\n  variant\n}) => variant === \"large\" && css([\"font-size:18px;line-height:16px;color:\", \";\"], ({\n  theme\n}) => theme.header.primary));\nconst ValidationError = styled(animated.div).withConfig({\n  componentId: \"sc-16nv4v-7\"\n})([\"color:\", \";margin-right:8px;\"], ({\n  theme\n}) => theme.accent.danger);\nconst Content = styled.div.withConfig({\n  componentId: \"sc-16nv4v-8\"\n})([\"&:not(:empty){padding-top:\", \"px;padding-bottom:\", \"px;\", \"}\"], ({\n  variant\n}) => variant === \"large\" ? 16 : 8, ({\n  variant\n}) => variant === \"large\" ? 0 : 8, ({\n  variant\n}) => variant === \"indented\" && css([\"padding-left:24px;\", \"{padding-left:12px;}\"], SCREEN_TINY));\nexport function Section(props) {\n  const {\n    children,\n    name,\n    variant = \"normal\",\n    actions,\n    color,\n    hasError = false\n  } = props;\n  const expandSections = usePreference(\"expandSections\");\n  const containerRef = useRef(null);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(expandSections);\n  const previousOpen = usePrevious(open);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(open);\n  const frameRef = useRef();\n  useEffect(() => {\n    return () => {\n      if (frameRef.current) cancelAnimationFrame(frameRef.current);\n    };\n  }, []);\n\n  const toggleOpen = force => {\n    frameRef.current = requestAnimationFrame(() => {\n      setVisible(true);\n      frameRef.current = requestAnimationFrame(() => {\n        setOpen(force !== null && force !== void 0 ? force : open => !open);\n      });\n    });\n  };\n\n  const previousExpandSections = usePrevious(expandSections);\n  useEffect(() => {\n    if (previousExpandSections !== expandSections && open !== expandSections) {\n      toggleOpen(expandSections);\n    }\n  }, [expandSections, open, previousExpandSections]);\n  const [ref, {\n    height: contentHeight\n  }] = useMeasure();\n  const style = useSpring({\n    config: {\n      tension: 250,\n      clamp: true\n    },\n    height: (variant === \"large\" ? 48 : 32) + (open ? contentHeight + 16 : 0),\n    onRest: () => setVisible(open)\n  });\n  const errorStyle = useSpring({\n    config: {\n      tension: 300,\n      clamp: true\n    },\n    opacity: Number(hasError)\n  });\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxs(Container, {\n    variant: variant,\n    ref: containerRef,\n    style: {\n      overflow: \"hidden\",\n      height: open && previousOpen ? \"auto\" : style.height\n    },\n    children: [color && /*#__PURE__*/_jsx(Observer, {\n      children: () => {\n        var _color$hex;\n\n        return /*#__PURE__*/_jsx(ColorPreview, {\n          style: {\n            backgroundColor: (_color$hex = color.hex) !== null && _color$hex !== void 0 ? _color$hex : theme.background.secondaryAlt\n          }\n        });\n      }\n    }), /*#__PURE__*/_jsxs(SectionContent, {\n      variant: variant,\n      children: [/*#__PURE__*/_jsxs(Header, {\n        variant: variant,\n        children: [/*#__PURE__*/_jsxs(HeaderContent, {\n          onClick: () => toggleOpen(),\n          children: [/*#__PURE__*/_jsx(CollapseIcon, {\n            open: open,\n            icon: chevron,\n            label: `${open ? \"Collapse\" : \"Expand\"} ${name}`,\n            tooltip: false\n          }), /*#__PURE__*/_jsx(Title, {\n            variant: variant,\n            children: name\n          }), /*#__PURE__*/_jsx(ValidationError, {\n            style: errorStyle,\n            children: /*#__PURE__*/_jsx(Icon, {\n              children: error\n            })\n          })]\n        }), actions && /*#__PURE__*/_jsx(ActionButtons, {\n          actions: actions\n        })]\n      }), /*#__PURE__*/_jsx(Content, {\n        variant: variant,\n        ref: ref,\n        children: visible && children\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}