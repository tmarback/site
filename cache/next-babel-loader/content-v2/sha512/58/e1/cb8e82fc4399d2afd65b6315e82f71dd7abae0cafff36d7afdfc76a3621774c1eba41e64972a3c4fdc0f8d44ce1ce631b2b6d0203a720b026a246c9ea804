{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { ellipsis } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../../../../common/input/button/Button\";\nimport { ActionButtons } from \"../../../../common/layout/ActionButtons\";\nimport { ModalManagerContext } from \"../../../../common/modal/ModalManagerContext\";\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\";\nimport { copy } from \"../../../../icons/copy\";\nimport { save } from \"../../../../icons/save\";\nimport { trash } from \"../../../../icons/trash\";\nimport { upload } from \"../../../../icons/upload\";\nimport { BackupManagerContext } from \"../BackupManagerContext\";\nimport { DeletionConfirmationModal } from \"./DeletionConfirmationModal\";\nconst Container = styled.li.withConfig({\n  componentId: \"sc-4y1qwg-0\"\n})([\"height:48px;display:flex;align-items:center;list-style:none;border:0 solid \", \";& + &{border-top-width:1px;}& > \", \"{margin:0;}\"], ({\n  theme\n}) => theme.backgroundModifier.accent, Button);\nconst BackupName = styled.div.withConfig({\n  componentId: \"sc-4y1qwg-1\"\n})([\"\", \";flex:1;font-weight:500;\"], ellipsis());\nexport function BackupItem(props) {\n  const {\n    backup\n  } = props;\n  const modalManager = useRequiredContext(ModalManagerContext);\n  const backupManager = useRequiredContext(BackupManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(BackupName, {\n      children: backup.name\n    }), /*#__PURE__*/_jsx(ActionButtons, {\n      actions: [{\n        icon: upload,\n        label: \"Load\",\n        handler: async () => backupManager.loadBackup(backup.name)\n      }, {\n        icon: save,\n        label: \"Export\",\n        handler: async () => backupManager.exportBackup(backup.name),\n        overflow: true\n      }, {\n        icon: copy,\n        label: \"Overwrite\",\n        handler: async () => backupManager.saveBackup(backup.name),\n        overflow: true\n      }, {\n        icon: trash,\n        label: \"Delete\",\n        handler: () => modalManager.spawn({\n          render: () => /*#__PURE__*/_jsx(DeletionConfirmationModal, {\n            backupManager: backupManager,\n            backup: backup\n          })\n        }),\n        overflow: true\n      }]\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}