{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { cover, size } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useRequiredContext } from \"../../state/useRequiredContext\";\nimport { CheckableButton } from \"./layout/CheckableButton\";\nimport { CheckableContainer } from \"./layout/CheckableContainer\";\nimport { CheckableInput } from \"./layout/CheckableInput\";\nimport { CheckableLabel } from \"./layout/CheckableLabel\";\nimport { Positioner } from \"./layout/Positioner\";\nimport { RadioContext } from \"./RadioContext\";\nconst Button = styled(CheckableButton).withConfig({\n  componentId: \"sc-1aqn01m-0\"\n})([\"border-radius:50%;&::after{\", \";\", \";content:\\\"\\\";display:block;background:currentColor;border-radius:50%;opacity:0;transition:150ms;transition-property:opacity;}input:checked + &::after{opacity:1;}\"], cover(2), size(8));\nexport function Radio(props) {\n  const {\n    id: givenId,\n    label,\n    value,\n    disabled\n  } = props;\n  const group = useRequiredContext(RadioContext);\n  const id = givenId !== null && givenId !== void 0 ? givenId : `${group.id}_${value}`;\n  return /*#__PURE__*/_jsxs(CheckableContainer, {\n    children: [/*#__PURE__*/_jsxs(Positioner, {\n      children: [/*#__PURE__*/_jsx(CheckableInput, {\n        id: id,\n        type: \"radio\",\n        tabIndex: group.selected === value ? 0 : -1,\n        name: group.id,\n        value: value,\n        disabled: disabled,\n        checked: group.selected === value,\n        onChange: group.handleChange\n      }), /*#__PURE__*/_jsx(Button, {})]\n    }), /*#__PURE__*/_jsx(CheckableLabel, {\n      htmlFor: id,\n      children: label\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}