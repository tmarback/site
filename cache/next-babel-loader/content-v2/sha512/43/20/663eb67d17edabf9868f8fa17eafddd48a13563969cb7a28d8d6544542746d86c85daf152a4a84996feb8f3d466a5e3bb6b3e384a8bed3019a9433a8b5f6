{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { defaultRules, unescapeUrl } from \"simple-markdown\";\nimport { depunycodeUrl } from \"../helpers/depunycodeUrl\";\nexport const link = _objectSpread(_objectSpread({}, defaultRules.link), {}, {\n  parse: (capture, parse, state) => {\n    const [, name, href, title] = capture;\n    const url = unescapeUrl(href);\n    if (!/^https?:\\/\\//i.test(url)) return parse(name, state);\n    const decoded = depunycodeUrl(url);\n\n    if (!decoded) {\n      return {\n        type: \"text\",\n        content: url\n      };\n    }\n\n    const target = decoded;\n    return {\n      content: parse(name, state),\n      target,\n      title\n    };\n  },\n  react: (node, output, state) => /*#__PURE__*/_jsx(\"a\", {\n    href: node.target,\n    title: node.title,\n    rel: \"noopener noreferrer nofollow ugc\",\n    target: \"_blank\",\n    children: output(node.content, state)\n  }, state.key)\n});","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/rules/link.tsx"],"names":["React","defaultRules","unescapeUrl","depunycodeUrl","link","parse","capture","state","name","href","title","url","test","decoded","type","content","target","react","node","output","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,iBAA1C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAGA,OAAO,MAAMC,IAAkB,mCAC1BH,YAAY,CAACG,IADa;AAE7BC,EAAAA,KAAK,EAAE,CAACC,OAAD,EAAUD,KAAV,EAAiBE,KAAjB,KAA2B;AAChC,UAAM,GAAGC,IAAH,EAASC,IAAT,EAAeC,KAAf,IAAwBJ,OAA9B;AAEA,UAAMK,GAAG,GAAGT,WAAW,CAACO,IAAD,CAAvB;AACA,QAAI,CAAC,gBAAgBG,IAAhB,CAAqBD,GAArB,CAAL,EAAgC,OAAON,KAAK,CAACG,IAAD,EAAOD,KAAP,CAAZ;AAEhC,UAAMM,OAAO,GAAGV,aAAa,CAACQ,GAAD,CAA7B;;AACA,QAAI,CAACE,OAAL,EAAc;AACZ,aAAO;AACLC,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,OAAO,EAAEJ;AAFJ,OAAP;AAID;;AAED,UAAMK,MAAM,GAAGH,OAAf;AAEA,WAAO;AACLE,MAAAA,OAAO,EAAEV,KAAK,CAACG,IAAD,EAAOD,KAAP,CADT;AAELS,MAAAA,MAFK;AAGLN,MAAAA;AAHK,KAAP;AAKD,GAvB4B;AAwB7BO,EAAAA,KAAK,EAAE,CAACC,IAAD,EAAOC,MAAP,EAAeZ,KAAf,kBACL;AAEE,IAAA,IAAI,EAAEW,IAAI,CAACF,MAFb;AAGE,IAAA,KAAK,EAAEE,IAAI,CAACR,KAHd;AAIE,IAAA,GAAG,EAAC,kCAJN;AAKE,IAAA,MAAM,EAAC,QALT;AAAA,cAOGS,MAAM,CAACD,IAAI,CAACH,OAAN,EAAeR,KAAf;AAPT,KACOA,KAAK,CAACa,GADb;AAzB2B,EAAxB","sourcesContent":["import React from \"react\"\nimport { defaultRules, unescapeUrl } from \"simple-markdown\"\nimport { depunycodeUrl } from \"../helpers/depunycodeUrl\"\nimport type { MarkdownRule } from \"../parsers/MarkdownRule\"\n\nexport const link: MarkdownRule = {\n  ...defaultRules.link,\n  parse: (capture, parse, state) => {\n    const [, name, href, title] = capture\n\n    const url = unescapeUrl(href)\n    if (!/^https?:\\/\\//i.test(url)) return parse(name, state)\n\n    const decoded = depunycodeUrl(url)\n    if (!decoded) {\n      return {\n        type: \"text\",\n        content: url,\n      }\n    }\n\n    const target = decoded\n\n    return {\n      content: parse(name, state),\n      target,\n      title,\n    }\n  },\n  react: (node, output, state) => (\n    <a\n      key={state.key}\n      href={node.target}\n      title={node.title}\n      rel=\"noopener noreferrer nofollow ugc\"\n      target=\"_blank\"\n    >\n      {output(node.content, state)}\n    </a>\n  ),\n}\n"]},"metadata":{},"sourceType":"module"}