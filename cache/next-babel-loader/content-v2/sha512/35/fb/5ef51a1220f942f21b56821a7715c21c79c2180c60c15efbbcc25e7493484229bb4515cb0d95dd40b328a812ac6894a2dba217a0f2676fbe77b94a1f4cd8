{"ast":null,"code":"import { first } from \"./first\";\nimport { isObject } from \"./isObject\";\nexport const noExcessiveKeys = (...keys) => first(isObject, (value, key) => Object.keys(value).filter(key => !keys.includes(key)).map(excessiveKey => `${key}: Excessive key ${JSON.stringify(excessiveKey)}`));","map":{"version":3,"sources":["/home/runner/work/site/site/modules/editor/data/validation/noExcessiveKeys.ts"],"names":["first","isObject","noExcessiveKeys","keys","value","key","Object","filter","includes","map","excessiveKey","JSON","stringify"],"mappings":"AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAGA,OAAO,MAAMC,eAAe,GAAG,CAAC,GAAGC,IAAJ,KAC7BH,KAAK,CAACC,QAAD,EAAW,CAACG,KAAD,EAAQC,GAAR,KACdC,MAAM,CAACH,IAAP,CAAYC,KAAZ,EACGG,MADH,CACUF,GAAG,IAAI,CAACF,IAAI,CAACK,QAAL,CAAcH,GAAd,CADlB,EAEGI,GAFH,CAGIC,YAAY,IAAK,GAAEL,GAAI,mBAAkBM,IAAI,CAACC,SAAL,CAAeF,YAAf,CAA6B,EAH1E,CADG,CADA","sourcesContent":["import { first } from \"./first\"\nimport { isObject } from \"./isObject\"\nimport type { Validator } from \"./Validator\"\n\nexport const noExcessiveKeys = (...keys: string[]): Validator =>\n  first(isObject, (value, key) =>\n    Object.keys(value as Record<string, unknown>)\n      .filter(key => !keys.includes(key))\n      .map(\n        excessiveKey => `${key}: Excessive key ${JSON.stringify(excessiveKey)}`,\n      ),\n  )\n"]},"metadata":{},"sourceType":"module"}