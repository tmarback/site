{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useRef } from \"react\";\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../../common/input/button/SecondaryButton\";\nimport { ModalAction } from \"../../../../common/modal/layout/ModalAction\";\nimport { ModalBody } from \"../../../../common/modal/layout/ModalBody\";\nimport { ModalContainer } from \"../../../../common/modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../../../../common/modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../../../../common/modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../../../../common/modal/layout/ModalTitle\";\nimport { ModalContext } from \"../../../../common/modal/ModalContext\";\nimport { useLazyValue } from \"../../../../common/state/useLazyValue\";\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\";\nimport { remove } from \"../../../../icons/remove\";\nimport { DatabaseManager } from \"../../DatabaseManager\";\nimport { DatabaseManagerProvider } from \"../../DatabaseManagerContext\";\nimport { PersistentStorageWarning } from \"../../persist/PersistentStorageWarning\";\nimport { BackupManager } from \"../BackupManager\";\nimport { BackupManagerProvider } from \"../BackupManagerContext\";\nimport { BackupCreationControls } from \"./BackupCreationControls\";\nimport { BackupList } from \"./BackupList\";\nexport function BackupsModal(props) {\n  const {\n    editorManager\n  } = props;\n  const databaseManager = useLazyValue(() => new DatabaseManager());\n  const backupManager = useLazyValue(() => new BackupManager(databaseManager, editorManager));\n  const modal = useRequiredContext(ModalContext);\n  const fileInputRef = useRef(null);\n  return useObserver(() => /*#__PURE__*/_jsx(DatabaseManagerProvider, {\n    value: databaseManager,\n    children: /*#__PURE__*/_jsx(BackupManagerProvider, {\n      value: backupManager,\n      children: /*#__PURE__*/_jsxs(ModalContainer, {\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          style: {\n            display: \"none\"\n          },\n          onChange: async event => {\n            var _event$target$files, _event$target$files$i;\n\n            const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : (_event$target$files$i = _event$target$files.item(0)) === null || _event$target$files$i === void 0 ? void 0 : _event$target$files$i.slice();\n            event.target.files = null;\n\n            if (file) {\n              await backupManager.importBackups(file);\n            }\n          }\n        }), /*#__PURE__*/_jsxs(ModalHeader, {\n          children: [/*#__PURE__*/_jsx(ModalTitle, {\n            children: \"Backups\"\n          }), /*#__PURE__*/_jsx(ModalAction, {\n            icon: remove,\n            label: \"Close\",\n            onClick: () => modal.dismiss()\n          })]\n        }), databaseManager.shouldShowPersistenceWarning && /*#__PURE__*/_jsx(ModalBody, {\n          children: /*#__PURE__*/_jsx(PersistentStorageWarning, {})\n        }), /*#__PURE__*/_jsx(ModalBody, {\n          children: /*#__PURE__*/_jsx(BackupList, {})\n        }), /*#__PURE__*/_jsx(ModalBody, {\n          children: /*#__PURE__*/_jsx(BackupCreationControls, {})\n        }), /*#__PURE__*/_jsxs(ModalFooter, {\n          children: [/*#__PURE__*/_jsx(SecondaryButton, {\n            onClick: async () => backupManager.exportAll(),\n            children: \"Export All\"\n          }), /*#__PURE__*/_jsx(SecondaryButton, {\n            onClick: () => {\n              var _fileInputRef$current;\n\n              return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n            },\n            children: \"Import\"\n          }), /*#__PURE__*/_jsx(PrimaryButton, {\n            onClick: () => modal.dismiss(),\n            children: \"Close\"\n          })]\n        })]\n      })\n    })\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/database/backup/modal/BackupsModal.tsx"],"names":["useObserver","React","useRef","PrimaryButton","SecondaryButton","ModalAction","ModalBody","ModalContainer","ModalFooter","ModalHeader","ModalTitle","ModalContext","useLazyValue","useRequiredContext","remove","DatabaseManager","DatabaseManagerProvider","PersistentStorageWarning","BackupManager","BackupManagerProvider","BackupCreationControls","BackupList","BackupsModal","props","editorManager","databaseManager","backupManager","modal","fileInputRef","display","event","file","target","files","item","slice","importBackups","dismiss","shouldShowPersistenceWarning","exportAll","current","click"],"mappings":"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","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\nimport React, { useRef } from \"react\"\nimport { PrimaryButton } from \"../../../../common/input/button/PrimaryButton\"\nimport { SecondaryButton } from \"../../../../common/input/button/SecondaryButton\"\nimport { ModalAction } from \"../../../../common/modal/layout/ModalAction\"\nimport { ModalBody } from \"../../../../common/modal/layout/ModalBody\"\nimport { ModalContainer } from \"../../../../common/modal/layout/ModalContainer\"\nimport { ModalFooter } from \"../../../../common/modal/layout/ModalFooter\"\nimport { ModalHeader } from \"../../../../common/modal/layout/ModalHeader\"\nimport { ModalTitle } from \"../../../../common/modal/layout/ModalTitle\"\nimport { ModalContext } from \"../../../../common/modal/ModalContext\"\nimport { useLazyValue } from \"../../../../common/state/useLazyValue\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { remove } from \"../../../../icons/remove\"\nimport type { EditorManagerLike } from \"../../../editor/EditorManager\"\nimport { DatabaseManager } from \"../../DatabaseManager\"\nimport { DatabaseManagerProvider } from \"../../DatabaseManagerContext\"\nimport { PersistentStorageWarning } from \"../../persist/PersistentStorageWarning\"\nimport { BackupManager } from \"../BackupManager\"\nimport { BackupManagerProvider } from \"../BackupManagerContext\"\nimport { BackupCreationControls } from \"./BackupCreationControls\"\nimport { BackupList } from \"./BackupList\"\n\nexport type BackupsModalProps = {\n  editorManager: EditorManagerLike\n}\n\nexport function BackupsModal(props: BackupsModalProps) {\n  const { editorManager } = props\n\n  const databaseManager = useLazyValue(() => new DatabaseManager())\n  const backupManager = useLazyValue(\n    () => new BackupManager(databaseManager, editorManager),\n  )\n\n  const modal = useRequiredContext(ModalContext)\n\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  return useObserver(() => (\n    <DatabaseManagerProvider value={databaseManager}>\n      <BackupManagerProvider value={backupManager}>\n        <ModalContainer>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            style={{ display: \"none\" }}\n            onChange={async event => {\n              const file = event.target.files?.item(0)?.slice()\n              event.target.files = null\n              if (file) {\n                await backupManager.importBackups(file)\n              }\n            }}\n          />\n          <ModalHeader>\n            <ModalTitle>Backups</ModalTitle>\n            <ModalAction\n              icon={remove}\n              label=\"Close\"\n              onClick={() => modal.dismiss()}\n            />\n          </ModalHeader>\n          {databaseManager.shouldShowPersistenceWarning && (\n            <ModalBody>\n              <PersistentStorageWarning />\n            </ModalBody>\n          )}\n          <ModalBody>\n            <BackupList />\n          </ModalBody>\n          <ModalBody>\n            <BackupCreationControls />\n          </ModalBody>\n          <ModalFooter>\n            <SecondaryButton onClick={async () => backupManager.exportAll()}>\n              Export All\n            </SecondaryButton>\n            <SecondaryButton onClick={() => fileInputRef.current?.click()}>\n              Import\n            </SecondaryButton>\n            <PrimaryButton onClick={() => modal.dismiss()}>Close</PrimaryButton>\n          </ModalFooter>\n        </ModalContainer>\n      </BackupManagerProvider>\n    </DatabaseManagerProvider>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}