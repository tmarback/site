{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport { rem } from \"polished\";\nimport React, { useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useReaction } from \"../../../common/state/useReaction\";\nimport { Markdown } from \"../../markdown/Markdown\";\nimport { MarkdownContainer } from \"../../markdown/styles/MarkdownContainer\";\nimport { EmbedAuthor } from \"./EmbedAuthor\";\nimport { EmbedField } from \"./EmbedField\";\nimport { EmbedFooter } from \"./EmbedFooter\";\nimport { EmbedGallery } from \"./EmbedGallery\";\nimport { RichEmbedContainer } from \"./RichEmbedContainer\";\nconst EmbedGrid = styled.div.withConfig({\n  componentId: \"sc-3qrykn-0\"\n})([\"padding:\", \" \", \" \", \" \", \";display:inline-grid;grid-template-columns:auto;grid-template-rows:auto;\"], rem(8), rem(16), rem(16), rem(12));\nconst EmbedTitleNormal = styled.span.withConfig({\n  componentId: \"sc-3qrykn-1\"\n})([\"min-width:0;display:inline-block;margin:8px 0 0;grid-column:1 / 2;& > \", \"{font-size:\", \";font-weight:600;color:\", \";}\"], MarkdownContainer, rem(16), ({\n  theme\n}) => theme.header.primary);\nconst EmbedTitleLink = styled(EmbedTitleNormal.withComponent(\"a\")).withConfig({\n  componentId: \"sc-3qrykn-2\"\n})([\"& > \", \"{color:\", \";}\"], MarkdownContainer, ({\n  theme\n}) => theme.text.link);\nconst EmbedDescription = styled.div.withConfig({\n  componentId: \"sc-3qrykn-3\"\n})([\"min-width:0;margin:8px 0 0;grid-column:1 / 2;& > \", \"{font-size:\", \";color:\", \";line-height:\", \";white-space:pre-line;}\"], MarkdownContainer, rem(14), ({\n  theme\n}) => theme.text.normal, rem(18));\nconst EmbedFields = styled.div.withConfig({\n  componentId: \"sc-3qrykn-4\"\n})([\"min-width:0;margin:8px 0 0;display:grid;grid-column:1 / 2;grid-gap:8px;\"]);\nconst EmbedImage = styled.img.withConfig({\n  componentId: \"sc-3qrykn-5\"\n})([\"min-width:0;max-width:400px;max-height:300px;margin:16px 0 0;border-radius:4px;cursor:pointer;grid-column:1 / 2;\", \";\"], ({\n  hasThumbnail\n}) => hasThumbnail && css([\"grid-column:1 / 3;\"]));\nconst EmbedThumbnailContainer = styled.div.withConfig({\n  componentId: \"sc-3qrykn-6\"\n})([\"margin:8px 0 0 16px;grid-row:1 / 8;grid-column:2 / 3;justify-self:end;cursor:pointer;\"]);\nconst EmbedThumbnail = styled.img.withConfig({\n  componentId: \"sc-3qrykn-7\"\n})([\"max-width:80px;max-height:80px;border-radius:4px;\"]);\nexport function RichEmbed(props) {\n  const {\n    embed\n  } = props;\n  const containerRef = useRef(null);\n  const imageRef = useRef(null);\n  useReaction(() => embed.gallery.length === 1 && embed.gallery[0], () => {\n    const {\n      current: container\n    } = containerRef;\n    if (!container) return;\n    container.style.maxWidth = \"\";\n  });\n  return useObserver(() => {\n    const color = embed.color.raw === 0xffffff ? undefined : embed.color.hex;\n    return /*#__PURE__*/_jsx(RichEmbedContainer, {\n      ref: containerRef,\n      style: {\n        borderColor: color\n      },\n      children: /*#__PURE__*/_jsxs(EmbedGrid, {\n        children: [embed.hasAuthor && /*#__PURE__*/_jsx(EmbedAuthor, {\n          embed: embed\n        }), embed.hasTitle && (embed.url ? /*#__PURE__*/_jsx(EmbedTitleLink, {\n          href: embed.url,\n          rel: \"noopener noreferrer nofollow ugc\",\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsx(Markdown, {\n            content: embed.title,\n            type: \"embed-header\"\n          })\n        }) : /*#__PURE__*/_jsx(EmbedTitleNormal, {\n          children: /*#__PURE__*/_jsx(Markdown, {\n            content: embed.title,\n            type: \"embed-header\"\n          })\n        })), embed.hasDescription && /*#__PURE__*/_jsx(EmbedDescription, {\n          children: /*#__PURE__*/_jsx(Markdown, {\n            content: embed.description,\n            type: \"embed-content\"\n          })\n        }), embed.fields.length > 0 && /*#__PURE__*/_jsx(EmbedFields, {\n          children: embed.fields.map(field => /*#__PURE__*/_jsx(EmbedField, {\n            field: field\n          }, field.id))\n        }), embed.gallery.length > 1 ? /*#__PURE__*/_jsx(EmbedGallery, {\n          embed: embed\n        }) : embed.gallery.length === 1 ? /*#__PURE__*/_jsx(EmbedImage, {\n          ref: imageRef,\n          src: embed.gallery[0],\n          alt: \"Image\",\n          hasThumbnail: Boolean(embed.thumbnail),\n          onLoad: () => {\n            const {\n              current: container\n            } = containerRef;\n            const {\n              current: image\n            } = imageRef;\n            if (!container || !image) return;\n            const {\n              width\n            } = image.getBoundingClientRect();\n            container.style.maxWidth = width >= 300 ? `${width + 32}px` : \"\";\n          }\n        }) : undefined, embed.hasFooter && /*#__PURE__*/_jsx(EmbedFooter, {\n          embed: embed\n        }), embed.thumbnail && /*#__PURE__*/_jsx(EmbedThumbnailContainer, {\n          children: /*#__PURE__*/_jsx(EmbedThumbnail, {\n            src: embed.thumbnail,\n            alt: \"Thumbnail\"\n          })\n        })]\n      })\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}