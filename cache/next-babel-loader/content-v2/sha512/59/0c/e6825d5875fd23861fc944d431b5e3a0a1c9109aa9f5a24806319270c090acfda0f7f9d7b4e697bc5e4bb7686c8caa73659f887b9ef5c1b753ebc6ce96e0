{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport { applySnapshot } from \"mobx-state-tree\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { copyTextToClipboard } from \"../../../common/dom/copyTextToClipboard\";\nimport { PrimaryButton } from \"../../../common/input/button/PrimaryButton\";\nimport { SecondaryButton } from \"../../../common/input/button/SecondaryButton\";\nimport { Input } from \"../../../common/input/layout/Input\";\nimport { ModalAction } from \"../../../common/modal/layout/ModalAction\";\nimport { ModalBody } from \"../../../common/modal/layout/ModalBody\";\nimport { ModalContainer } from \"../../../common/modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../../../common/modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../../../common/modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../../../common/modal/layout/ModalTitle\";\nimport { ModalContext } from \"../../../common/modal/ModalContext\";\nimport { parseJson } from \"../../../common/object/parseJson\";\nimport { useRequiredContext } from \"../../../common/state/useRequiredContext\";\nimport { remove } from \"../../../icons/remove\";\nimport { messageOf } from \"../../message/helpers/messageOf\";\nimport { stringifyMessage } from \"../../message/helpers/stringifyMessage\";\nimport { isMessage } from \"./validation/isMessage\";\nconst Container = styled(ModalContainer).withConfig({\n  componentId: \"cbip1o-0\"\n})([\"width:1024px;height:768px;display:flex;flex-flow:column;\"]);\nconst Body = styled(ModalBody).withConfig({\n  componentId: \"cbip1o-1\"\n})([\"flex:1;display:flex;flex-flow:column;\"]);\nconst CodeInput = styled(Input).withConfig({\n  componentId: \"cbip1o-2\"\n})([\"&&{width:100%;resize:none;}flex:1;font-family:\", \";font-size:14px;line-height:1.375;overflow-y:auto;\"], ({\n  theme\n}) => theme.font.mono);\nconst ErrorContainer = styled.div.withConfig({\n  componentId: \"cbip1o-3\"\n})([\"margin-top:8px;max-height:max(20%,96px);overflow-y:auto;\"]);\nconst ErrorLine = styled.code.withConfig({\n  componentId: \"cbip1o-4\"\n})([\"display:block;color:\", \";font-size:14px;line-height:1.375;& + &{margin-top:8px;}\"], ({\n  theme\n}) => theme.accent.danger);\nexport function DataEditorModal(props) {\n  const {\n    message\n  } = props;\n  const modal = useRequiredContext(ModalContext);\n  const {\n    0: value,\n    1: setValue\n  } = useState(() => stringifyMessage(message.data));\n  const {\n    value: data,\n    error\n  } = parseJson(value);\n  const errors = error ? [error] : isMessage(data, \"$\");\n  return useObserver(() => /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(ModalTitle, {\n        children: \"JSON Editor\"\n      }), /*#__PURE__*/_jsx(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      })]\n    }), /*#__PURE__*/_jsxs(Body, {\n      children: [/*#__PURE__*/_jsx(CodeInput, {\n        as: \"textarea\",\n        id: \"data-editor\",\n        value: value,\n        onChange: event => {\n          setValue(event.target.value);\n        }\n      }), errors.length > 0 && /*#__PURE__*/_jsx(ErrorContainer, {\n        children: errors.map((error, index) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsx(ErrorLine, {\n          children: error\n        }, index))\n      })]\n    }), /*#__PURE__*/_jsxs(ModalFooter, {\n      children: [/*#__PURE__*/_jsx(SecondaryButton, {\n        onClick: () => copyTextToClipboard(value),\n        children: \"Copy to Clipboard\"\n      }), /*#__PURE__*/_jsx(SecondaryButton, {\n        onClick: () => modal.dismiss(),\n        children: \"Cancel\"\n      }), /*#__PURE__*/_jsx(PrimaryButton, {\n        disabled: errors.length > 0,\n        onClick: () => {\n          applySnapshot(message, _objectSpread(_objectSpread({}, messageOf(JSON.parse(value))), {}, {\n            id: message.id\n          }));\n          modal.dismiss();\n        },\n        children: \"Apply Changes\"\n      })]\n    })]\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}