{"ast":null,"code":"import _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { remove } from \"../../icons/remove\";\nimport { bindToInput } from \"../input/bindToInput\";\nimport { PrimaryButton } from \"../input/button/PrimaryButton\";\nimport { Checkbox } from \"../input/checkable/Checkbox\";\nimport { Radio } from \"../input/checkable/Radio\";\nimport { RadioGroup } from \"../input/checkable/RadioGroup\";\nimport { Slider } from \"../input/slider/Slider\";\nimport { Stack } from \"../layout/Stack\";\nimport { ModalAction } from \"../modal/layout/ModalAction\";\nimport { ModalBody } from \"../modal/layout/ModalBody\";\nimport { ModalContainer } from \"../modal/layout/ModalContainer\";\nimport { ModalFooter } from \"../modal/layout/ModalFooter\";\nimport { ModalHeader } from \"../modal/layout/ModalHeader\";\nimport { ModalTitle } from \"../modal/layout/ModalTitle\";\nimport { ModalContext } from \"../modal/ModalContext\";\nimport { useRequiredContext } from \"../state/useRequiredContext\";\nimport { FONT_SIZES } from \"../theming/constants\";\nimport { PreferenceManagerContext } from \"./PreferenceManagerContext\";\nconst PreferenceSection = styled.h5.withConfig({\n  componentId: \"sc-1l2xq6-0\"\n})([\"margin:8px 0 4px;color:\", \";font-weight:600;font-size:14px;\"], ({\n  theme\n}) => theme.header.primary);\nexport function PreferencesModal() {\n  const modal = useRequiredContext(ModalContext);\n  const settingsManager = useRequiredContext(PreferenceManagerContext);\n  return useObserver(() => /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(ModalTitle, {\n        children: \"Settings\"\n      }), /*#__PURE__*/_jsx(ModalAction, {\n        icon: remove,\n        label: \"Close\",\n        onClick: () => modal.dismiss()\n      })]\n    }), /*#__PURE__*/_jsx(ModalBody, {\n      children: /*#__PURE__*/_jsxs(Stack, {\n        gap: 8,\n        children: [/*#__PURE__*/_jsx(PreferenceSection, {\n          children: \"Appearance\"\n        }), /*#__PURE__*/_jsxs(RadioGroup, _objectSpread(_objectSpread({\n          id: \"settings_color\",\n          label: \"Color Theme\"\n        }, bindToInput(settingsManager.settings, \"color\")), {}, {\n          children: [/*#__PURE__*/_jsx(Radio, {\n            label: \"Dark\",\n            value: \"dark\"\n          }), /*#__PURE__*/_jsx(Radio, {\n            label: \"Light\",\n            value: \"light\"\n          })]\n        })), /*#__PURE__*/_jsxs(RadioGroup, _objectSpread(_objectSpread({\n          id: \"settings_display\",\n          label: \"Display Mode\"\n        }, bindToInput(settingsManager.settings, \"display\")), {}, {\n          children: [/*#__PURE__*/_jsx(Radio, {\n            label: \"Cozy\",\n            value: \"cozy\"\n          }), /*#__PURE__*/_jsx(Radio, {\n            label: \"Compact\",\n            value: \"compact\"\n          })]\n        })), /*#__PURE__*/_jsx(Slider, {\n          id: \"settings_fontSize\",\n          label: \"Font Size\",\n          min: 0,\n          max: 6,\n          markers: FONT_SIZES.map((size, index) => ({\n            value: index,\n            label: String(size)\n          })),\n          getValueName: value => `${FONT_SIZES[value]} pixels`,\n          value: FONT_SIZES.indexOf(settingsManager.settings.fontSize),\n          onChange: index => {\n            settingsManager.settings.fontSize = FONT_SIZES[index];\n          }\n        }), /*#__PURE__*/_jsx(PreferenceSection, {\n          children: \"Editor\"\n        }), /*#__PURE__*/_jsx(Checkbox, _objectSpread({\n          id: \"settings_confirmExit\",\n          label: \"Confirm on Exit\"\n        }, bindToInput(settingsManager.settings, \"confirmExit\"))), /*#__PURE__*/_jsx(Checkbox, _objectSpread({\n          id: \"settings_expandSections\",\n          label: \"Expand Sections by Default\"\n        }, bindToInput(settingsManager.settings, \"expandSections\")))]\n      })\n    }), /*#__PURE__*/_jsx(ModalFooter, {\n      children: /*#__PURE__*/_jsx(PrimaryButton, {\n        onClick: () => modal.dismiss(),\n        children: \"Close\"\n      })\n    })]\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/settings/PreferencesModal.tsx"],"names":["useObserver","React","styled","remove","bindToInput","PrimaryButton","Checkbox","Radio","RadioGroup","Slider","Stack","ModalAction","ModalBody","ModalContainer","ModalFooter","ModalHeader","ModalTitle","ModalContext","useRequiredContext","FONT_SIZES","PreferenceManagerContext","PreferenceSection","h5","theme","header","primary","PreferencesModal","modal","settingsManager","dismiss","settings","map","size","index","value","label","String","indexOf","fontSize"],"mappings":"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","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { remove } from \"../../icons/remove\"\nimport { bindToInput } from \"../input/bindToInput\"\nimport { PrimaryButton } from \"../input/button/PrimaryButton\"\nimport { Checkbox } from \"../input/checkable/Checkbox\"\nimport { Radio } from \"../input/checkable/Radio\"\nimport { RadioGroup } from \"../input/checkable/RadioGroup\"\nimport { Slider } from \"../input/slider/Slider\"\nimport { Stack } from \"../layout/Stack\"\nimport { ModalAction } from \"../modal/layout/ModalAction\"\nimport { ModalBody } from \"../modal/layout/ModalBody\"\nimport { ModalContainer } from \"../modal/layout/ModalContainer\"\nimport { ModalFooter } from \"../modal/layout/ModalFooter\"\nimport { ModalHeader } from \"../modal/layout/ModalHeader\"\nimport { ModalTitle } from \"../modal/layout/ModalTitle\"\nimport { ModalContext } from \"../modal/ModalContext\"\nimport { useRequiredContext } from \"../state/useRequiredContext\"\nimport { FONT_SIZES } from \"../theming/constants\"\nimport { PreferenceManagerContext } from \"./PreferenceManagerContext\"\n\nconst PreferenceSection = styled.h5`\n  margin: 8px 0 4px;\n\n  color: ${({ theme }) => theme.header.primary};\n  font-weight: 600;\n  font-size: 14px;\n`\n\nexport function PreferencesModal() {\n  const modal = useRequiredContext(ModalContext)\n\n  const settingsManager = useRequiredContext(PreferenceManagerContext)\n\n  return useObserver(() => (\n    <ModalContainer>\n      <ModalHeader>\n        <ModalTitle>Settings</ModalTitle>\n        <ModalAction\n          icon={remove}\n          label=\"Close\"\n          onClick={() => modal.dismiss()}\n        />\n      </ModalHeader>\n      <ModalBody>\n        <Stack gap={8}>\n          <PreferenceSection>Appearance</PreferenceSection>\n          <RadioGroup\n            id=\"settings_color\"\n            label=\"Color Theme\"\n            {...bindToInput(settingsManager.settings, \"color\")}\n          >\n            <Radio label=\"Dark\" value=\"dark\" />\n            <Radio label=\"Light\" value=\"light\" />\n          </RadioGroup>\n          <RadioGroup\n            id=\"settings_display\"\n            label=\"Display Mode\"\n            {...bindToInput(settingsManager.settings, \"display\")}\n          >\n            <Radio label=\"Cozy\" value=\"cozy\" />\n            <Radio label=\"Compact\" value=\"compact\" />\n          </RadioGroup>\n          <Slider\n            id=\"settings_fontSize\"\n            label=\"Font Size\"\n            min={0}\n            max={6}\n            markers={FONT_SIZES.map((size, index) => ({\n              value: index,\n              label: String(size),\n            }))}\n            getValueName={value => `${FONT_SIZES[value]} pixels`}\n            value={FONT_SIZES.indexOf(settingsManager.settings.fontSize)}\n            onChange={index => {\n              settingsManager.settings.fontSize = FONT_SIZES[index]\n            }}\n          />\n          <PreferenceSection>Editor</PreferenceSection>\n          <Checkbox\n            id=\"settings_confirmExit\"\n            label=\"Confirm on Exit\"\n            {...bindToInput(settingsManager.settings, \"confirmExit\")}\n          />\n          <Checkbox\n            id=\"settings_expandSections\"\n            label=\"Expand Sections by Default\"\n            {...bindToInput(settingsManager.settings, \"expandSections\")}\n          />\n        </Stack>\n      </ModalBody>\n      <ModalFooter>\n        <PrimaryButton onClick={() => modal.dismiss()}>Close</PrimaryButton>\n      </ModalFooter>\n    </ModalContainer>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}