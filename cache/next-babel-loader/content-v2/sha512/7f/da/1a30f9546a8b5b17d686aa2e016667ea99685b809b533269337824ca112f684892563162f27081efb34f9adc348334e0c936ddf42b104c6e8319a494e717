{"ast":null,"code":"import { useEffect } from \"react\";\nexport const useWindowEvent = (type, listener, options) => {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => {\n      window.removeEventListener(type, listener, options);\n    };\n  });\n};","map":{"version":3,"sources":["/home/runner/work/site/site/common/dom/useWindowEvent.ts"],"names":["useEffect","useWindowEvent","type","listener","options","window","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,CAC5BC,IAD4B,EAE5BC,QAF4B,EAG5BC,OAH4B,KAIzB;AACHJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACC,gBAAP,CAAwBJ,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC;AAEA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CACEL,IADF,EAEEC,QAFF,EAGEC,OAHF;AAKD,KAND;AAOD,GAVQ,CAAT;AAWD,CAhBM","sourcesContent":["import { useEffect } from \"react\"\n\nexport const useWindowEvent = <K extends keyof WindowEventMap>(\n  type: K,\n  listener: (event: WindowEventMap[K]) => void,\n  options?: AddEventListenerOptions,\n) => {\n  useEffect(() => {\n    window.addEventListener(type, listener, options)\n\n    return () => {\n      window.removeEventListener(\n        type,\n        listener,\n        options as EventListenerOptions,\n      )\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}