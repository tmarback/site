{"ast":null,"code":"var _class, _temp;\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nimport { action } from \"mobx\";\nimport { getUniqueId } from \"../state/uid\";\nexport let Modal = (_class = (_temp = class Modal {\n  constructor(manager, options) {\n    this.id = getUniqueId();\n    this.manager = void 0;\n    this.render = void 0;\n    this.manager = manager;\n    this.render = options.render;\n  }\n\n  dismiss() {\n    this.manager.dismiss(this);\n  }\n\n}, _temp), (_applyDecoratedDescriptor(_class.prototype, \"dismiss\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"dismiss\"), _class.prototype)), _class);","map":null,"metadata":{},"sourceType":"module"}