{"ast":null,"code":"import { useEffect, useRef, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport { useLazyValue } from \"../state/useLazyValue\";\nexport const useMeasure = () => {\n  const ref = useRef(null);\n  const {\n    0: bounds,\n    1: setBounds\n  } = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  });\n  const observer = useLazyValue(() => {\n    return new ResizeObserver(([entry]) => setBounds(entry.contentRect));\n  });\n  useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [observer]);\n  return [ref, bounds];\n};","map":null,"metadata":{},"sourceType":"module"}