{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { ColorInputField } from \"../../../common/input/color/ColorInputField\";\nimport { InputField } from \"../../../common/input/text/InputField\";\nimport { RowContainer } from \"../../../common/layout/RowContainer\";\nimport { Section } from \"../../../common/layout/Section\";\nimport { Stack } from \"../../../common/layout/Stack\";\nexport function EmbedBodyEditor(props) {\n  const {\n    embed,\n    form\n  } = props;\n  return useObserver(() => /*#__PURE__*/_jsx(Section, {\n    name: \"Body\",\n    hasError: !form.group(\"body\").isValid,\n    children: /*#__PURE__*/_jsxs(Stack, {\n      gap: 12,\n      children: [/*#__PURE__*/_jsx(InputField, _objectSpread({\n        id: `_${embed.id}_title`,\n        label: \"Title\",\n        maxLength: 256,\n        rows: 1,\n        error: form.field(\"title\").error\n      }, form.field(\"title\").inputProps)), /*#__PURE__*/_jsx(InputField, _objectSpread({\n        id: `_${embed.id}_description`,\n        label: \"Description\",\n        maxLength: 4096,\n        rows: 4,\n        error: form.field(\"description\").error\n      }, form.field(\"description\").inputProps)), /*#__PURE__*/_jsxs(RowContainer, {\n        children: [/*#__PURE__*/_jsx(InputField, _objectSpread({\n          id: `_${embed.id}_url`,\n          label: \"URL\",\n          error: form.field(\"url\").error\n        }, form.field(\"url\").inputProps)), /*#__PURE__*/_jsx(ColorInputField, {\n          id: `_${embed.id}_color`,\n          label: \"Color\",\n          color: embed.color\n        })]\n      })]\n    })\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/editor/message/EmbedBodyEditor.tsx"],"names":["useObserver","React","ColorInputField","InputField","RowContainer","Section","Stack","EmbedBodyEditor","props","embed","form","group","isValid","id","field","error","inputProps","color"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,6CAAhC;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AASA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;AAC3D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAkBF,KAAxB;AAEA,SAAOR,WAAW,CAAC,mBACjB,KAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,QAAQ,EAAE,CAACU,IAAI,CAACC,KAAL,CAAW,MAAX,EAAmBC,OAAnD;AAAA,2BACE,MAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA,8BACE,KAAC,UAAD;AACE,QAAA,EAAE,EAAG,IAAGH,KAAK,CAACI,EAAG,QADnB;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,SAAS,EAAE,GAHb;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,KAAK,EAAEH,IAAI,CAACI,KAAL,CAAW,OAAX,EAAoBC;AAL7B,SAMML,IAAI,CAACI,KAAL,CAAW,OAAX,EAAoBE,UAN1B,EADF,eASE,KAAC,UAAD;AACE,QAAA,EAAE,EAAG,IAAGP,KAAK,CAACI,EAAG,cADnB;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,SAAS,EAAE,IAHb;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,KAAK,EAAEH,IAAI,CAACI,KAAL,CAAW,aAAX,EAA0BC;AALnC,SAMML,IAAI,CAACI,KAAL,CAAW,aAAX,EAA0BE,UANhC,EATF,eAiBE,MAAC,YAAD;AAAA,gCACE,KAAC,UAAD;AACE,UAAA,EAAE,EAAG,IAAGP,KAAK,CAACI,EAAG,MADnB;AAEE,UAAA,KAAK,EAAC,KAFR;AAGE,UAAA,KAAK,EAAEH,IAAI,CAACI,KAAL,CAAW,KAAX,EAAkBC;AAH3B,WAIML,IAAI,CAACI,KAAL,CAAW,KAAX,EAAkBE,UAJxB,EADF,eAOE,KAAC,eAAD;AACE,UAAA,EAAE,EAAG,IAAGP,KAAK,CAACI,EAAG,QADnB;AAEE,UAAA,KAAK,EAAC,OAFR;AAGE,UAAA,KAAK,EAAEJ,KAAK,CAACQ;AAHf,UAPF;AAAA,QAjBF;AAAA;AADF,IADgB,CAAlB;AAmCD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\nimport React from \"react\"\nimport { ColorInputField } from \"../../../common/input/color/ColorInputField\"\nimport { InputField } from \"../../../common/input/text/InputField\"\nimport { RowContainer } from \"../../../common/layout/RowContainer\"\nimport { Section } from \"../../../common/layout/Section\"\nimport { Stack } from \"../../../common/layout/Stack\"\nimport type { EmbedItemFormState } from \"../../message/state/editorForm\"\nimport type { EmbedLike } from \"../../message/state/models/EmbedModel\"\n\nexport type EmbedBodyEditorProps = {\n  embed: EmbedLike\n  form: EmbedItemFormState\n}\n\nexport function EmbedBodyEditor(props: EmbedBodyEditorProps) {\n  const { embed, form } = props\n\n  return useObserver(() => (\n    <Section name=\"Body\" hasError={!form.group(\"body\").isValid}>\n      <Stack gap={12}>\n        <InputField\n          id={`_${embed.id}_title`}\n          label=\"Title\"\n          maxLength={256}\n          rows={1}\n          error={form.field(\"title\").error}\n          {...form.field(\"title\").inputProps}\n        />\n        <InputField\n          id={`_${embed.id}_description`}\n          label=\"Description\"\n          maxLength={4096}\n          rows={4}\n          error={form.field(\"description\").error}\n          {...form.field(\"description\").inputProps}\n        />\n        <RowContainer>\n          <InputField\n            id={`_${embed.id}_url`}\n            label=\"URL\"\n            error={form.field(\"url\").error}\n            {...form.field(\"url\").inputProps}\n          />\n          <ColorInputField\n            id={`_${embed.id}_color`}\n            label=\"Color\"\n            color={embed.color}\n          />\n        </RowContainer>\n      </Stack>\n    </Section>\n  ))\n}\n"]},"metadata":{},"sourceType":"module"}