{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { getHumanReadableSize } from \"../../../modules/message/preview/attachment/helpers/getHumanReadableSize\";\nimport { SCREEN_SMALL } from \"../../layout/breakpoints\";\nimport { FlexContainer } from \"../../layout/FlexContainer\";\nimport { PrimaryButton } from \"../button/PrimaryButton\";\nimport { Input } from \"../layout/Input\";\nimport { InputConstraint } from \"../layout/InputConstraint\";\nimport { InputContainer } from \"../layout/InputContainer\";\nimport { InputLabel } from \"../layout/InputLabel\";\nimport { PasteFileButton } from \"./PasteFileButton\";\nexport const FakeInput = styled(Input).withConfig({\n  componentId: \"sc-3b0b62-0\"\n})([\"flex:1;input:focus + &&{border-color:\", \";}\"], ({\n  theme\n}) => theme.accent.primary);\nconst ClipboardButton = styled(PasteFileButton).withConfig({\n  componentId: \"sc-3b0b62-1\"\n})([\"\", \"{display:none;}\"], SCREEN_SMALL);\nexport function FileInputField(props) {\n  const {\n    id,\n    value,\n    onChange: handleChange,\n    label,\n    disabled = false,\n    maxSize\n  } = props;\n  const inputRef = useRef(null);\n\n  const handleRemoveFiles = () => {\n    if (!inputRef.current) return;\n    inputRef.current.value = \"\";\n    handleChange([]);\n  };\n\n  return /*#__PURE__*/_jsxs(InputContainer, {\n    children: [/*#__PURE__*/_jsxs(InputLabel, {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: id,\n        children: label\n      }), maxSize && /*#__PURE__*/_jsxs(InputConstraint, {\n        children: [getHumanReadableSize(maxSize), \" max.\"]\n      })]\n    }), /*#__PURE__*/_jsxs(FlexContainer, {\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        ref: inputRef,\n        id: id,\n        type: \"file\",\n        multiple: true,\n        disabled: disabled,\n        style: {\n          position: \"absolute\",\n          opacity: 0,\n          pointerEvents: \"none\"\n        },\n        onChange: event => {\n          var _event$target$files;\n\n          handleChange(Array.from((_event$target$files = event.target.files) !== null && _event$target$files !== void 0 ? _event$target$files : []));\n        }\n      }), /*#__PURE__*/_jsx(FakeInput, {\n        value: value.map(file => file.name).join(\", \"),\n        readOnly: true,\n        disabled: disabled,\n        tabIndex: -1,\n        style: {\n          cursor: \"default\"\n        },\n        onClick: () => {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();\n        }\n      }), /*#__PURE__*/_jsx(ClipboardButton, {\n        onChange: handleChange,\n        disabled: disabled\n      }), /*#__PURE__*/_jsx(PrimaryButton, {\n        onClick: handleRemoveFiles,\n        disabled: disabled,\n        children: \"Clear\"\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/input/file/FileInputField.tsx"],"names":["React","useRef","styled","getHumanReadableSize","SCREEN_SMALL","FlexContainer","PrimaryButton","Input","InputConstraint","InputContainer","InputLabel","PasteFileButton","FakeInput","theme","accent","primary","ClipboardButton","FileInputField","props","id","value","onChange","handleChange","label","disabled","maxSize","inputRef","handleRemoveFiles","current","position","opacity","pointerEvents","event","Array","from","target","files","map","file","name","join","cursor","click"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\"\nimport styled from \"styled-components\"\nimport { getHumanReadableSize } from \"../../../modules/message/preview/attachment/helpers/getHumanReadableSize\"\nimport { SCREEN_SMALL } from \"../../layout/breakpoints\"\nimport { FlexContainer } from \"../../layout/FlexContainer\"\nimport { PrimaryButton } from \"../button/PrimaryButton\"\nimport { Input } from \"../layout/Input\"\nimport { InputConstraint } from \"../layout/InputConstraint\"\nimport { InputContainer } from \"../layout/InputContainer\"\nimport { InputLabel } from \"../layout/InputLabel\"\nimport { PasteFileButton } from \"./PasteFileButton\"\n\nexport const FakeInput = styled(Input)`\n  flex: 1;\n\n  input:focus + && {\n    border-color: ${({ theme }) => theme.accent.primary};\n  }\n`\n\nconst ClipboardButton = styled(PasteFileButton)`\n  ${SCREEN_SMALL} {\n    display: none;\n  }\n`\n\nexport type FileInputProps = {\n  id: string\n  value: readonly File[]\n  onChange: (value: File[]) => void\n  label: string\n  disabled?: boolean\n  maxSize?: number\n}\n\nexport function FileInputField(props: FileInputProps) {\n  const {\n    id,\n    value,\n    onChange: handleChange,\n    label,\n    disabled = false,\n    maxSize,\n  } = props\n\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const handleRemoveFiles = () => {\n    if (!inputRef.current) return\n\n    inputRef.current.value = \"\"\n    handleChange([])\n  }\n\n  return (\n    <InputContainer>\n      <InputLabel>\n        <label htmlFor={id}>{label}</label>\n        {maxSize && (\n          <InputConstraint>\n            {getHumanReadableSize(maxSize)} max.\n          </InputConstraint>\n        )}\n      </InputLabel>\n      <FlexContainer>\n        <input\n          ref={inputRef}\n          id={id}\n          type=\"file\"\n          multiple\n          disabled={disabled}\n          style={{ position: \"absolute\", opacity: 0, pointerEvents: \"none\" }}\n          onChange={event => {\n            handleChange(Array.from(event.target.files ?? []))\n          }}\n        />\n        <FakeInput\n          value={value.map(file => file.name).join(\", \")}\n          readOnly\n          disabled={disabled}\n          tabIndex={-1}\n          style={{ cursor: \"default\" }}\n          onClick={() => {\n            inputRef.current?.click()\n          }}\n        />\n        <ClipboardButton onChange={handleChange} disabled={disabled} />\n        <PrimaryButton onClick={handleRemoveFiles} disabled={disabled}>\n          Clear\n        </PrimaryButton>\n      </FlexContainer>\n    </InputContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}