{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"@reach/slider/styles.css\";\nimport \"@reach/tabs/styles.css\";\nimport { autorun } from \"mobx\";\nimport { Observer } from \"mobx-react-lite\";\nimport App from \"next/app\";\nimport React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { ModalManager } from \"../common/modal/ModalManager\";\nimport { ModalManagerProvider } from \"../common/modal/ModalManagerContext\";\nimport { ModalOverlay } from \"../common/modal/ModalOverlay\";\nimport { ErrorBoundary } from \"../common/page/ErrorBoundary\";\nimport { PopoverManager } from \"../common/popover/PopoverManager\";\nimport { PopoverManagerProvider } from \"../common/popover/PopoverManagerContext\";\nimport { PopoverOverlay } from \"../common/popover/PopoverOverlay\";\nimport { PreferenceManager } from \"../common/settings/PreferenceManager\";\nimport { PreferenceManagerProvider } from \"../common/settings/PreferenceManagerContext\";\nimport { resetNextId } from \"../common/state/uid\";\nimport { GlobalStyle } from \"../common/theming/GlobalStyle\";\nimport { TooltipManager } from \"../common/tooltip/TooltipManager\";\nimport { TooltipManagerProvider } from \"../common/tooltip/TooltipManagerContext\";\nimport { TooltipOverlay } from \"../common/tooltip/TooltipOverlay\";\nexport default class Application extends App {\n  constructor(props) {\n    super(props);\n    this.preferenceManager = new PreferenceManager();\n    this.modalManager = new ModalManager();\n    this.popoverManager = new PopoverManager();\n    this.tooltipManager = new TooltipManager();\n    this.disposers = [];\n\n    if (true) {\n      resetNextId();\n    }\n  }\n\n  componentDidMount() {\n    this.preferenceManager.load();\n    this.disposers.push(autorun(() => this.preferenceManager.dump(), {\n      delay: 500\n    }));\n  }\n\n  componentWillUnmount() {\n    for (const disposer of this.disposers) {\n      disposer();\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return /*#__PURE__*/_jsx(Observer, {\n      children: () => /*#__PURE__*/_jsxs(ThemeProvider, {\n        theme: this.preferenceManager.theme,\n        children: [/*#__PURE__*/_jsx(GlobalStyle, {}), /*#__PURE__*/_jsx(ErrorBoundary, {\n          children: /*#__PURE__*/_jsx(PreferenceManagerProvider, {\n            value: this.preferenceManager,\n            children: /*#__PURE__*/_jsx(ModalManagerProvider, {\n              value: this.modalManager,\n              children: /*#__PURE__*/_jsx(PopoverManagerProvider, {\n                value: this.popoverManager,\n                children: /*#__PURE__*/_jsxs(TooltipManagerProvider, {\n                  value: this.tooltipManager,\n                  children: [/*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps)), /*#__PURE__*/_jsx(ModalOverlay, {}), /*#__PURE__*/_jsx(PopoverOverlay, {}), /*#__PURE__*/_jsx(TooltipOverlay, {})]\n                })\n              })\n            })\n          })\n        })]\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}