{"ast":null,"code":"var _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { action, observable } from \"mobx\";\nimport { Modal } from \"./Modal\";\nexport let ModalManager = (_class = (_temp = class ModalManager {\n  constructor() {\n    _initializerDefineProperty(this, \"modals\", _descriptor, this);\n  }\n\n  spawn(options) {\n    this.modals.push(new Modal(this, options));\n  }\n\n  dismiss(modal) {\n    const index = this.modals.indexOf(modal);\n    if (index >= 0) this.modals.splice(index, 1);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"modals\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"spawn\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"spawn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"dismiss\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"dismiss\"), _class.prototype)), _class);","map":null,"metadata":{},"sourceType":"module"}