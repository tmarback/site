{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { InputField } from \"../../../../common/input/text/InputField\";\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\";\nimport { Markdown } from \"../../../markdown/Markdown\";\nimport { BackupManagerContext } from \"../BackupManagerContext\";\nimport { BackupItem } from \"./BackupItem\";\nconst Container = styled.ul.withConfig({\n  componentId: \"sc-1bbv68x-0\"\n})([\"padding:0;margin:0;max-height:420px;overflow-x:hidden;\"]);\nexport function BackupList() {\n  const backupManager = useRequiredContext(BackupManagerContext);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  return useObserver(() => backupManager.backups.length > 0 ? /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(InputField, {\n      id: \"backups-search\",\n      label: \"Search Backups\",\n      value: search,\n      onChange: setSearch\n    }), /*#__PURE__*/_jsx(Container, {\n      children: backupManager.backups.filter(backup => backup.name.toLocaleLowerCase().includes(search.toLocaleLowerCase())).map(backup => /*#__PURE__*/_jsx(BackupItem, {\n        backup: backup\n      }, backup.id))\n    })]\n  }) : /*#__PURE__*/_jsx(Markdown, {\n    content: \"You haven't made any backups yet.\" + \" Enter a name below and click on the Save button to make one.\"\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/site/site/modules/database/backup/modal/BackupList.tsx"],"names":["useObserver","React","useState","styled","InputField","useRequiredContext","Markdown","BackupManagerContext","BackupItem","Container","ul","BackupList","backupManager","search","setSearch","backups","length","filter","backup","name","toLocaleLowerCase","includes","map","id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,0CAA3B;AACA,SAASC,kBAAT,QAAmC,6CAAnC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACO,EAAV;AAAA;AAAA,8DAAf;AAQA,OAAO,SAASC,UAAT,GAAsB;AAC3B,QAAMC,aAAa,GAAGP,kBAAkB,CAACE,oBAAD,CAAxC;AAEA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEA,SAAOF,WAAW,CAAC,MACjBY,aAAa,CAACG,OAAd,CAAsBC,MAAtB,GAA+B,CAA/B,gBACE;AAAA,4BACE,KAAC,UAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,KAAK,EAAEH,MAHT;AAIE,MAAA,QAAQ,EAAEC;AAJZ,MADF,eAOE,KAAC,SAAD;AAAA,gBACGF,aAAa,CAACG,OAAd,CACEE,MADF,CACSC,MAAM,IACZA,MAAM,CAACC,IAAP,CACGC,iBADH,GAEGC,QAFH,CAEYR,MAAM,CAACO,iBAAP,EAFZ,CAFH,EAMEE,GANF,CAMMJ,MAAM,iBACT,KAAC,UAAD;AAA4B,QAAA,MAAM,EAAEA;AAApC,SAAiBA,MAAM,CAACK,EAAxB,CAPH;AADH,MAPF;AAAA,IADF,gBAqBE,KAAC,QAAD;AACE,IAAA,OAAO,EACL,sCACA;AAHJ,IAtBc,CAAlB;AA8BD","sourcesContent":["import { useObserver } from \"mobx-react-lite\"\nimport React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { InputField } from \"../../../../common/input/text/InputField\"\nimport { useRequiredContext } from \"../../../../common/state/useRequiredContext\"\nimport { Markdown } from \"../../../markdown/Markdown\"\nimport { BackupManagerContext } from \"../BackupManagerContext\"\nimport { BackupItem } from \"./BackupItem\"\n\nconst Container = styled.ul`\n  padding: 0;\n  margin: 0;\n\n  max-height: 420px;\n  overflow-x: hidden;\n`\n\nexport function BackupList() {\n  const backupManager = useRequiredContext(BackupManagerContext)\n\n  const [search, setSearch] = useState(\"\")\n\n  return useObserver(() =>\n    backupManager.backups.length > 0 ? (\n      <>\n        <InputField\n          id=\"backups-search\"\n          label=\"Search Backups\"\n          value={search}\n          onChange={setSearch}\n        />\n        <Container>\n          {backupManager.backups\n            .filter(backup =>\n              backup.name\n                .toLocaleLowerCase()\n                .includes(search.toLocaleLowerCase()),\n            )\n            .map(backup => (\n              <BackupItem key={backup.id} backup={backup} />\n            ))}\n        </Container>\n      </>\n    ) : (\n      <Markdown\n        content={\n          \"You haven't made any backups yet.\" +\n          \" Enter a name below and click on the Save button to make one.\"\n        }\n      />\n    ),\n  )\n}\n"]},"metadata":{},"sourceType":"module"}