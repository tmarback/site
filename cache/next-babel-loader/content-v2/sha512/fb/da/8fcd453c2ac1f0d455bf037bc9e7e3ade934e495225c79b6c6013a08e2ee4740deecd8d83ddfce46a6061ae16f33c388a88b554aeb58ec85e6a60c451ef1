{"ast":null,"code":"import _defineProperty from \"/home/runner/work/site/site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { defaultRules, inlineRegex } from \"simple-markdown\";\nimport { getCustomEmojiUrl } from \"../emoji/getCustomEmojiUrl\";\nconst CUSTOM_EMOJI_RE = /^<(a)?:(\\w+):(\\d+)>/;\nexport const customEmoji = _objectSpread(_objectSpread({}, defaultRules.text), {}, {\n  match: inlineRegex(CUSTOM_EMOJI_RE),\n  parse: capture => {\n    const [, animated, name, id] = capture;\n    return {\n      type: \"emoji\",\n      name,\n      emoji: name,\n      src: getCustomEmojiUrl(id, Boolean(animated))\n    };\n  }\n});","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/rules/customEmoji.ts"],"names":["defaultRules","inlineRegex","getCustomEmojiUrl","CUSTOM_EMOJI_RE","customEmoji","text","match","parse","capture","animated","name","id","type","emoji","src","Boolean"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,QAA0C,iBAA1C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AAGA,MAAMC,eAAe,GAAG,qBAAxB;AAEA,OAAO,MAAMC,WAAyB,mCACjCJ,YAAY,CAACK,IADoB;AAEpCC,EAAAA,KAAK,EAAEL,WAAW,CAACE,eAAD,CAFkB;AAGpCI,EAAAA,KAAK,EAAEC,OAAO,IAAI;AAChB,UAAM,GAAGC,QAAH,EAAaC,IAAb,EAAmBC,EAAnB,IAAyBH,OAA/B;AAEA,WAAO;AACLI,MAAAA,IAAI,EAAE,OADD;AAELF,MAAAA,IAFK;AAGLG,MAAAA,KAAK,EAAEH,IAHF;AAILI,MAAAA,GAAG,EAAEZ,iBAAiB,CAACS,EAAD,EAAKI,OAAO,CAACN,QAAD,CAAZ;AAJjB,KAAP;AAMD;AAZmC,EAA/B","sourcesContent":["import { defaultRules, inlineRegex } from \"simple-markdown\"\nimport { getCustomEmojiUrl } from \"../emoji/getCustomEmojiUrl\"\nimport type { MarkdownRule } from \"../parsers/MarkdownRule\"\n\nconst CUSTOM_EMOJI_RE = /^<(a)?:(\\w+):(\\d+)>/\n\nexport const customEmoji: MarkdownRule = {\n  ...defaultRules.text,\n  match: inlineRegex(CUSTOM_EMOJI_RE),\n  parse: capture => {\n    const [, animated, name, id] = capture\n\n    return {\n      type: \"emoji\",\n      name,\n      emoji: name,\n      src: getCustomEmojiUrl(id, Boolean(animated)),\n    }\n  },\n}\n"]},"metadata":{},"sourceType":"module"}