{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { cover, size } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useRequiredContext } from \"../../state/useRequiredContext\";\nimport { CheckableButton } from \"./layout/CheckableButton\";\nimport { CheckableContainer } from \"./layout/CheckableContainer\";\nimport { CheckableInput } from \"./layout/CheckableInput\";\nimport { CheckableLabel } from \"./layout/CheckableLabel\";\nimport { Positioner } from \"./layout/Positioner\";\nimport { RadioContext } from \"./RadioContext\";\nconst Button = styled(CheckableButton).withConfig({\n  componentId: \"sc-1aqn01m-0\"\n})([\"border-radius:50%;&::after{\", \";\", \";content:\\\"\\\";display:block;background:currentColor;border-radius:50%;opacity:0;transition:150ms;transition-property:opacity;}input:checked + &::after{opacity:1;}\"], cover(2), size(8));\nexport function Radio(props) {\n  const {\n    id: givenId,\n    label,\n    value,\n    disabled\n  } = props;\n  const group = useRequiredContext(RadioContext);\n  const id = givenId !== null && givenId !== void 0 ? givenId : `${group.id}_${value}`;\n  return /*#__PURE__*/_jsxs(CheckableContainer, {\n    children: [/*#__PURE__*/_jsxs(Positioner, {\n      children: [/*#__PURE__*/_jsx(CheckableInput, {\n        id: id,\n        type: \"radio\",\n        tabIndex: group.selected === value ? 0 : -1,\n        name: group.id,\n        value: value,\n        disabled: disabled,\n        checked: group.selected === value,\n        onChange: group.handleChange\n      }), /*#__PURE__*/_jsx(Button, {})]\n    }), /*#__PURE__*/_jsx(CheckableLabel, {\n      htmlFor: id,\n      children: label\n    })]\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/input/checkable/Radio.tsx"],"names":["cover","size","React","styled","useRequiredContext","CheckableButton","CheckableContainer","CheckableInput","CheckableLabel","Positioner","RadioContext","Button","Radio","props","id","givenId","label","value","disabled","group","selected","handleChange"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,MAAM,GAAGR,MAAM,CAACE,eAAD,CAAT;AAAA;AAAA,+MAINL,KAAK,CAAC,CAAD,CAJC,EAKNC,IAAI,CAAC,CAAD,CALE,CAAZ;AA+BA,OAAO,SAASW,KAAT,CAAeC,KAAf,EAAkC;AACvC,QAAM;AAAEC,IAAAA,EAAE,EAAEC,OAAN;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAA0CL,KAAhD;AAEA,QAAMM,KAAK,GAAGf,kBAAkB,CAACM,YAAD,CAAhC;AAEA,QAAMI,EAAE,GAAGC,OAAH,aAAGA,OAAH,cAAGA,OAAH,GAAe,GAAEI,KAAK,CAACL,EAAG,IAAGG,KAAM,EAA3C;AAEA,sBACE,MAAC,kBAAD;AAAA,4BACE,MAAC,UAAD;AAAA,8BACE,KAAC,cAAD;AACE,QAAA,EAAE,EAAEH,EADN;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,QAAQ,EAAEK,KAAK,CAACC,QAAN,KAAmBH,KAAnB,GAA2B,CAA3B,GAA+B,CAAC,CAH5C;AAIE,QAAA,IAAI,EAAEE,KAAK,CAACL,EAJd;AAKE,QAAA,KAAK,EAAEG,KALT;AAME,QAAA,QAAQ,EAAEC,QANZ;AAOE,QAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,KAAmBH,KAP9B;AAQE,QAAA,QAAQ,EAAEE,KAAK,CAACE;AARlB,QADF,eAWE,KAAC,MAAD,KAXF;AAAA,MADF,eAcE,KAAC,cAAD;AAAgB,MAAA,OAAO,EAAEP,EAAzB;AAAA,gBAA8BE;AAA9B,MAdF;AAAA,IADF;AAkBD","sourcesContent":["import { cover, size } from \"polished\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { useRequiredContext } from \"../../state/useRequiredContext\"\nimport { CheckableButton } from \"./layout/CheckableButton\"\nimport { CheckableContainer } from \"./layout/CheckableContainer\"\nimport { CheckableInput } from \"./layout/CheckableInput\"\nimport { CheckableLabel } from \"./layout/CheckableLabel\"\nimport { Positioner } from \"./layout/Positioner\"\nimport { RadioContext } from \"./RadioContext\"\n\nconst Button = styled(CheckableButton)`\n  border-radius: 50%;\n\n  &::after {\n    ${cover(2)};\n    ${size(8)};\n\n    content: \"\";\n    display: block;\n\n    background: currentColor;\n    border-radius: 50%;\n\n    opacity: 0;\n\n    transition: 150ms;\n    transition-property: opacity;\n  }\n\n  input:checked + &::after {\n    opacity: 1;\n  }\n`\n\nexport type RadioProps = {\n  id?: string\n  label: string\n  value: string\n  disabled?: boolean\n}\n\nexport function Radio(props: RadioProps) {\n  const { id: givenId, label, value, disabled } = props\n\n  const group = useRequiredContext(RadioContext)\n\n  const id = givenId ?? `${group.id}_${value}`\n\n  return (\n    <CheckableContainer>\n      <Positioner>\n        <CheckableInput\n          id={id}\n          type=\"radio\"\n          tabIndex={group.selected === value ? 0 : -1}\n          name={group.id}\n          value={value}\n          disabled={disabled}\n          checked={group.selected === value}\n          onChange={group.handleChange}\n        />\n        <Button />\n      </Positioner>\n      <CheckableLabel htmlFor={id}>{label}</CheckableLabel>\n    </CheckableContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}