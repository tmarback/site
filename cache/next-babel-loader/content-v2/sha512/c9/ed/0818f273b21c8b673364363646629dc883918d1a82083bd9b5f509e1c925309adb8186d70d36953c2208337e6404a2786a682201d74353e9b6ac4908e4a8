{"ast":null,"code":"import { LANGUAGES } from \"./languages\";\nexport const getLanguageFromAlias = alias => {\n  for (const language of LANGUAGES) {\n    var _language$aliases;\n\n    if (language.name === alias || (_language$aliases = language.aliases) !== null && _language$aliases !== void 0 && _language$aliases.includes(alias)) {\n      return language;\n    }\n  }\n};","map":{"version":3,"sources":["/home/runner/work/site/site/modules/markdown/code/getLanguageFromAlias.ts"],"names":["LANGUAGES","getLanguageFromAlias","alias","language","name","aliases","includes"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAmB;AACrD,OAAK,MAAMC,QAAX,IAAuBH,SAAvB,EAAkC;AAAA;;AAChC,QAAIG,QAAQ,CAACC,IAAT,KAAkBF,KAAlB,yBAA2BC,QAAQ,CAACE,OAApC,8CAA2B,kBAAkBC,QAAlB,CAA2BJ,KAA3B,CAA/B,EAAkE;AAChE,aAAOC,QAAP;AACD;AACF;AACF,CANM","sourcesContent":["import { LANGUAGES } from \"./languages\"\n\nexport const getLanguageFromAlias = (alias: string) => {\n  for (const language of LANGUAGES) {\n    if (language.name === alias || language.aliases?.includes(alias)) {\n      return language\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}