{"ast":null,"code":"import { controlled, converters, Field, Form, Group, RepeatingForm, SubForm } from \"mstform\";\nimport { isUrl } from \"../../../common/form/validators/isUrl\";\nimport { matchesRegex } from \"../../../common/form/validators/matchesRegex\";\nimport { maxLength } from \"../../../common/form/validators/maxLength\";\nimport { EditorManager } from \"../../editor/EditorManager\";\nimport { MESSAGE_REF_RE, WEBHOOK_URL_RE } from \"../../webhook/constants\";\nexport const editorForm = new Form(EditorManager, {\n  messages: new RepeatingForm({\n    content: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [maxLength(2000)]\n    }),\n    username: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [maxLength(80)]\n    }),\n    avatar: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [isUrl()]\n    }),\n    embeds: new RepeatingForm({\n      title: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [maxLength(256)]\n      }),\n      description: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [maxLength(4096)]\n      }),\n      url: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [isUrl()]\n      }),\n      color: new SubForm({\n        hue: new Field(converters.object),\n        saturation: new Field(converters.object),\n        value: new Field(converters.object)\n      }),\n      fields: new RepeatingForm({\n        name: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [maxLength(256)],\n          required: true\n        }),\n        value: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [maxLength(1024)],\n          required: true\n        }),\n        inline: new Field(converters.boolean, {\n          controlled: controlled.object\n        })\n      }),\n      author: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [maxLength(256)]\n      }),\n      authorUrl: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [isUrl()]\n      }),\n      authorIcon: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [isUrl()]\n      }),\n      footer: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [maxLength(2048)]\n      }),\n      footerIcon: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [isUrl()]\n      }),\n      timestamp: new Field(converters.object),\n      gallery: new Field(converters.stringArray, {\n        controlled: controlled.object,\n        validators: [value => {\n          var _value$map$find;\n\n          const check = isUrl();\n          return (_value$map$find = value.map((value, index) => check(value) ? `Image ${index + 1}: ${check(value)}` : false).find(Boolean)) !== null && _value$map$find !== void 0 ? _value$map$find : false;\n        }]\n      }),\n      thumbnail: new Field(converters.string, {\n        controlled: controlled.object,\n        validators: [isUrl()]\n      })\n    }, {\n      body: new Group({\n        include: [\"title\", \"description\", \"url\", \"color\"]\n      }),\n      author: new Group({\n        include: [\"author\", \"authorUrl\", \"authorIcon\"]\n      }),\n      footer: new Group({\n        include: [\"footer\", \"footerIcon\", \"timestamp\"]\n      }),\n      fields: new Group({\n        include: [\"fields\"]\n      }),\n      images: new Group({\n        include: [\"gallery\", \"thumbnail\"]\n      })\n    }),\n    reference: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [matchesRegex(MESSAGE_REF_RE, \"Invalid message link\")]\n    })\n  }),\n  targets: new RepeatingForm({\n    url: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [matchesRegex(WEBHOOK_URL_RE, \"Invalid webhook URL\")]\n    })\n  })\n});\nexport const createEditorForm = state => editorForm.state(state, {\n  backend: {\n    save: async node => node.save(),\n    process: async (node, path) => node.process(path)\n  }\n});\n\nconst repeatingMessageItemFormState = state => state.repeatingForm(\"messages\");\n\nconst messageItemFormState = state => state.index(0);\n\nconst repeatingEmbedItemFormState = state => state.repeatingForm(\"embeds\");\n\nconst embedItemFormState = state => state.index(0);\n\nconst repeatingFieldItemFormState = state => state.repeatingForm(\"fields\");\n\nconst fieldItemFormState = state => state.index(0);\n\nconst repeatingTargetFormState = state => state.repeatingForm(\"messages\");\n\nconst targetFormState = state => state.index(0);","map":{"version":3,"sources":["/home/runner/work/site/site/modules/message/state/editorForm.ts"],"names":["controlled","converters","Field","Form","Group","RepeatingForm","SubForm","isUrl","matchesRegex","maxLength","EditorManager","MESSAGE_REF_RE","WEBHOOK_URL_RE","editorForm","messages","content","string","object","validators","username","avatar","embeds","title","description","url","color","hue","saturation","value","fields","name","required","inline","boolean","author","authorUrl","authorIcon","footer","footerIcon","timestamp","gallery","stringArray","check","map","index","find","Boolean","thumbnail","body","include","images","reference","targets","createEditorForm","state","backend","save","node","process","path","repeatingMessageItemFormState","repeatingForm","messageItemFormState","repeatingEmbedItemFormState","embedItemFormState","repeatingFieldItemFormState","fieldItemFormState","repeatingTargetFormState","targetFormState"],"mappings":"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","sourcesContent":["import {\n  controlled,\n  converters,\n  Field,\n  Form,\n  Group,\n  RepeatingForm,\n  SubForm,\n} from \"mstform\"\nimport { isUrl } from \"../../../common/form/validators/isUrl\"\nimport { matchesRegex } from \"../../../common/form/validators/matchesRegex\"\nimport { maxLength } from \"../../../common/form/validators/maxLength\"\nimport { EditorManager, EditorManagerLike } from \"../../editor/EditorManager\"\nimport { MESSAGE_REF_RE, WEBHOOK_URL_RE } from \"../../webhook/constants\"\n\nexport const editorForm = new Form(EditorManager, {\n  messages: new RepeatingForm({\n    content: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [maxLength(2000)],\n    }),\n    username: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [maxLength(80)],\n    }),\n    avatar: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [isUrl()],\n    }),\n    embeds: new RepeatingForm(\n      {\n        title: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [maxLength(256)],\n        }),\n        description: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [maxLength(4096)],\n        }),\n        url: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [isUrl()],\n        }),\n        color: new SubForm({\n          hue: new Field(converters.object),\n          saturation: new Field(converters.object),\n          value: new Field(converters.object),\n        }),\n        fields: new RepeatingForm({\n          name: new Field(converters.string, {\n            controlled: controlled.object,\n            validators: [maxLength(256)],\n            required: true,\n          }),\n          value: new Field(converters.string, {\n            controlled: controlled.object,\n            validators: [maxLength(1024)],\n            required: true,\n          }),\n          inline: new Field(converters.boolean, {\n            controlled: controlled.object,\n          }),\n        }),\n        author: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [maxLength(256)],\n        }),\n        authorUrl: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [isUrl()],\n        }),\n        authorIcon: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [isUrl()],\n        }),\n        footer: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [maxLength(2048)],\n        }),\n        footerIcon: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [isUrl()],\n        }),\n        timestamp: new Field<Date, Date>(converters.object),\n        gallery: new Field(converters.stringArray, {\n          controlled: controlled.object,\n          validators: [\n            (value: string[]) => {\n              const check = isUrl()\n              return (\n                value\n                  .map((value, index) =>\n                    check(value)\n                      ? `Image ${index + 1}: ${check(value)}`\n                      : false,\n                  )\n                  .find(Boolean) ?? false\n              )\n            },\n          ],\n        }),\n        thumbnail: new Field(converters.string, {\n          controlled: controlled.object,\n          validators: [isUrl()],\n        }),\n      },\n      {\n        body: new Group({ include: [\"title\", \"description\", \"url\", \"color\"] }),\n        author: new Group({ include: [\"author\", \"authorUrl\", \"authorIcon\"] }),\n        footer: new Group({ include: [\"footer\", \"footerIcon\", \"timestamp\"] }),\n        fields: new Group({ include: [\"fields\"] }),\n        images: new Group({ include: [\"gallery\", \"thumbnail\"] }),\n      },\n    ),\n    reference: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [matchesRegex(MESSAGE_REF_RE, \"Invalid message link\")],\n    }),\n  }),\n  targets: new RepeatingForm({\n    url: new Field(converters.string, {\n      controlled: controlled.object,\n      validators: [matchesRegex(WEBHOOK_URL_RE, \"Invalid webhook URL\")],\n    }),\n  }),\n})\n\nexport const createEditorForm = (state: EditorManagerLike) =>\n  editorForm.state(state, {\n    backend: {\n      save: async node => node.save(),\n      process: async (node, path) => node.process(path),\n    },\n  })\n\nexport type EditorFormState = typeof editorForm.FormStateType\n\nconst repeatingMessageItemFormState = (state: EditorFormState) =>\n  state.repeatingForm(\"messages\")\nexport type RepeatingMessageItemFormState = ReturnType<\n  typeof repeatingMessageItemFormState\n>\n\nconst messageItemFormState = (state: RepeatingMessageItemFormState) =>\n  state.index(0)\nexport type MessageItemFormState = ReturnType<typeof messageItemFormState>\n\nconst repeatingEmbedItemFormState = (state: MessageItemFormState) =>\n  state.repeatingForm(\"embeds\")\nexport type RepeatingEmbedItemFormState = ReturnType<\n  typeof repeatingEmbedItemFormState\n>\n\nconst embedItemFormState = (state: RepeatingEmbedItemFormState) =>\n  state.index(0)\nexport type EmbedItemFormState = ReturnType<typeof embedItemFormState>\n\nconst repeatingFieldItemFormState = (state: EmbedItemFormState) =>\n  state.repeatingForm(\"fields\")\nexport type RepeatingFieldItemFormState = ReturnType<\n  typeof repeatingFieldItemFormState\n>\n\nconst fieldItemFormState = (state: RepeatingFieldItemFormState) =>\n  state.index(0)\nexport type FieldItemFormState = ReturnType<typeof fieldItemFormState>\n\nconst repeatingTargetFormState = (state: EditorFormState) =>\n  state.repeatingForm(\"messages\")\nexport type RepeatingTargetFormState = ReturnType<\n  typeof repeatingTargetFormState\n>\n\nconst targetFormState = (state: RepeatingTargetFormState) => state.index(0)\nexport type TargetFormState = ReturnType<typeof targetFormState>\n"]},"metadata":{},"sourceType":"module"}