{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { error } from \"../../../icons/error\";\nimport { warning } from \"../../../icons/warning\";\nimport { Icon } from \"../../layout/Icon\";\nconst InputValidationError = styled.div.withConfig({\n  componentId: \"wmde04-0\"\n})([\"display:flex;align-items:center;color:\", \";font-size:16px;font-weight:500;padding-top:8px;height:24px;& > \", \"{margin-left:-8px;color:currentColor;}\", \";\"], ({\n  theme\n}) => theme.accent.danger, Icon, ({\n  variant\n}) => variant === \"warning\" && css([\"color:\", \";\"], ({\n  theme\n}) => theme.accent.warning));\nexport function InputError(props) {\n  const {\n    variant = \"error\",\n    error: errorMessage = \"\"\n  } = props;\n  const hasError = Boolean(errorMessage);\n  const {\n    0: shouldRenderError,\n    1: setShouldRenderError\n  } = useState(hasError);\n  const errorStyle = useSpring({\n    config: {\n      tension: 300,\n      clamp: true\n    },\n    opacity: Number(hasError),\n    height: errorMessage ? 24 : 0,\n    onRest: () => setShouldRenderError(hasError)\n  });\n  if (!shouldRenderError && !hasError) return null;\n  return /*#__PURE__*/_jsx(animated.div, {\n    style: errorStyle,\n    children: /*#__PURE__*/_jsxs(InputValidationError, {\n      variant: variant,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        children: variant === \"error\" ? error : warning\n      }), errorMessage]\n    })\n  });\n}","map":{"version":3,"sources":["/home/runner/work/site/site/common/input/error/InputError.tsx"],"names":["animated","useSpring","React","useState","styled","css","error","warning","Icon","InputValidationError","div","theme","accent","danger","variant","InputError","props","errorMessage","hasError","Boolean","shouldRenderError","setShouldRenderError","errorStyle","config","tension","clamp","opacity","Number","height","onRest"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,oBAAoB,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA,kKAIf,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,MAJb,EAWlBL,IAXkB,EAgBtB,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,OAAO,KAAK,SAAZ,IACAT,GADA,kBAEW,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaL,OAFvC,CAjBsB,CAA1B;AA4BA,OAAO,SAASQ,UAAT,CAAoBC,KAApB,EAA4C;AACjD,QAAM;AAAEF,IAAAA,OAAO,GAAG,OAAZ;AAAqBR,IAAAA,KAAK,EAAEW,YAAY,GAAG;AAA3C,MAAkDD,KAAxD;AAEA,QAAME,QAAQ,GAAGC,OAAO,CAACF,YAAD,CAAxB;AACA,QAAM;AAAA,OAACG,iBAAD;AAAA,OAAoBC;AAApB,MAA4ClB,QAAQ,CAACe,QAAD,CAA1D;AACA,QAAMI,UAAU,GAAGrB,SAAS,CAAC;AAC3BsB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE,GAAX;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KADmB;AAE3BC,IAAAA,OAAO,EAAGC,MAAM,CAACT,QAAD,CAFW;AAG3BU,IAAAA,MAAM,EAAEX,YAAY,GAAG,EAAH,GAAQ,CAHD;AAI3BY,IAAAA,MAAM,EAAE,MAAMR,oBAAoB,CAACH,QAAD;AAJP,GAAD,CAA5B;AAOA,MAAI,CAACE,iBAAD,IAAsB,CAACF,QAA3B,EAAqC,OAAO,IAAP;AAErC,sBACE,KAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEI,UAArB;AAAA,2BACE,MAAC,oBAAD;AAAsB,MAAA,OAAO,EAAER,OAA/B;AAAA,8BACE,KAAC,IAAD;AAAA,kBAAOA,OAAO,KAAK,OAAZ,GAAsBR,KAAtB,GAA8BC;AAArC,QADF,EAEGU,YAFH;AAAA;AADF,IADF;AAQD","sourcesContent":["import { animated, useSpring } from \"@react-spring/web\"\nimport React, { useState } from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { error } from \"../../../icons/error\"\nimport { warning } from \"../../../icons/warning\"\nimport { Icon } from \"../../layout/Icon\"\n\nconst InputValidationError = styled.div<{ variant: \"error\" | \"warning\" }>`\n  display: flex;\n  align-items: center;\n\n  color: ${({ theme }) => theme.accent.danger};\n  font-size: 16px;\n  font-weight: 500;\n\n  padding-top: 8px;\n  height: 24px;\n\n  & > ${Icon} {\n    margin-left: -8px;\n    color: currentColor;\n  }\n\n  ${({ variant }) =>\n    variant === \"warning\" &&\n    css`\n      color: ${({ theme }) => theme.accent.warning};\n    `};\n`\n\nexport type InputErrorProps = {\n  variant?: \"error\" | \"warning\"\n  error?: string\n}\n\nexport function InputError(props: InputErrorProps) {\n  const { variant = \"error\", error: errorMessage = \"\" } = props\n\n  const hasError = Boolean(errorMessage)\n  const [shouldRenderError, setShouldRenderError] = useState(hasError)\n  const errorStyle = useSpring({\n    config: { tension: 300, clamp: true },\n    opacity: (Number(hasError) as unknown) as undefined,\n    height: errorMessage ? 24 : 0,\n    onRest: () => setShouldRenderError(hasError),\n  })\n\n  if (!shouldRenderError && !hasError) return null\n\n  return (\n    <animated.div style={errorStyle}>\n      <InputValidationError variant={variant}>\n        <Icon>{variant === \"error\" ? error : warning}</Icon>\n        {errorMessage}\n      </InputValidationError>\n    </animated.div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}