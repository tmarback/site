{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { isValid } from \"date-fns\";\nimport { rem } from \"polished\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { formatTimestamp } from \"./formatTimestamp\";\nconst Display = styled.span.withConfig({\n  componentId: \"sc-1idsap7-0\"\n})([\"display:inline-block;height:\", \";cursor:default;color:\", \";\", \";\", \";\"], rem(20), ({\n  theme\n}) => theme.text.muted, ({\n  theme\n}) => theme.appearance.display === \"cozy\" && css([\"margin-left:\", \";font-size:\", \";font-weight:500;line-height:\", \";vertical-align:baseline;\"], rem(4), rem(12), rem(22)), ({\n  theme\n}) => theme.appearance.display === \"compact\" && css([\"width:\", \";margin-right:\", \";font-size:\", \";line-height:\", \";text-align:right;text-indent:0;\"], rem(48), rem(8), rem(11), rem(22)));\nexport function Clock(props) {\n  let {\n    timestamp\n  } = props;\n  if (timestamp && !isValid(timestamp)) timestamp = undefined;\n  const theme = useTheme();\n  const format = useCallback((timestamp = new Date()) => {\n    if (theme.appearance.display === \"compact\") {\n      return timestamp.toLocaleString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        hour12: true\n      });\n    }\n\n    return formatTimestamp(timestamp);\n  }, [theme.appearance.display]);\n  const {\n    0: displayedTime,\n    1: setDisplayedTime\n  } = useState(() => format(timestamp));\n  useEffect(() => {\n    if (!timestamp) {\n      const interval = setInterval(() => setDisplayedTime(format()), 1000);\n      return () => clearInterval(interval);\n    }\n\n    setDisplayedTime(format(timestamp));\n  }, [format, timestamp]);\n  return /*#__PURE__*/_jsx(Display, {\n    children: displayedTime\n  });\n}","map":null,"metadata":{},"sourceType":"module"}