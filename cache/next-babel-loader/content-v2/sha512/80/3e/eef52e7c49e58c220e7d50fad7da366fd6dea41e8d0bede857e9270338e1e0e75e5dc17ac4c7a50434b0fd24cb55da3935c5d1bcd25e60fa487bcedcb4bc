{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { error } from \"../../../icons/error\";\nimport { warning } from \"../../../icons/warning\";\nimport { Icon } from \"../../layout/Icon\";\nconst InputValidationError = styled.div.withConfig({\n  componentId: \"wmde04-0\"\n})([\"display:flex;align-items:center;color:\", \";font-size:16px;font-weight:500;padding-top:8px;height:24px;& > \", \"{margin-left:-8px;color:currentColor;}\", \";\"], ({\n  theme\n}) => theme.accent.danger, Icon, ({\n  variant\n}) => variant === \"warning\" && css([\"color:\", \";\"], ({\n  theme\n}) => theme.accent.warning));\nexport function InputError(props) {\n  const {\n    variant = \"error\",\n    error: errorMessage = \"\"\n  } = props;\n  const hasError = Boolean(errorMessage);\n  const {\n    0: shouldRenderError,\n    1: setShouldRenderError\n  } = useState(hasError);\n  const errorStyle = useSpring({\n    config: {\n      tension: 300,\n      clamp: true\n    },\n    opacity: Number(hasError),\n    height: errorMessage ? 24 : 0,\n    onRest: () => setShouldRenderError(hasError)\n  });\n  if (!shouldRenderError && !hasError) return null;\n  return /*#__PURE__*/_jsx(animated.div, {\n    style: errorStyle,\n    children: /*#__PURE__*/_jsxs(InputValidationError, {\n      variant: variant,\n      children: [/*#__PURE__*/_jsx(Icon, {\n        children: variant === \"error\" ? error : warning\n      }), errorMessage]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}